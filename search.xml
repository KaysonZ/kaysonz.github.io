<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>现代通信网络-Ch17-TCP_IP</title>
      <link href="/posts/8b42621c.html"/>
      <url>/posts/8b42621c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3b43d8fe7298eccfda6fe9ccec61fcfc48bd81b537396ccd377daa420f5dac49">3624a8dbefab98d376ab749e8d651413f319625409319f7277905376b8ea2f91f7b030075d16ff5d280cfb59670bca8e28c699aa1f555f04240bfa6f1818bbe522369cdbfb6983b82a08da1f6f42acd3c6ceb751e3c13ec17aedaaeb02f7c4886fe0d5dc39e833104dd620569ece3398fcce7e332d25eff75e5a60e475b3031f43889e8d2ed1f30fde02ac0f1fe78dec7f40a6d0056def2a49cb1e7d8587f07182ca96200fcc40c5ea3864983286e403fdf3f2cb3bc327a01c16173acc57afbf45c4a42d7162ab369fe28d0b74da725dd80cba8f849eb86a2a5ba061cdc2f11232f3d068d3b1caf730885ba3e89630507625e345a7a1bffba71ee62015bd9a1c33a750a18e60425c0f378c825fe578fdea6b79e7ae5acd8921b148dbd021c96f1b5774222deae9cacef01dfd079da4c7ce40a3784996eceb5795de042cc841ed57d437925896b3d8a5c495a2749fcd6d8ae85a85e196627b387c44417b82c237c0823c99100c157c947d8cdba1b13f7bf6740d725dd156e09e700a134b35f69b83b7c1f3add9f68bb22cfc7fc9cd16700b2971684ba90ce95e0ca9e214aa49f5973bed7d45027993862fae4147c203dc7f63bb60ec3c03c9115a24ebee79f62a75b27788b17a7ffbdd9370fff0fbeff068ea028291d2db1e1270d69b902e5c56854d0f5306d397d020fdd59689b8c729b8076098f27883a0c92a25e792f93d676d515190484ee471b7548b7fd8dc71ef440d5f98eaba677ed490884c104a0b9635387de4aeafa6a70166ce0e3cb5c9620d4aeff3f0aa0009852cb901e5e64c19f847ab224adb1e2f1d96591560065c8a8a761a85e43fd207069c10fd4188437576661dfad7e3dced3d8e32f99b2cdd53d1ab2ec354acf64e19724effea51469e9a3892d64188f6c6f9eaec23efca456a46df60cdbf17390ca613ee031caf23c2e1290b7d0cdf9e13cb09515cc8eed7394733e14db42334cebeb63e77edeae7bffde78f6486102648f04b8fc1d76a2f93c5305d9474d636d51f7f92c2c6b126ebcedd5480e9b1db7dc35f4e143d9601ce4c5571f8f981589f888fd47a6d42cc0c939a21eedb74de5889828c97ee1350f4c32cc2175af6953c86ff85950dc38b955fc38efb0261f1af57fd72fb4cee40bb9f60bd3f3dc5054d96ee2731db7ba912ae45f52b09a573aae24701bca3f2ccfe7cf34c85a9ae3bab49e08ba4ddbd11416b1bef6962c1b582b4fbca933689b40d7715f4eba02b14131fc88016b7b07842853026a20d0d1618932dfe4b06bee0289542f32a0b205274c16d281323720d862f341376bcbd85ded3db628bdc97f7fc3710733f1e5c3cae66ce1c79550ac0446d1d2b22054ac514bc114f6d663bcf87d95c035e13aebeef0b65e752273f0c8530c30b5d41054b51bf52996140d5644822033d9971cbc04e301550cd23c88ca7647a0553fee50f7f9de37f92d4c2478bf4ef6829a81614dbf9b39401aa2e909cb865492cdf8fac4d26900df21486a20a885618b0f56ccbe705410f087a0d3064303f52ad09a5695f96f55c3a550f4138e6b28396a1127b1ddddae3b24dd36101cbdc8f75a4241a54bd544086d1789775a2d668c409003ee2eedcc99efbcf245693533cdf62f99cfb7a197e56df3615367b8c06883ee430c04d60d860c65a499cabd296d60e2182784ae67d38f5a91b8c7f766d7c6e16ee7fcc78f62020e5cffb177823311f06ce5b72251861edc01d0d9c2fd13a628e37a7f5f27b276bebd2cafdcd300ad7003f76c76dfa3e3f2ceb823266945198c5372a6a6ae7506858d574e089514b0014110a03892741be09e1a867036307596315ceca4f762a6d45d94896d4bb37cde1e20d7ef76b3afb15bf0816e9632dfa2041abdfbd4abfa63c9be6a00d6c266859b3014a597eec869d786be722b9353c22b5d5526c22336d60c9b54a503d101b987df36cfab2a1c5b7d72011adf3fc758e87f8432b15f396ae08deaa4364d2b9774967c5e6600dd202da06912b9fcd1a67952d0dca05269b15e1bf2f1e828a1f5a94883313e26cadcde1a6b44af8d063660f64152ed0bb594c9b3d79b7557208bfdfdaca2ab11af0b4d4f9938c0d5297e7a90cad4618fbd923c8c9821dc4b35b0e9e0420a920c2037dead1a100481fd8875bccc4c86ae188d0eab57dd85e63fab01c05cda72b7334b6a629988004ec601fe8bbae7bfafa239b3e969983ddddb1c8a55a67f0ec0da0d26d56db25c50a650d3d79d5b06b48b475aa0e21d98bb6c1a953d3e1f6979dea526b17f2f02c73132dc629ed2e981dd85aed1447750cf69dcd0703035eb5079d59e3ab5bdc2dd0b3a7377ba40ae38d41a61bb0e00f468602c67a5ceaaf53355406fe22430525999783b246edf863a0385a5a71628c5877774274b69065caa6532ed5a31dedf976cbbfae78d638ceaeac647f736e7fdc127c66113c57b7cf11be269179d7e3716b03172f07252f137e512476808b64a15601b417672653c103161213c3e0da61fd128d901f68089d625549cb8a43c4665659334e88331a891c1d6812d5b046d79877fb998fc950ad5c42d6ee58e5de1a0c32fbe84f1d9c85ba6bf68434e790cfbc9169c2e867afb96459cc789a36e35bb90b3f2034d9e49b9506088b01ddce4bdd2621bcd1081366309099cfe2bd8fb131f4659e1201fd3d87aecfbda9316ea1d13d5e4ecb3d094aa2d715b896505848323e2716db961d32bb9293ddeecdd8c133d76ac0023ea19e9c7644ffb0a418ab3923a66c735354a07fd9cd9c3b0da4692165327a7eb8b8286f6ba445e1ae966abd4d303169002b0391646c9b835d6c5ddf7028355758f1d539c8624215f90271cea284e969675a0a128e20e8eb6e3a929a59d0b295890dcbafadd459a82354981f9b184c543b5a3f34853273cc8c0aa6d4e689e18576ee1276a2efe59f0721d7c8ed9c9d90039559615176c9d215c38e47bc6a8988605a50b36c05791649670816905da48152af3085ca3b797765be57ba0dc94c98bb7a703b14cd85aa2bb476963c18f003cd70b58437dcb8921908923c7f1e414f1f878e3226ee1a1a6f561fff2a7d756205bc0cddedfb59e665baa1080e5ee788e505ee44715aa9c551382f300e8f9a775d7023778b30ce26d1704f464324be9325f38c0f17fe30d57788d9d57db10cfc4128dbafe05333bea09bc3dcb14f46079cbcfc7df44760fe8d997fe5775933a4512ae0b9a25a1919e07828b435cdadc5b7af6b4a7666987412fa6d00cd73f2757078c7381643353e9391e0c92a37f880d4152f91e9c0ebae927d940f8a86e9d97eac0a52a03b665497c73ec1e6023a66f55a70b1109de2f5d4310534b009919cd70b9fc7a56eb305b4b78d47439564d061db846b3d28943684d9bfe3ea0c169d46d864e4e31fd8c00d24f4ab443d91cde63b7f1706c261fb942c04fec9f8918dab32320a935aae2cb59c1c94ae4e0dec87c1a7f700eb749296b0d91763921b8c50434f0345fef5ba5404eafac32a5152eb37dfe6b3be3fd2002379f50da0ab560db361149000a73c960f86c9d623b5240b5733a459ba5ad6094e7cb1f3164516692d42b7a896992f84abe379334483a08203a722d4b26219bcb21b2f53686d43c3958cb307feae36c4b6513cb410cbcf5a84db9ace06bb4cf2ddf35c95097fcc6653e5fa6d5362069224b8a2349df619c7382491dc382f7494460e9d3f1607aa294b4fcb17bbea40c64f9eca5bdd6f597f4f65c4ed287a554ca053240b846fb13b22502522e528f999f96ea265d4e91908bde8211a1ab7884e85730dc5c7ab0aa7b511a0cbb1f2a428637317b0d2f6a182050cb4e83942134a30f0bbafe9553cf51cf46f39b90a1c9b47c9be315a2fe15ead9c3bc9d4bf8f36afeacf4a24e6c21a93196c52a7e2dbc40175838731e8fd86e807b1c487b6aeebc420866de3d22708cdbcce8c9d11e45f7895edfbdfd92b91fb92dd63a7f852e647a79ca645c9e4c6c9ad8cd4f49adcf48ec31041f3029645219e2a7e6a3518843cdb6d9e793d7d7a8afc53a608173cda74682c8f88ac7d7c6ba016659f8bccf89a76beb7d499d3cb62b822eceb79a6e6d91b919b98ff4452038e6fd44400b7faf09e79a14051d6e2c47c76b92c4ef4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动通信-Ch5-3G通信</title>
      <link href="/posts/9e046886.html"/>
      <url>/posts/9e046886.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="458a4c8de60f759b3573322e9eaef90681cf60bac32f922445619939264ccef5">3624a8dbefab98d376ab749e8d6514139d6f195f14d4116ee8335b43574084e255210a9deabbf12be405660d7f64b13ecba16b6eaf8ef87fdd395e939b1bf615f5afa2080af06adefde11e01964b13c79ad5ce1ed0aefe766d23dc6c95066bd59056b5df814cc9d7c8585c74144b419525cc824f35098cae7cd3bfe888cec547596cf58de1957142c333760bc1c9c154a72adc6f90093d6fcf6f8e298ebbb37f2187beed42a830525c8878684b9c81af428cf5c378c26db540fd6cf0a502c7fb90032b085870cc9023e50f6d4ed7925693caf24a7a6e275ae67623fb649a53fe3afc45ad4f43720b70a5a34f0d22a1cdcfd6b01676462576110f5c947dd5de0fa85584805a4bb5c0051434ebcafcb8786f20352fa6d540be645690379b1cf37036fbd68492a18d3386ea224973dbe6ea647d653c7960c932fb37e494892f7934ab25caf278f50a209e169951c1c095f27f20b64643a06259d47cbbae4c940dc1ab29cdb1aa176677895887a7bdd18233cdbcfcdd0a7d75afe809cfdb9081bd6cb84272912ec20b4ed9b80838526eb31c768c835942531526251eea2516c4f1485c1369347fddf282ebffc851d58de3b1386a64191113064ef5fe9892735cf5eb5958e200e6a467130829526319a3f974bf818e003d3986584a975d62dfd2e409ef648350e3749d1777c10bd5ef705b58d3d0140bd84666c5b3ee1a752abb618404f6974b47981d1f9e11d73687486172393411a157e2625458d4f2f58a2d6e32617633459a0bc7ea568e21e0c9c52bc2f5a1686731d533f678c21f0facac6b83066bfba733489621d3838470f0e0a8d7a770291cfb3bd1fff76773f4433d3fe93d24ebf7cd2ebe15968d68142cf7a83ce129c659c976b568a281772c3bf6d6d438e415cede49f4da4298f9b7a5be3c0055935d088a12b17909c1555a5c01104798e54a4315b383e781f8d3b9297ce1e14c202c29d4b215c2fdcab83bbf7e22a5f8886f071324752804a25fd51a482bcdc06b2b86e6dc3b363daa4e4966fff768a0478503c129ff604e117b6ef86d0dac5995d00801b2ff7dfb1c8024bb0a56ee4e35f401fce2831a3109925eee6871b9df952557237b5047a25ed0c14c4cc462a52e428865606b6215069193ba279b61440d2a47d3dff0cd0400f723e0255a8fa7f9a4fc0c9dbdd2780637aa4cbc6fed97f9e43f6c65b910435a0c44963c8d764e6c65d0b9e30a2cc0f6f9e3636c547e417e371883f52a92a659bdd6c9252816dd7831a1bcb8f79b106e67e751cee731f3d9a25f73de2f308f6f928f5ab5e3e0fbfbe9cb23f50ff32b2d120c93bd39f2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 移动通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Control Systems Part1-1-控制系统概述及其基本分析</title>
      <link href="/posts/b1714978.html"/>
      <url>/posts/b1714978.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="65f1397d090a44d1ba64ca7dd747255693d6a7b9266c83d2fa7b23ea4b6f293e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 控制系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 信号与系统分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动通信-Ch4-2G通信</title>
      <link href="/posts/bd6c0326.html"/>
      <url>/posts/bd6c0326.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="50a1ff17e245cf8bfc575005f777c3bed4c1d4e19105684cda8581c97b72e54d">3624a8dbefab98d376ab749e8d6514139d6f195f14d4116ee8335b43574084e2be4da3d07ff137251601f6b42bcc8208c6da22958aea6bdcb63e872a82f6a6550f743ec0daa66e5f5384e0fcec62c69d565853987ff98a618f53230b25773df35cfdc91656a8e7154c61775947affea3e1074d1bf4881d69245d8d7045618530d12e158ee155df616abdfa2fbf8328edd85c4a9063b697deb243c87c172d16e229422f737a4e6c6637a6b181815760174ba171e1e35fe95aed9f92c86706e7150c3214eba0eaca74a3ce06b2a388f617fffbd1664593b53a2a175fd48d69a3d8b0ae5ea25d5a532273381223ff6856d6b5b391d1df9d63f902ffe5b2b4f2607ac78b9fa6a4eadf8726bfac5878b1fce482614047ea3ae568b6c00a09524fbd5346e2eb373a1bf4dbb2af2244a1001d60974f1d91f082fb50e8aa6939f610565e6d519297feb1b49d6cf12682efa97a469993ff20e29964f925c6992a59beb77c9eef30e6e204d3f631c870b043df97f07aab498dc51552410e18a6297b6975960ba7bbfe53f05acbddcebd52aadc534b5de3ccccb86a2d7499b24a73309866c2b04eace87fc8b08969191591fa1224e1923317ed95ff8022fc6e925b7996f8e968bd827de2afd916cdc0eba5475e610940599831b6b802ea17a057a7fa1fb751d03c3262bf2bf6cc8b8f3ba1fcd85b23fd0505778c3f301e4fbf4dd2141fd8d5c91cefa7920148d470b8ecf07bce10c43025167b8eb3c0ba177560d348b5bdd8d285f25cca546f4c7fcc8497d1fbe2291eb85d2bc3504eda4de5a610589dc9b3120bf0eed8c1ea5d1947b1856e1041db202dd8f0527787e4ed0eef2cc2b2b018</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 移动通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch15-局域网</title>
      <link href="/posts/53d8b267.html"/>
      <url>/posts/53d8b267.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2b9d617b6a44f88d190e48d0dfe565dbca820bcd6968f7e305f65eb8ba0275a0">3624a8dbefab98d376ab749e8d6514139d6f195f14d4116ee8335b43574084e2e640118902ecb6a55be115e609b87a74ecb6fcc88558d973247a30aaad7ceb6c5ff9e495bea1fa21c476e402b2f1732752a9573743b46f093d038007cae082b9a5c4c9504786adfdff86dfaf453fd59b5fd285270eb3146699b8f894f527fb190705834f61e862307f82985be5d204f1a1718a4928d367acd5b6dea4b2f87dd8ccadf06cb91da2f191c27ad06c9d9e2001cf8ce0cd44c8c0b77f306bedb3f63c450923b28ca5c467ef8068c00ac847d4385f6ebe4087f4764c93307b018188bbf766b36a24d69b8650fa79acc9bdc480dc323467f914f69da5ca40bcf02e34dace3e4e15786ce8a827c8e113ebba29e30732de73cf02c615aa5a05e69c5b48a09d7fcc366e66d6b536dec8e88b26629cf35646bd132015135a36b46af75ecccb92f150beda6b856cd3be81002bf68c4e02e566f11de3da6971d50bd8c65da304</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信传输理论-CH6-光传输线</title>
      <link href="/posts/f7c4d047.html"/>
      <url>/posts/f7c4d047.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="7a980346030f92ca8bcb93d061e1e9dc631aaeb6b4f1f8769ddfa51213a0ba56"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 电信传输理论与工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch10-电路交换和分组交换</title>
      <link href="/posts/a8a0740e.html"/>
      <url>/posts/a8a0740e.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0cec913dc9dc9b1cda4c37a13c373af49a7f67c21c72e928fd16386b77e52814"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch11-ATM</title>
      <link href="/posts/4f4df209.html"/>
      <url>/posts/4f4df209.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="6d986c7b71dd3ca5fe8084b4d6163a1c9ead20eb68ef251a7d8a67d7a3ad0ee5">3624a8dbefab98d376ab749e8d6514135796b537ecc3174eaa74ea9a860fa4ff5ef13a354f6e766af7200a4cc62a7e778d0537b65f42ef5a008fa92e5eb116df1f3621d554a1cfed458420711bf98089d0a911254d6fef06c6cc3a86982e67a67fe8e7bad335f88c83372443605babde0813bcebaa7a7082b383874a91008c11cccf7e63cefdc89ac2912a53ff1631df05d01733b69a92768093270793e9bb5742a5cb1d9dcbf8e4e227f24ac5f990dbc4a6cd71fd6971af3fbfa7bb6f785c7dced0a65d2bec21bdcb9aa10cd9b84831e6be84b8a249f6070d561e67632eedfd8cb26fd7ee8c7279ecef41c16627898c4487372f386c1f1eeef088197dec33e9b070e28f8b752629866070ce8785fbf826c57df3f38cb12f4a5d36003449ec83cb005366f7a458031cedba170e6305eec7de8ea4835418b347a98b003fc23c744de41a287d484cb7d3bd14d6b0c018a5250609494e54dd734026f2ea182bb33bbf0edadc005e565c278b8d1c93a5f9870bee4d42d7ff56e89b3b515f00fe1f3f71825aff5997eb81000c4353cd61a3375117844b27c51341c7d353fb6c3ba0674aaa76a987cd98f005b621e99375def2007d7a059ae5f5a838a5ccb76c2036749c464872a647deda503c304dc0a5c96f268742d2568fa889efa57fab4a2f240bc2bfb13771e3f1725a7fd4f1a73ff1756b9c34eeb6b8abc51a141ae659cbd42a317084e4c2b6d1ae97860bd2ac1447efffc33e44be96c087299636e020960601abd37377d9294b88bbe8fc6d198209f2efaf0da43139170a5c1920491422e579de165ed3a255ff98e471dad633e66c81544ae6f214e93adc665d1192457db64b4977e621517eeccb94be8c5853818ca658669bfd05bb2e38ad3481567902a0b4a11715a6c6cec61078a62b65932c8451a951072784599a754877b168f4d257fbe1b01ecc196f84f49060d8e9ecb0064e6df47a2c3880978503beb4dd1f9b8ce98b14290860d29ea55d463da2d74b968e8fe4b4069769e7d4fc25bd05021626affc7a175454a6582d47e2dd1abe5f55aee22fc9cd19593e5517dd686aa5ae425def4866c13d731848ef5471b3b8c72078a0db1214a7ef90879e5cbc5bdbbc220ba97da5c4dde5c6d799d297b04a7f0c166bf1910d7244b0be992174ab731a3b31ce9bdb3bf97d9a25c4d9c57e71c2b70740825f49f3e710996d41666b5343deb8204af01360ccbe54d6b903ea565ff77068f7b024a27259137ba2adecdb984ef66fb39b1f8d07e8e328ee4a09ac4d059c203a4841d314a9c209aa909975810375e16bbb23126552f242a9370cd18515f4ae8b34b3914055e69201a11f8007a0b40a54f582559b7c09295044b8c99fb598c5260e5a5a2d9a2dabadc3a0f78f7ba296da544c76665b05f4f08f17ede88acbb5c5ed8ebdf8022e920854559cfb2decc770dca6f66ff9061624a713203b027da58a88e54e4234507a514a4c915ca9005fd4be01934318ea049b0187f839591d15d9248f45b211a1f5fa4b7cdc17864b4be7ab3c004181d7c2b80e41193377233114b7fa50ffec29b710bdb341e1c26eb56c24c0a1452c82f3208bd0a824908654e457f9eb3b4a01ad9cc1800ac94385cbb2c7ecb02c286df546649931a87c7916b98768aca719a2a379b55ab7c6b80c8df6387f313c24076e06eb431e81cf6c5e794cdcbb302c5d989c9c953bfe945881efc49b5a3bfe4204a6b6043efe1645328b62d1c25a9a3b172eb5adb6e525050fa30d857cb8e609b97a216adc2f122e552a890ced6f499060c96e251b02820c36ad73224e8d0a013c4db5ea7cb21e55f602a8439b6bdff328dc6bec4129d50bdcd135c4ef338615cfed1097894b29e42d8c298c7312bc1477d7604ca1600bf3b9f62ff38ed1d57687e8bbf6b0166fa7d614267c6deaec1740c1c585749fb161bbaabc5bc4423d8738cebcdfec3f0ee90c73bb908e12addce8657a8ca709ad16ffb12a39109026c1b1dd20c91ff98eda2b7acb0026eeb0587a33808ba3f98abcb162d0c309ebba4f17d689f255d2b3184ecf47099e92adb8a86aa68b0f381f5b398eb10532bdcff587d396dd71e6e0593519b869e0c33b0676ec74ae7772dd259ee5fe9e80f1fc08295505b81d775d93b04ed4298eb50d5a852729e27fbcfa3cc04c6fcf1eacb960bc2ff7aa79945af571d38d67667f4e120536883bc443c2d3d9923ed5f9a5ad78e24d0578cace26e7842aa03fa7c51763eceb7b276182618852d705f26f11ee976cf7c842f920e291c245a6d58a893ba6c7d7bbe35d01550a0ff947890fe9945fa2080def998e258d7ddbeefba1fdb17e82ad7118850618403a29af0c64a2f25c3c150cbac49f97db4425803b22b9ee83bc09b1b8c0d0348909db0d5984d6aa086382b5189315c9f01fe9e26db816a54c71480a8ecff5d4eac838d34928a5f86e29391c188e207acbcdc27721c8e323d6f8fa9631f4c8d2018cb10e198a3ff0d9046c24cf26c777ac160392bd34d8f00668b3bf3c333aa837bb2947cd33236ceb439f5b3556c5c8419d79cffc4f07b61a85243aeed789e19d9f1aa0e52965ebcd94e6d50d8920ea8e428a3f0143ba52d7b950b45fa4913f07a5267a113680e7791af15b729d1e3f0c56da9b792cbcc062d1986a6cb7167eaa4048bc4dd73adcae8ec2aa6102204748fe8f812cba73a31351b39183efe62fd1a5410d0d5cf0359eca959e1eefc02ec1bb2918c220a21fbe5a7f2bd9ceb1c154187261c8d2d1cef07b613bf71eba650b939c13283c84b6fc3570fa4b98a9f7d63fabf18b5fc5b4156ed52b866e648d4d4d4a7944222cc822bd35b4313609603d4bcc7ddcb12a90686f8500a99cc48b81e56135754eeed5728982f8009bb78604cde0bee35d998cafc3ad6db3bd07f568ed1f44ee3f589f16720ce50a6a114ddebf2f70ac5fd0faa358721435957f61928fec0fdfc6c90ae3f3615af86f49d1c06b6e40542ed287b745d784c6fcfdc4d1c2b33c721344d8cbc97f59b411b32c104cd50068ba3868adf22d4ddf5e4e858a81cf514a0f4ce28e21b4d9cf80ed61857470d6815ef8ce8bbbaf413c7025554bb02b0bb0c0697b19a3a151460f264dcc75cae7287e461369dc82ca154ace173eaa74b9e77da28f1e60d837e8551df12bd03bb4daa04e921ff6c9ab2dc9b5f1c5c4e54042ba9f9f683ba1ec554f45736e2a9c4d202acdf271dee9d16bb99064c5a7b4d99632b1a52453181c1889344424d015c500654aef0ff93672ae941911481a93c928914b36301002c034cc5da97dd035838df3a395b34d3b7fc0f68c595a5bc3505adcc5a3fa31d215f1d553e0c9a68b6c5a7cb15f82f43e681f6fc0cfc41c40c385db5741304065362607b0df48dc2073b384b4283cfee26f6cab33d3e3247a1c25a0ed980d01df058ad48e47fb1f37dc8f297384f77cc0d7e6f917a2dce66ca52f7d86c5f89c5d0a5ee9ff2fa5624db84186aa2d6912fbaa41d323b3fd7471825f5f3398220f1159f64e8763113525b216a575222dd78740dee5bf008c02496c96a301ba1268e5e363c2730ed6d1b560ce58a760d356063a06e96a441ea44ed4df57d0aa1c3394a6fa5d90cf0f3be137f9250c200b4644f9c2679b061d26a42b6e088b6b5c5f4157e9b869c5492645da0164e4221390eb20c5d9c729718bc61984c48000065de581db03081f4bc90da3e9ef0607356186ef27707c16260a94c6a0846767417e92d748c5173c418e8bb06f131842d73c073741bcdc4cf8d35f9128e1ae06c293d732cc6fe3956af76513ee6d3f06144d62416e3af1fcf6ac27242ab5ae217fc2e828bbff7618b9521b249ad8e3f23b942f47a7b2a687dfa17b1a02f792f65de4f0dea66ea01521037aa42c74fde1dd852dd5947482252ed476451f32a158169d74fb7b23a8e54158c62cf45c770478b3c308e7daf3e8b50cf62db95116dc953335defa41f668b82894d254ce33675e11a7389a82503768fbc489415448ff624b70e915277871f7c7fa0b5b0404687ef4823125a7055630ebd70170db9162f77413eae15048bae3408603e3e779062f42e5be64008b4e09efd42c07c778ac3e6731a4ba33cb8555c9bfcfed2e4c396b2ae3fd8d1d57ecbd36901a310c9fbb21a5af51f49c19fcd1f0426a316893bb6ce6ff2a97fee9827bbcd653d539eded947bba156b88cbb343352bb5fd57f514b90d5685f7036915fac8b65cbea41c6e12194fe0bd13ae96c606839b5d562415a00f785d2e734b3d564bcea56735926e0b8443fb87ec61d1c6e26f0d234d7781313b54ff31fd2c94cb03b4544103bdf7ea7e1455f9aa79bb61485d8dbc46de6d8d53cf4b29aebc8ce04b9bc70adedf0064d90dd442fbe4f9160c54bb57713e7cc76485f561b4a5a13c7d09b71ace3b779ad5295341ace67d5ba8ae0ed8065dc08ed90fd26a0594a2e7d0fc9f702ce15276c129266032bf0395ab7299fd07b8d4d4655a6d931e0a0c70c819f4646e96f5cff4d15309e4a85d8e9c3e7ec3996f2019aeeda511ba6e5e58a3960d73497bb2bfa223bb607d4ca985a978128630bba82cc3319ec129dfda169d4494a92d9864c630bc3844b6811568d8bc377a505f49270a2fa295833997865393ca8969fca4813fc3b8ceb54ed33bc8c83cfa2535bf957fc82b791b6a631ae5a12bd1d4c7b4a2a5e55a088a2b92c8b25c0c9aea8025a2614f1b3e758de44bf56f41abcdead43ef50a29c5921b95d3a56406dfe959c486ea9f3493f66315f2b9e7c41baa0be8d038b5f0590a0718f834fd412d93a196a141b9d39e941137be6643f10c46c4b2c8406888e2d9c856ac5940a18775ca302bf7dac852f09234b64d97dbf6c8911dc5fd2aa7aabda9e86909f63cad90401942e1d6a3b148b60887f7180b208698cc629b0498f6c6913fb7aae66b5b27fced1b79333515693607934b8c4c0be0093ff720e652e2476600b5636767d6442ab2037eda8ce02aaa7408df0032480ee4ae948d91e955c79bdeda82b0c8ee2f1324497c8dd5584d9e494a2cff82f4826793c1f6a3e38566f3136f6eff5afaa26ce7b3eb60156bce7cf2ebb844375d5e02fed35d5ae013e38ab3b523112cd22a9f59acaa8120d74bedd740049927d48f3114a2e44424dbab5c1cbc4f471113f2c36238d07a3a66ec8ccc587a14b106e4728cdcd4b26de7b79623d653b51041e31e3c935dc7e63b342b25535929a187c0cb10672d2818b7320920ec77eae8a40df9c59f1100d805222bf3616cd1d26abd0ebd9001fda80f5141bfa851feba1435dacef86ee747d010dc7e8a7b75b15baeb61b473b873ac6e773f2dfd9d21aab106639f0aa5b50741bcb629823c74145915a1e943c876f4a7dbb4a76a509054a9664bb9315da68ab6781cc9a64b64d86d98b0946a5660f51b17aa92c53d5ed092b20b3956de082c00c79ee55c6ec278edb2737118dba5548a20ab5d1886874e964aa5cd3511434179f4b489b411a609195869b1d50f031e67dfdcb1d68f1faabbf08ab5361ff3c2bbcdedb30caa0ad4f700f9b6f39af90c210bacfb5d992677fd3f710970951ff82d1429714fa6f49f1b96536c8a5d94644aca4ba4778546b04478ce8d812ba6f9c8f1be47065be6c63d9142490435d6275ee86a7f9b4a7b043c9b4196ecc1a11ff2ce1edb70a266ae9e1e8259ad8ab39656edce849751665bfbadf5d5560dbf20dceb8669f04306625b2bbbb5d2588eb29a6797698f2426f79ab41cd356cbba7c9d9dce1ef25bdd4a3dcc92a9c8a97c049a3d8ec2f493cb304ec3fe7aaa49df80472c697b045b55e83396a11876d739b8dc107c61b8c94b06d76c069d68fc90e55e6194b36d1f6a7023b4b9d491894a60592ecf8c57d0a78e82532d737954ca7b9fa8d51dbf6251af96c42ab1b542076dbb781afe356fa8c81c17dac7e11238c2c4c14aa0885b53f20fe1268cd7ef1867bf41b26520091c5b223795d9a03ac1d83613fd541a5adf6bb90a6ce20d4d4659a9030676d180180a07503e09ac97f055ba4832cfa562ed07674b8251f7bcbafdb2b3dbc981d0828c810aa8364b95a402cbd29f3677c01af9152eaf87aa07f4a97b975e934edd792a92b6a39a25efe595b2d0e3491ae2b6253daf6715d2436fe2947f7419cbf2801248a6760e80055b79e3d89b058631aae7111de8b0454e7f0d0032ab98934553e232ba25b1ff4390d14b34baebb5530d4526784d147f6721119b5f958fcd330f0eff3594520610d2e5e843d00f0df18809e86b8e29192a8c98443a97b6e741987334dae4f8c21b31cbd8b39fa76b604b6fed9617b184f96dc7d4ba1b2618d308e51167dc960cf1c7ccde0f53e30f2a460cdf5a6b26fa5d1eeee4f722737dc4f453b3e67a949ff081fafad7d4b260a158c09c19963bff69890c18104e322f192155e01537cfd0e88a25686297b8f635fa15717539ccbfef10b8e1d73237ed7819c2f4dc4efdeb1ed7322a2920bb272464d51a0e2a2c45b855af33496b49e4317129c0317489957000bcdaa40e18fe5058ddeae065b2582c62aa659935dfde2d16e7d43b0863a1dad57ed33955499809dcbf262f293213b4dbaf8576f455a6ab87d6189c29531f66a718f63b82221a2ba0b2e9c52efe804b2c58d153cc03fbc10f600561a063d59f10f816843e429c2a484b22d95686ae983811f701b5d28be100a6371db0fb06965d877cf23b79a67754ad018feed73a9dbdacd7e7bdd98ae0b3c16c6978fa675c73e0bc030a1eb4d94fa6d80d0d8c04af9482e3f05b14bf0af47ace6fd633791c6cfc8ad63aab9de29621730f2356a7fc7338914235bb34a70c04db71365c18ecef918634d22a1ae0c5ad8b178375d6816de02a680ff05bde8f70b58d9ec00eb3c62965212c6005615ea7faf72f1e6136e8d0367564b67332548dc4acd824151430a2326aed8d3828cf5ac17e1e8740a5db8102e457ae10ec3915a0f98681c14be076d3b1c35f301b2afa1e275af5cb29daa9d5f56b8c8f0b876629f54948e8c8872184000747d77777ecad39e32f0ca6d3e2e526ceb5e5fe94ad1f5f6105b00962e28970faf0845bdf08f0c0838424a95328969ee2b10f1e7bd6d3baee1b80b31a76760dbf2c24cc22f3e3432226e2401884834bff0fb36729d38d71ccb4ded880d5fe3eb884415808823fe35892cc5b2556c5aa338b1b5b3a81a40d8c1aad3a632b791f47e0f71c5d53958d164547b3ed6279eb888d0fb26e0f06058a4bc5a9a846afe08b058cbfcca5d9fa4ae656c51aafec753daf400e8dea92af7ca12a2c4de6d6df9767724bb38505c5b0a9165fedb046681cda3d02f60319563c4005993a7881df2e3b7b84274d8b620f29f3e7f34dfa99feb9f415d0a61d4fa222abcf8b6508c0065d3c994fb72d0f5bef061a4847f1b7670f9b7bdfc914561653c5ab3c3afcfa90eff497956f27f908627f812225056868ddb84d7d21d128f3d00bfc4a77e9e6f05815f7f2a4cebd4a4860b20fcaba063fbfd8a9c005e5634a0cac4327037af81ad18a304ac3898c04242645f840ddcefd18ba394f52e18fba4825ebe2ece88cb46d5010dc5828df77373664b81d1fb78d9d1f0c459b938380a608df7d49f7c0a33cd95f280f979459609926a3ad54c22a008cb4644e53490339916052a1efc67d6a6767b27beb0f5cebfb563dac3000a9006dcd1402862959f96493d3a3f47bbc3be64bcb3be263586a20208641ba826aaaebdc952c507e92cd9b10283fb9432f48f67a92c9658db21247b5d3a09f4b598528817e21988f2e893b70898e6ea9cd23d7fae6ce56ed7236601483c519768e2bedab74b7934736d301fc8132969fe05f3d3dc709af3cd05a8df2111f6240d8d55be895e9e85b1a407da134354b70a6271bdb0393adccdaf2b1c68dfda96ced2323e4252229f8208b3e51bc9b12b1d8c9f3b8dfa518d6f416eff10eea00c4021dbcf446b232106c4fedb397a1b885da3f498490b929d000cd6357ca02b23dfaba4bab38c18a7746c9c91be839e6fef60a8a7b519ac2a82f3b2848ae8282bd515ffda07667542dfa3a7dcade365f7b221f94aa39d526604a36d2b39acdca9a8d619376c6986c9ad615ef970ef484f82ae7f6f3d4d1c1c8a4028dd746744d2bb30f46155cdb66eaab1ed0e134b9ce5cedd0cd7a56a8923d76c5af44aed997796019f01485310cd7cb6ffe82fff2047dd60d3a4ec58fe960abe174fec2f8559446ead637164eee7eeff716cf547a7144ed07354ca3ddbbefc8d56ddfbb8e2d9ff44dfb56e1c4261e1051280174990902fb510ffb8ec3f185b664adff80bc90e9b8d7f036430811f0c80e20425a88fb73d750090047f839cb07d76541cef701c7cb8eecc898c12de30c1e2fc9d8335db5b033cbd4168640b16daed7387f394b346ea9f474370580f986a760799139ad7e82d21c3ed26ff1a0828734892864b6fec41b6db085ea8a65d693591bd34d2d9517b90b2e455e9ab17d142a57b5faffff9b4bc4bb43a9a25bce2bed3d7c84e0dedb02196fbd7e32e3f82e5765d32658609b94d2844ef391314162530abf9defb80a6419b8b3a40af5268a28f2ffd48fd4143ef41f9e686e18b139accef8dfd1ce3b8961eb21d93496495dbcf4097e432a361f33b4a9c4917f35986a6a5ed331eb9e47eefbffbd6627b873e29a2f60dd2890975a6fa1a3786bc8ffd9b5e69befc6f12557681bf101bccfed20aaa6c9bffa2c9ea9b2945d7acfb10fae59597672545463a0e9a70da04a25dcb7820a420d2355c284c6de2033558450961d3f2dc5aef097188024f3c014394bb41cd93a5ae599b2ba08387ebbdbac4a70293d9a86469bbd4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch12-路由和交换</title>
      <link href="/posts/6b68dff2.html"/>
      <url>/posts/6b68dff2.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3fe8cb981fa0f3b324fb5f3b4516981eb41f811114996c9f4e458f5e783ef493">3624a8dbefab98d376ab749e8d6514139d6f195f14d4116ee8335b43574084e2e640118902ecb6a55be115e609b87a74ecb6fcc88558d973247a30aaad7ceb6c5ff9e495bea1fa21c476e402b2f1732752a9573743b46f093d038007cae082b99b92514cf9960d7d3752d1c64e81929c36c6a5841df19821a0be089800e5e4af26bc393412ffea2232be1e3a7c79a5d9f8a517ee82dbf5fd54fabe617e51d3d32634725701e9e4f70bf2c756ea69c9b23ccde897ab0941d91048b15b349a122013de2ce4b7b5d67a6e1ef66deda0f6104b8ebd621c4fe644746cc900f00a2ad84f2b5e928906630b65c01483214b7d6e582c1b89b9d28702b3eccf9daad88ac97386c623031ad6b36ce969e4d83122072e1e2fd158b0b3ef9f3da5d13e72c82e18a963d1b899d74fc261472204056d8da1f46c91ed0bfac9492af3670eaf7c9eaa96cb06bc5b682be9a8ef879bc52b6310c44fcdb39f4ac246f3386fe10435c4f1925069932db553173beecf51e5e6e36caa9318a48129724f622e39d5d4f45a29b19ec9899c851e26af07961370289f3078120e96f43e35633e40f676e4c71a467d320fa66f0661e40edf31d52487bd521a472ee274db3bc728801376799c5c20824ad4f39ece51bd239cecf92aac208686658ecb35f715c8aeb37cc275276c10996ba1414560515e585c498d468a1293f36efbb10c9727e51a9922c30b8425182a395fc09a39fff5cfc7715019edcc09533dfd37811059a262e1af50937b8a3cd59427af82a832fc0838dbcaaebc614bc0addc35a79ffc8a82bb48ff406ae243ef30c0f3f9419ccaf61cd585e3934908d4d3c6cda4587801259ff2f3359ae1c61e75b790c1eb50c2430280aacc4252a52c9a3123807aecc209f8bab28e0483f502f7813b5673cb04b8a9735885f3bbd0e7a7c37813e37ec735f47c8dd81d31fc50210ea4751516d5df224af7a26e37e5105ed60418b307ba37fbef1f0161588f1d4035df012350f4806f11edf20cb383598d78156c6e3fe7119d7eb61f7304edfe836a4869e3aae65e10a8d5e7f76f919e348e3aa4c52970fa316a2788754d760cd4ee35d14e61335aa95d4a9572d1dd51eb7956d519cb58a7f50918e668ea8662fcca1dfdaa0e3aa75920363e50a9afc35e01d54d61d1ecfb298211ec8914539403573d5d693a2309e6978a25309c706feb596b8eb4d88b19e75ccc423d61749834855df57c5c77090d7e1fab36464a987c1fb0ed8e7a8566867ca2b40d7827ac7adc3635e28b01189ba251bf3a37b9daa35ccac5648a0295440147d9316a9eefb34c5f3591a7aac6339a3e527814b9fa02d5ac7f4c0941ee47cb08639b03650eff9628714ab984a8cadd2e724824e949c5e5e28bbcbf47eb369cdcae24709b5086467acb5605735d7fbf76a69602a53e286a550e8053c5500864b259c592e98518ee5e854ae1b2d7b008f99779024d95d722a2db34539f9de0efce362656ca8811e952c0f478a691469548c1dcf10411276ce6b34b6408258efe9ce1caba6b9c338d511dcc5eace42b4f9ca6b8fe3a977ef514e4cf9b9b7f2629b085e6e98b43ee289175e9e765f365995c2e8a0de5ea45cf226afb136f1a1fb0e8ad37c59433e38efa2503f6cab1eb04844a85c5b8dc50c812d57d5ea2577f74625d56a8548471b70895d8faa094bc1a407b12aa4ddabab71aaefadf76a631271d6d8fc6de7d1f36f232bb52273ffe3792642d54c0c4fba2705b0745c8a2d6e20eaffaf2dcf32747b1ebdd6c67a2be67e3a308f6a2bbfddcfefcbbde10724a98380d365055adef87c5532ae3140f97dde704b8139a340613609999a2884181ab48be4a707c70e26c1e40965f064b83fa6934e8d22bb6a7f7b86c436081a8ae646b8e60d2fc518f681c8b457ecd14f356e86aa114b1b28e851de774b1d310b452f69639636b88309f85bc5ddd5109fe78016ce2ed6b74e72c787f437e0a1d0dfe68a6a36bfbc4c11b8012aeff9bac1f17e8e75ee4002a09a47e51605e60775974d8409c53daa9d127cadadab71ff049c259e9a5e06a101c3026bd8f85cf020d42e95222fabacbf40b28f3ae44879f4046e5925cde4aed61207f853118813553b11cfe08daf44bee05ab4bdda82cb4b765d65fb43b9247305db5ad479e443de8557a7621c2a4a8f4d63e77420568293ca07a772ac6a9df617a826092d9de538b7c108dcfe311eca0bd22af7771872d700e420c63321410aa6acf2c515db1a80822b643c99bee5a40deed06a33d8ec8f3812e4f3b1c316be1b0cd4b30352bc0c1d999ca65c4236084fd1397bc631241bcfa04605dc12ee6a05212b4333fb91d98afbea5f1025d8fe8ab8295bfc315b8b9b58116b03646aff727f2f6430cb89fe74dc289b0580469882836aabc23dd60d597b9299b62</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch15-LAN</title>
      <link href="/posts/1ca97034.html"/>
      <url>/posts/1ca97034.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="75dd472642469815a31f79630e2146367c06b5c59b4df88893027c7f42c76643"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch16-Hight Speed LAN</title>
      <link href="/posts/1a972196.html"/>
      <url>/posts/1a972196.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="90f9376338d0e45b1c5516f741f849a99941ef182928636b73f71ce505afbb94">3624a8dbefab98d376ab749e8d651413191e0945ce710b68dd54a3e48ec4dc54</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信传输理论-CH4-复用技术</title>
      <link href="/posts/8b0e91f6.html"/>
      <url>/posts/8b0e91f6.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="6c3e9b950573d2d88fb9d344c45c35ffbcc2b77691ba42a0a868d36d65fa20ab">3624a8dbefab98d376ab749e8d6514139d6f195f14d4116ee8335b43574084e2e640118902ecb6a55be115e609b87a74ecb6fcc88558d973247a30aaad7ceb6c5ff9e495bea1fa21c476e402b2f1732752a9573743b46f093d038007cae082b92ca61eba912d883823217754b953dbbab2886e28b5844b2e59e248684ee8f3fc123861e66786bd91064c6629ed7c167b14c022744428f10075d14391f61c44b725eb833d7977e8dcc32d75e6d077ec3f716a032fe62d92243389692cd5ee37fd6fceab049e60e57c493ca867e563c375029fd7c792c43f641e4835116d5e637758aa9a6cac3b625902cb6d259693e441b84d97295c49f8c25814c6eb9d91c47f65928369511f1e34b42e927b2bb685b217ec6e0879f1e023cd0544ad988567bf7d84d7d709b473982102e1d77f4ac68b791856f735b3207d0265968b246e7fa529bac5624a2c51abfeac377295a16fcdc7295d870d85a345194da39dd687f24fcc4433c7c134c146eaafa08f4a5d2c7acfc735124bfe012361db55da9bad136658275d7006660429247e1cb02fd8aac92a8d48015ae314a71b62809729e7db807497909ed60d81460f528165d05fe1aac60b77677db7468980bd77c270f4e1d2d84e5e3fff881a17c341d3d720cc6d04325a1271cdd706302e67825f4b53f0461bf14a9aa1e5bec38d3a2b3ca3388705eb381e9df6d8bbfbed2ac6658a19383ad8197215da4bba562840b01627c1b6b671631f92bdba779b33d0f4ffe2d74735f25a3c0d12d329d7ada81cdc4377bcda34e904ff8d088301127df34429aadea919b93ae51d4eb9f6d121804d5e771be2ab2f6c316d6463968622c68d458cb92ff3b65f13921295826c7047a12966fe26d7848c36bc13ae1f32ad616c0f01f6d34d0061a3c88f0c06237e14057a36c4f3d555a8ea85802ebb94b1ce50cd66565b9a51c505bfd1074bb47f13bd018e7407dd08c8c646dc938cf4f35b7e15530c47f0233505a95275f372f6304f1d770dd75412c9924bde377c028340fddecbb43834785496154c2bf5cb7fe9b265e91ca8e07201d1e6d243cdeff19f46c690a15a1c449578e6cfe1de03ed741e67e3020e682cf8e6787cf2c087ecd5ff5ecbb9b62b703da878f7a93ebcfde12fe4e81432f5894cd940802d38262ffdddf56910dc26d1cbd4b0361d6ec8bd3b921ea77e079bd62204faa89d021bea26d33db770017b09d6374cf6d74701342ec904bf82447cc791c3d3c5b44fbf7ca053c603f9f0c4c6105865a2e6b60d1789d39591399fd76188e8493eba7330755da0b9cf6afaec217974a6a450d65e19c5508b778b2656dfaa2df32255de284e1c4f83049f48e1cbb01d362fdce6e1523e670b6fcfc7e53b37509ddafc6ebeb20fc60a96066d3aed767274b478c4f71b37ffa47bfa6ba091ed028598720b2c78c177538c7496e8127b28b638568048e2c6952f29d72a5dc66f17db0ea361199c1abb7e5a3b1561ea88c3c4a411e5d48e0e5234bfb87df49d6eaa27749a0c3c83ce06c397b548ceb6b8632bd7c6ddfa5cafa65c344be2653caf4b3d5cca6aabfed3785b28bf1056f2affa71e4dd652ddd9bd2671333d9e57a3126be3c1f175753fd7eb115e7999cd517c15bb9a51f249636791cb965536c9c3e774d4160894e524138fa27789b373d26cb1caf48fd61c2701495c77cff03ee934dda4818288e90c318530a1babcf97e2b470aeb6dace6eaebbd17e491e153e2d930dfadb9f61ea7861cb90cc58ce3377bae1bfc45c80444f1f0f3a6b0ab659e56982ae023672cc240886fc7887041e9d635f2c4bcbda37fe6abb07f14a36d4c72423249155c044f6ed0ea5648efbfd270fb23b31e50b9e3b2e5f278ba30e56a4d29d835e7df3ffbcca518a262fc601a61d1832cdca4335faa9e97bbaa7d9d2a5a5634ccdf46185e4744fbf2c92af06ff96438050aeec5d4fcabffe177364c71ef22583ee0dcbd44a56701b3b2ba83f36c2d8d0b732625e20da141b06abb093893a3d0e35ea3ed35c9aedf72a45dc6508e36ff8c19db7d9fd408394f7fc08199a922e813511b1de90d963c2b7dbc490e420d86524d62bdcb0ea907686f94f02dab2c71bf92fa328b628b7f5829751256115e80bc4bb7c107caea11b4d8c7528d8d439b30c8c05310aeda20fb8bf03da703ae6bfb019956917fe40459b29f26f4408f10b2496749b797b58562f7b431a2c8f5b7e308cad69d45d164a23c241988167689f362fc22dd60bcf675f8c2b6b2e88919cf8e4303a4c5f996df88fef7f015179889279f952bfc5a7705af4da4e731aaa43a72f16b8f2f121b38e79aa59a3bfa6d83a47657d13ef5cb6228ece49751f9b953905d841a3d307b25b286c9c98238afea30efac0dbee179bbd14ff4a1347e7423d5b59b75307a3e65959d1170e9b42fc03827678cc2d7d4e3d2f760e8bcb3c9742d286ce1660b6d84146b869854e37e840f3f8f90726b80f4e4a7f8c58775da47e9a2114be709456cdcf8f8084099f8e11ad05437c800d5441aa7238d50abe27d955e0100cbc41f237f99781d600a5c218346118415c0d1e618da141b8eab77cc081b33690f59d107bda3371efb89b79af9145e0b167c57d5c1a275ea52e64096f8ee8d6e081188a184efeb82754f60a32633ba97481edee020af0c9971eae987be06885b8b7531611f7f8db2e779e79ae1f9e2562c99613d8a2b790943c3b5391d808b9f20bb7e93e5cd3d4ad1df609e71c47200a2ea4945e32f40627e1dc282dd1eedbef818ecccf16d416cf9f9fec372715d544b0cef95ca0b2bb112f0b1bd6cc3db55bb542bcc8a3afd14c6f7b2233125b2a4977238533b8b04b12ea21d4638c4266f0c2cf9cd624cfbb7327f1eb5da8081bdc83dcc52ea3b3acbccd299b01e5182906a24edc67e78eca5e959e6c06fce243fbd05c395197cf0a7861bd941a0946f03de0620df756b572bb70a21923ea15c4a8d29a1f192a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 电信传输理论与工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信传输理论-CH5-金属传输线理论</title>
      <link href="/posts/3f7b092c.html"/>
      <url>/posts/3f7b092c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="61ebeecf17e2fd939a30eb3f0ab17e5181c7c94d6750ced4518445f0dded97fe"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 电信传输理论与工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CH340X+ISP烧录使用指南</title>
      <link href="/posts/586a8eb3.html"/>
      <url>/posts/586a8eb3.html</url>
      
        <content type="html"><![CDATA[<h1 id="CH430X使用指南"><a href="#CH430X使用指南" class="headerlink" title="CH430X使用指南"></a>CH430X使用指南</h1><h2 id="引脚"><a href="#引脚" class="headerlink" title="引脚"></a>引脚</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240409131159622.png" alt="image-20240409131159622"></p><p>CH340X引脚如上图。其中：</p><ul><li>UD+ &amp; UD- : USB差分信号（CH340的USB收发器按USB2.0全内置设计，UD+和UD-引脚建议不要额外串接电阻）</li><li>RXD &amp; TXD: 串口接收、发送信号</li><li>V3：用于CH340内部供电电路退耦，<strong>在3.3V时时连接VCC输入外部电源，在5V时固定串联0.1uF电容后接地</strong>。</li><li>VCC：电源输入，<strong>需外接0.1uF退耦电容</strong></li><li>RTS#：（输出信号）Request To Send，用于告知接收端数据准备发送。</li><li>CTS#：（输入信号）Clear To Send，用于告知发送端 接收端已准备好接收 可以发送。</li><li>TNOW：（输出信号）串口正在发送的状态指示引脚，高电平表示正在发送。</li><li>DTR#：（输出信号）Data Terminal Ready，它用于告知接收端数据终端已经准备好进行通讯。</li></ul><p>其中，引脚6可复用为TNOW或DTR模式：</p><ol><li>如果为引脚6外接4.7KΩ下拉电阻到GND，那么将进入开源DTR增强模式，引脚6自动切换为开源驱动的DTR#，用于连接MCU的BOOT模式引脚，默认DTR#为不输出，被外部电阻保持为低电平， 但可以由应用程序设置DTR#引脚输出高电平或不输出，用于DTR#默认低电平的多模式MCU下载。 </li><li>如果在6#引脚与5#引脚之间接4.7KΩ电阻，那么将进入推挽DTR增强模式，6#引脚自动切 换为推挽驱动的DTR#用于连接MCU的控制引脚，可以由应用程序设置DTR#引脚输出高电平或低电平， 用于DTR#默认高电平的多模式MCU下载。</li><li>如果引脚6无外部下拉/上拉电阻，则工作为TNOW模式。</li></ol><p><strong>其中，DTR，RTS等MODEM通讯信号，是可以由计算机上的上位机通过软件更改其状态的。例如Windows下调用 <code>SETRTS</code> API，就可以执行Sends the RTS (request-to-send) signal</strong></p><p>因此，诸如MCUISP等软件，支持对RST和DTR引脚进行不同的操作，以引导MCU进入ISP烧录模式。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240409163227165.png" alt="image-20240409163227165" style="zoom: 50%;" /></p><h2 id="CH340X使用案例"><a href="#CH340X使用案例" class="headerlink" title="CH340X使用案例"></a>CH340X使用案例</h2><p>下图是南京沁恒给出的一个CH340 STM32自动下载电路的使用案例。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/6rGAjBbclrc6aBCFG2kPU72ix9d3Q5Ru3WdUvelS.jpeg" alt="img"></p><p><strong>对于CH340C电路来说，MCUISP需选择“DTR低电平复位，RST高电平进BootLoader”：</strong></p><ol><li>首先MCUISP会让DTR引脚写低电平，那这里DTR#（NOT DTR）就会变成高电平，使得Q1导通，RESET电平与RTS#相等。而一开始RTS是低电平（RTS#高电平），因此并没有复位。</li><li>MCUISP会将RTS引脚写高电平，此时RTS#变为低电平，RESET引脚拉低复位。同时BOOT0上方Q2导通，BOOT0被上拉至VCC，逻辑1。</li><li>延时100毫秒等待稳定。</li><li>DTR变为高电平，DTR#变为低电平，Q1关断，RESET重新被拉高，复位完成。RTS维持高电平，RST#保持低电平，使得Q2持续导通，BOOT0继续保持逻辑1。</li><li>成功进入Bootloader模式，释放BOOT0和RESET并开始进行ISP烧写。</li></ol><p><strong>对于CH340X免外围电路来说，MCUISP需选择“RTS高电平复位，DTR低电平进BootLoader”：</strong></p><ol><li>首先MCUISP使得RTS写高电平，RTS#变为低电平拉低RESET，开始复位。</li><li>将DTR置低，使DTR#为高电平，BOOT0为逻辑1。</li><li>延时100毫秒，等待稳定。</li><li>RTS变低电平，RTS#重新拉高RESET，复位完成。此时BOOT0仍然保持逻辑1。</li><li>成功进入BootLoader，释放BOOT0和RESET并开始进行ISP烧写。</li></ol><p>CH340X不需要外围电路，而CH340C需要的原因是</p>]]></content>
      
      
      <categories>
          
          <category> 各种折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch7-数据链路控制协议</title>
      <link href="/posts/acdb16ef.html"/>
      <url>/posts/acdb16ef.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="455cb8caf422a263f8269b8b31a93b9e79b66ea2018203f003423ab3ca7e3111"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32核心板设计</title>
      <link href="/posts/ce38ed7e.html"/>
      <url>/posts/ce38ed7e.html</url>
      
        <content type="html"><![CDATA[<h1 id="HSE时钟电路——皮尔斯-Pierce-震荡器"><a href="#HSE时钟电路——皮尔斯-Pierce-震荡器" class="headerlink" title="HSE时钟电路——皮尔斯(Pierce)震荡器"></a>HSE时钟电路——皮尔斯(Pierce)震荡器</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>单片机上常见的HSE时钟——一个无源晶振配合两个电容的时钟电路，就是使用的皮尔斯振荡电路，其完整电路如下图，由两个电容 ($C_1\&amp;C_2$) ，一个晶体振荡器 ($X_1$)，一个反馈电阻 ($R_1$) 和一个反相放大器 ($U_1$) 组成。$U_1$和$R_1$一般集成在芯片内部，因此这就是在STM32中选择HSE（外部晶体振荡器）时钟时，有两个引脚 <code>RCC_OSCIN</code> 和 <code>RCC_OSC_OUT</code> 被占用的原因。</p><h2 id="石英晶振的等效电路"><a href="#石英晶振的等效电路" class="headerlink" title="石英晶振的等效电路"></a>石英晶振的等效电路</h2><p><table><br>    <tr><br>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/8601a18b87d6277ff030a1392a381f30e924fc95"></center></td><br>          <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240407090244851.png"></center></td></p><p>在分析电路如何震荡之前，需要先了解石英的一个物理特性。</p><ul><li>压电效应：当对压电材料施以压力时，能产生电；反过来，当给压电材料通电，能产生形变；因此，在石英晶体的两端施加持续变化的交流电压，即可让石英音叉形变“震荡”起来，物理的形变又回反过来改变电压，从某种意义上来说这也是一个储能元件。在计算上可以把晶振等效为一个RLC电路，如下图所示。其中$C_0$是石英晶体两脚间产生的寄生电容（一般取3-5pF），其余部分是晶振本身的等效RLC，也称为其“运动（Motional）参数”。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/OIP-C.YHRlityi3tRfzIyrz41DjAHaFK" alt="晶振的等效电路"></p><h2 id="皮尔斯振荡器"><a href="#皮尔斯振荡器" class="headerlink" title="皮尔斯振荡器"></a>皮尔斯振荡器</h2><h3 id="如何进行选频"><a href="#如何进行选频" class="headerlink" title="如何进行选频"></a>如何进行选频</h3><p>我们知道，振荡器会在反馈电路的谐振频率上进行振荡，这本质是反馈回路是一个滤波器，而谐振频率是反馈回路中电抗最小的时候。因此会将该频率进行无限放大，最后在此频率上震荡。</p><p>从上面等效电路我们可以看到，晶振有两个谐振频率：一个是$R_1,L_1,C_1$ 三个串联谐振的频率，称之为$f_s$；另一个是$R_1,L_1,C_1$ 与 $C_0$ 并联形成的电路的谐振频率，称之为$f_p$。</p><p>$f_s$频率就是串联电路感抗和容抗抵消，即：$2\pi f_sL_1=\frac{1}{2\pi f_s C_1}$，可解得：</p><script type="math/tex; mode=display">f_s=\frac{1}{2\pi \sqrt{L_1C_1}}</script><p>$f_p$是串联电路感抗大于容抗，整个电路等效于一个电感的时候，和$C_0$发生谐振：</p><script type="math/tex; mode=display">f_p=\frac{1}{2\pi \sqrt{L_1C_1}}\times \sqrt{1+\frac{C_1}{C_0}}=f_s\times \sqrt{1+\frac{C_1}{C_0}}</script><p>可以看出，当频率小于$f_s$时，$L_1$容抗非常小，整个电路的储能由$C_1$主导，因此呈容性（电压领先电流）。在$f_s-f_d$区间内，电路储能由$L_1$主导，因此呈感性（电压滞后电流）。而在频率大于$f_d$后，由于$C_0$支路电抗变小，因此主导支路变成了$C_0$而非$R_1C_1L_1$，再次呈现感性。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240408171430933.png" alt="image-20240408171430933"></p><p>对不同频率呈现出不同的阻值，这就是一个滤波器。可以看出，这个滤波器对$f_s$附近的频率和$&gt;&gt;f_p$的频率通过性较好。</p><h3 id="如何满足相位"><a href="#如何满足相位" class="headerlink" title="如何满足相位"></a>如何满足相位</h3><p>在电子系统-振荡器一节中，我们提到，巴克豪森振荡准则是系统起振的必要不充分条件。那么皮尔斯振荡器是如何满足这个条件的呢？</p><p>观察下图，其可以被改写为另一种形式：</p><p><table><br>    <tr><br>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/8601a18b87d6277ff030a1392a381f30e924fc95"></center></td><br>          <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240408173101903.png"></center></td></p><p>其中$R_1$可以被理解为一个很小的等效电阻（当然也可以实际加一个电阻在这里）。</p><ol><li>首先，反向放大器让信号相位旋转了180°。</li><li>$R_1,C_1$让信号相位旋转了90°之间的任意一个值（取决于$R_1, C_1$的大小）。</li><li>如果晶振此时呈现感性（即，振荡频率满足$f_s<f<f_p$），那么加上电容$C_2$其会让相位旋转>90°。那么此时，总有一个频率会让相位一共旋转360°，满足巴克豪森震荡准则。</li><li>但是，如果振荡频率$f<f_s$或是$f>f_p$，晶振都将呈容性，那么相当于串联了一个电容，在加上电容$C_2$，整体相位移动会为0°。处于$f_s$时，晶振呈纯阻性，相位移动位于0-90°。</li></ol><p><strong>因此，一定有一个频率位于$f_s&lt;f&lt;f_p$之间，可让系统震荡。这也就是晶振震荡的频率。</strong></p><p>至此，我们已经讨论了它滤波选频的原理和满足巴克豪森振荡准则的原理。</p><h2 id="如何计算匹配电容"><a href="#如何计算匹配电容" class="headerlink" title="如何计算匹配电容"></a>如何计算匹配电容</h2><p>我们注意到，$C_1$和$C_2$两个电容是会影响相位的，而根据巴克豪森振荡准则，反只有相位为满足 $2n\pi$ 的信号才会起振，因此，$C_1,C_2$两个电容是会轻微影响震荡频率的（之所以是轻微影响，是因为它的影响范围在$f_s$到$f_p$之间，这个范围本就很小）。 </p><p>晶振的供应商会给一个“负载电容” $C_L$，$C_L$的值是晶振本身决定的，当晶振外部等效电容等于$C_L$时，其输出的频率最准确。因此代入皮尔斯震荡电路，可以得到如下公式：</p><script type="math/tex; mode=display">C_L=\frac{C_1\times C_2}{C_1+C_2}+C_s</script><p>其中:</p><ul><li>$C_s$为电路板杂散电容和晶振引脚间电容，经验值取3-5pF.</li></ul><p>如果让$C_1=C_2$的话：</p><script type="math/tex; mode=display">C_1=C_2=2(C_L-C_s)</script><p>至此便可计算$C_1$和$C_2$的值。</p><h1 id="Boot选择器"><a href="#Boot选择器" class="headerlink" title="Boot选择器"></a>Boot选择器</h1><h2 id="三种Boot模式"><a href="#三种Boot模式" class="headerlink" title="三种Boot模式"></a>三种Boot模式</h2><p>stm32有三种boot模式，分别使用boot0 和boot1引脚进行控制</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/20210423125742719.png" alt="img"></p><h3 id="主闪存启动"><a href="#主闪存启动" class="headerlink" title="主闪存启动"></a>主闪存启动</h3><ul><li>启动地址：0x08000000 </li><li>BOOT0: 0;  BOOT1: X</li></ul><p>这是STM32内置的Flash，一般使用JTAG或者SWD模式下载程序时，会写入到该区域内，重启后也直接从这启动程序。基本上都是采用这种模式。</p><h3 id="系统存储器启动"><a href="#系统存储器启动" class="headerlink" title="系统存储器启动"></a>系统存储器启动</h3><ul><li>启动地址：0x1FFF0000</li><li>BOOT0: 1;  BOOT1: 0</li></ul><p>系统存储器是芯片内部一块特定的区域，STM32在出厂时，由ST在这个区域内部预置了一段BootLoader。ST公司的这一段Bootloader中提供了使用串口下载程序的固件。可以通过这个BootLoader将程序下载到系统的Flash中。通过串口下载程序步骤如下：</p><p>电脑通过 USB 转串口线连接 STM32 的 USART1，并打开电脑端的上位机；</p><ul><li>接 BOOT0 为高电平，BOOT1 为低电平（选择 System Memory 启动）；</li><li>复位单片机使其进入 bootloader 模式，此时串口可读取；</li><li>接回 BOOT0 低电平，BOOT1 低电平（选择 Flash启动）；</li><li>复位单片机即可启动用户代码，正常运行；</li></ul><h3 id="SRAM启动"><a href="#SRAM启动" class="headerlink" title="SRAM启动"></a>SRAM启动</h3><ul><li>启动地址： 0x20000000</li><li>BOOT0: 1;  BOOT1: 1</li></ul><p>SRAM没有存储程序的能力，一般用于程序调试。如果程序只进行了小修改，然后完全刷入flash，这个过程非常费时。而SRAM读写速度很快，可以在调试的时候使用。</p><h2 id="Boot选择电路"><a href="#Boot选择电路" class="headerlink" title="Boot选择电路"></a>Boot选择电路</h2><h3 id="手动选择电路"><a href="#手动选择电路" class="headerlink" title="手动选择电路"></a>手动选择电路</h3><p>一般来说，我们用不到SRAM启动。因此通常BOOT1通过一个10K电阻下拉接地。</p><p>当然，也可以用跳线让用户自由选择，如正点原子的STM32战舰v3开发版。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/20210516104650598.png" alt="STM32"></p><p>这便是STM32的启动模式手动选择电路。</p><h3 id="自动下载电路"><a href="#自动下载电路" class="headerlink" title="自动下载电路"></a>自动下载电路</h3><p>STM32可使用CH340配合MCUISP进行ISP烧写，这其中的步骤是到以System Memory模式启动，烧录程序，再切换到Flash模式运行程序。通过CH340上的MODEM通讯引脚，可实现该操作。其原理请参考 <em>CH340X+ISP烧录使用指南</em>。</p><p>CH340与单片机连接如下，同时BOOT1通过一个10K电阻下拉接地。<img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/6rGAjBbclrc6aBCFG2kPU72ix9d3Q5Ru3WdUvelS.jpeg" alt="img"></p><p>配合MCUISP软件，该电路可以实现自动对Boot模式进行选择，然后通过串口下载程序。</p><p><strong>此时CH340的RX需和STM32的USART1的TX（PA9）和USART1的RX（PA10）连接</strong>。</p><h1 id="复位电路"><a href="#复位电路" class="headerlink" title="复位电路"></a>复位电路</h1><p>STM32复位引脚为<code>NRST</code>，其复位引脚低电平有效，<strong>内部集成上拉电阻，因此无需外部上拉</strong></p><p>官方推荐的复位电路如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240409191441516.png" alt="image-20240409191441516"></p><p>可以看到，外部仅连接一个手动复位的按键和上电自动复位的电容。</p><h1 id="SWD下载电路"><a href="#SWD下载电路" class="headerlink" title="SWD下载电路"></a>SWD下载电路</h1><p>通常某宝买的盗版ST-Link，就是使用的SWD烧写。这种烧写方式只需要4根接线。 分别为<strong>VCC，GND，SWCLK, SWDIO。其中，SWCLK和SWDIO分别对应STM32上PA14和PA13引脚。</strong></p><p>其中：</p><ul><li><strong>SW协议规定，对于SWDIO，必须在电路板上进行上拉（ARM建议100KΩ）</strong>（虽然大部分板子都采用10KΩ上拉）。</li><li>对于SWCLK，芯片内部集成下拉，没有规定一定需要外部下拉。但是部分开发版依旧给了10K电阻的下拉。</li></ul><p>因此，下载电路如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240409190601883.png" alt="image-20240409190601883"></p><p>其中SWDCLK的下拉电阻可有可无，因为芯片内部已集成下拉。</p><h1 id="通信电平转换电路"><a href="#通信电平转换电路" class="headerlink" title="通信电平转换电路"></a>通信电平转换电路</h1><p>由于STM32使用的是3.3V CMOS电平，需要通过UART,I2C等协议与TTL设备（5V）通信时，尝尝需要进行通信电平转换。</p>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动通信-Ch3-技术基础</title>
      <link href="/posts/3fa30bac.html"/>
      <url>/posts/3fa30bac.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="bc7948d9cd0fbca7e0ea514d36172da91954b1e64fb22cab2b84f2dccb78f49f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 移动通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信传输理论-CH3-传输介质</title>
      <link href="/posts/9b43b6f.html"/>
      <url>/posts/9b43b6f.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="278989baa4e423511d6e3c60cec4655f0a511a2d4c45d2f0d27dce44ed07b4a5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 电信传输理论与工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch2-基本通信协议及其应用</title>
      <link href="/posts/706626ef.html"/>
      <url>/posts/706626ef.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="bc634d698b5018f5f0d1cc45917c9206701379a1d927623c825ec3605393c6b1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动通信-Ch2-无线信道</title>
      <link href="/posts/510ee7d3.html"/>
      <url>/posts/510ee7d3.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5733db1ef42138aa47d2daa0039beab87c358f4ebdb5c61496426f037b4b85da"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 移动通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拉普拉斯变换</title>
      <link href="/posts/cc687296.html"/>
      <url>/posts/cc687296.html</url>
      
        <content type="html"><![CDATA[<h1 id="引入——为什么有拉普拉斯变换"><a href="#引入——为什么有拉普拉斯变换" class="headerlink" title="引入——为什么有拉普拉斯变换"></a>引入——为什么有拉普拉斯变换</h1><p>傅里叶变换将时域信号转化到了频域，傅里叶逆变换又实现了频域到时域的过程。根据傅里叶变换的性质，我们发现，使用傅里叶来处理微分方程时，可以消除其中的微分项（时域微分性质）。那如果我们将一个信号从时域变换到频域，在频域处理完后再逆变换回去，那便可以跳过微分项的计算，从而简化计算过程。</p><p>然而，要对一串信号作用傅里叶变换，它就必须要遵循狄利克雷收敛条件。这个条件不利于我们处理一些信号。为了使得更多的信号绝对可积，在傅里叶变换的变换对的基础上给信号施加一个<strong>衰减因子</strong>，又不影响其可以跳过微分的性质，那么我们便可以更轻易地处理系统函数了和求解微分方程。因此，产生了拉普拉斯变换</p><p>因此，我们定义了一个$e^{-\sigma t}$ 做为衰减因子，作用于傅里叶变换的基础上，成为拉氏变换。</p><h1 id="定义和性质"><a href="#定义和性质" class="headerlink" title="定义和性质"></a>定义和性质</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><h3 id="双边拉普拉斯变换"><a href="#双边拉普拉斯变换" class="headerlink" title="双边拉普拉斯变换"></a>双边拉普拉斯变换</h3><p>拉普拉斯变换对的定义如下（双边）</p><ul><li><strong>正变换</strong></li></ul><script type="math/tex; mode=display">F(s)=L[f(t)]=\int_{-\infty}^{\infty}f(t)e^{-st}dt, s=\sigma+j\omega</script><ul><li><strong>逆变换</strong></li></ul><script type="math/tex; mode=display">f(t)=L^{-1}[F(s)]=\frac{1}{2\pi j}\int_{\sigma -j\infty}^{\sigma+j\infty} F(s)e^{st}ds</script><p>正如引入中所介绍，傅里叶变换的定义式是：</p><script type="math/tex; mode=display">F(\omega)=F[f(t)]=\int_{-\infty}^{\infty}f(t)e^{-j\omega t}dt</script><p>如果将傅里叶变换定义中的$e^{-j\omega t}$ 乘上衰减因子$e^{-\sigma t}$，它就变成了$e^{-j\omega t}\times e^{-\sigma t}=e^{-(j\omega+\sigma)t}$， 记复数$j\omega + \sigma =s$，就可以写成$e^{-st}$，这就变成了拉普拉斯变换</p><p>这个衰减因子的 $\sigma$ 是做为常数存在的，也就是可以通过控制 $\sigma$ 来控制衰减的大小。</p><h3 id="单边拉普拉斯变换"><a href="#单边拉普拉斯变换" class="headerlink" title="单边拉普拉斯变换"></a>单边拉普拉斯变换</h3><p>双边拉普拉斯变换中，把 $t&lt;0$ 的范围也算进去了。在现实中，可以将信号开始产生的时刻记为 $t = 0$, 那么$t&lt;0$时没有信号因此$f(t)= 0, t&lt;0$。因此，只需要对$[0, +\infty]$ 区间内的信号进行处理即可。这也就成了单边拉普拉斯变换。(这个$0^-$表示从左侧无限趋近于0开始，从工程的角度解释，就是包含了电感电容等储能元件在 t=0 时的初始条件)</p><ul><li><strong>正变换</strong></li></ul><script type="math/tex; mode=display">F(s)=L[f(t)]=\int_{0^-}^{\infty}f(t)e^{-st}dt, s=\sigma+j\omega</script><p>（逆变换同双边变换，因为逆变换的积分是作用于 s 上的，所以不受 t 的影响）</p><p><strong>在分析实际的系统时，一般都使用单边拉普拉斯变换，因为实际系统具有信号开始产生的 t=0 时刻，t&lt;0 时信号为0，下方所有的讨论也都是适用于单边拉普拉斯变换的</strong></p><h2 id="收敛域（Range-of-Convergence-ROC）"><a href="#收敛域（Range-of-Convergence-ROC）" class="headerlink" title="收敛域（Range of Convergence ROC）"></a>收敛域（Range of Convergence ROC）</h2><p>纵然乘上了个$e^{-\sigma t}$，也只是增加了$f(t)$收敛的可能性，仍不能保证其收敛。因此拉普拉斯变换存在收敛范围，仅在收敛范围内时，$F(s)$ 存在</p><p>那么对于一个施加了衰减因素的信号 $f(t)e^{-\sigma t}$, 其收敛就是当 $t \rarr \infty$ 时，$\lim_{t\rarr\infty}f(t)e^{-\sigma t}=0$ </p><p>假设存在一个$\sigma_0$, 当$\sigma &gt; \sigma_0$时（也就是衰减速度比$\sigma_0$控制的衰减速度更大时），$\lim_{t\rarr\infty}f(t)e^{-\sigma t}=0$ ；  $\sigma &gt; \sigma_0$这个区间便被称为拉普拉斯变换的收敛域，记作$Rs[s] = \sigma &gt; \sigma_0$</p><p><em>举个例子</em></p><p><em>$f(t)=e^{-2t}, t&gt;0$ 求收敛域</em></p><script type="math/tex; mode=display">f(t)e^{-\sigma t}= e^{-2t}e^{-\sigma t}=e^{-(2+\sigma)t}</script><script type="math/tex; mode=display">\lim_{t\rarr\infty}e^{-(2+\sigma)t}=0</script><p><em>故$(2+\sigma) &gt; 0$</em>，<em>因此拉氏变换敛域是$\sigma &gt; -2$</em></p><h2 id="典型信号的拉普拉斯变换"><a href="#典型信号的拉普拉斯变换" class="headerlink" title="典型信号的拉普拉斯变换"></a>典型信号的拉普拉斯变换</h2><div class="note danger flat"><p>下面这些都是五星级的，拉普拉斯变换的计算通常使用变换对，下面这些都是常用的变换对</p></div><h3 id="单位阶跃信号（step-signal）"><a href="#单位阶跃信号（step-signal）" class="headerlink" title="单位阶跃信号（step signal）"></a>单位阶跃信号（step signal）</h3><p>信号$f(t) = u(t)$</p><p>因为单边拉式变换从0开始，单位阶跃信号 u(t) 在 $[0,+\infty]$ 范围内都是1，所以下式直接带1</p><script type="math/tex; mode=display">\int_{0}^{\infty}1\times e^{-st}dt=-\frac{1}{s}e^{-st}\bigg|_{0}^{\infty} =\frac{1}{s}</script><h3 id="指数信号-exponential-signal"><a href="#指数信号-exponential-signal" class="headerlink" title="指数信号 (exponential signal)"></a>指数信号 (exponential signal)</h3><p>信号$f(t) = e^{-(\alpha+j\beta)t}$</p><script type="math/tex; mode=display">\int_{0}^{\infty}e^{-(\alpha+j\beta)t}\times e^{-st}dt=\frac{e^{-(s+\alpha+j\beta)t}}{-(s+\alpha+j\beta)}\bigg|^{\infty}_{0}= \frac{1}{(s+\alpha+j\beta)}</script><p>如果$\beta= 0 $，即这是一个实数指数：</p><script type="math/tex; mode=display">F(s)=\frac{1}{(s+\alpha)}, (\sigma > \alpha)</script><p>其中$(\sigma &gt; \alpha )$ 是其收敛域</p><h3 id="单位冲击信号（unit-sample-signal）"><a href="#单位冲击信号（unit-sample-signal）" class="headerlink" title="单位冲击信号（unit sample signal）"></a>单位冲击信号（unit sample signal）</h3><p>信号$f(t) = \delta (t)$</p><script type="math/tex; mode=display">\int_{0^-}^{\infty}\delta(t)\times e^{-st}dt= 1</script><p>如果有时移时：</p><script type="math/tex; mode=display">\int_{0^-}^{\infty}\delta(t-t_0)\times e^{-st}dt= e^{-st_0}</script><h3 id="斜坡信号-ramp-signal"><a href="#斜坡信号-ramp-signal" class="headerlink" title="斜坡信号 (ramp signal)"></a>斜坡信号 (ramp signal)</h3><p>$f(t)= r(t)=t\times u(t)$，在$t&gt;0$时可写成$f(t)=t$</p><p>(下面用了分部积分)</p><script type="math/tex; mode=display">\int_{0^-}^{\infty} t \times e^{-st}dt= -\frac{1}{s}\int_{0}^{\infty}t\ d{e^{-st}}= -\frac{1}{s}\bigg[ t\cdot e^{-st}\bigg|^{\infty}_{0}- \int_{0}^{\infty}e^{-st}dt \bigg]=\frac{1}{s^2}</script><h2 id="拉普拉斯变换的性质"><a href="#拉普拉斯变换的性质" class="headerlink" title="拉普拉斯变换的性质"></a>拉普拉斯变换的性质</h2><div class="note danger flat"><p>下面这些都是五星级的，证明请参考Dr. Ruiheng Wu 的 PPT 或是百度，方法千奇百怪的，这里不再赘述。</p></div><h3 id="线性"><a href="#线性" class="headerlink" title="线性"></a>线性</h3><p>若：</p><script type="math/tex; mode=display">L[f_1(t)]=F_1(s), L[f_2(t)]=F_2(s)</script><p>有：</p><script type="math/tex; mode=display">L[k_1f_1(t)+k_2f_2(t)]=k_1F_1(s)+k_2F_2(s)</script><h3 id="时移"><a href="#时移" class="headerlink" title="时移"></a>时移</h3><p>若：</p><script type="math/tex; mode=display">L[f(t)]=F(s)</script><p>有：</p><script type="math/tex; mode=display">L[f(t-t_0)]=F(s)e^{-st_0}</script><h3 id="频移"><a href="#频移" class="headerlink" title="频移"></a>频移</h3><p>若：</p><script type="math/tex; mode=display">L[f(t)]=F(s)</script><p>有：</p><script type="math/tex; mode=display">L[f(t)e^{-\alpha t}]=F(s+\alpha)</script><h3 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h3><p>若：</p><script type="math/tex; mode=display">L[f(t)]=F(s)</script><p>有：</p><script type="math/tex; mode=display">L[f(at)]=\frac{1}{a}F(\frac{s}{a}), a>0</script><p><em>如果同时时移和缩放：</em></p><script type="math/tex; mode=display">L[f(at-b)u(at-b)]=\frac{1}{a}F(\frac{s}{a})e^{-s\frac{b}{a}}</script><h3 id="时域微分（一重和二重必记）"><a href="#时域微分（一重和二重必记）" class="headerlink" title="时域微分（一重和二重必记）"></a>时域微分（一重和二重必记）</h3><p>一重</p><script type="math/tex; mode=display">L\bigg[\frac{df(t)}{dt}\bigg]=sF(s)-f(0_-)</script><p>二重</p><script type="math/tex; mode=display">L\bigg[\frac{df^2(t)}{dt}\bigg]=s^2F(s)-sf(0_-)-sf^{'}(0_-)</script><p>通式</p><script type="math/tex; mode=display">L\bigg[\frac{df^n(t)}{dt}\bigg]=s^nF(s)-\sum ^{n-1}_{r=0}s^{n-r-1}f^{r}(0_-)</script><h3 id="初值定理（时域趋近于0时的s域）"><a href="#初值定理（时域趋近于0时的s域）" class="headerlink" title="初值定理（时域趋近于0时的s域）"></a>初值定理（时域趋近于0时的s域）</h3><script type="math/tex; mode=display">\lim_{t\rarr0^+}f(t)=f(0_+)=\lim_{s\rarr\infty}sF(s)</script><h3 id="终值定理（时域趋近于无穷时的s域）"><a href="#终值定理（时域趋近于无穷时的s域）" class="headerlink" title="终值定理（时域趋近于无穷时的s域）"></a>终值定理（时域趋近于无穷时的s域）</h3><script type="math/tex; mode=display">\lim_{t\rarr \infty}f(t)=\lim_{s\rarr0}sF(s)</script><h3 id="卷积定理"><a href="#卷积定理" class="headerlink" title="卷积定理"></a>卷积定理</h3><script type="math/tex; mode=display">L[f_1(t)*f_2(t)]=F_1(s)\cdot F_2(s)</script><h3 id="s域微分"><a href="#s域微分" class="headerlink" title="s域微分"></a>s域微分</h3><script type="math/tex; mode=display">L[t^nf(t)]=(-1)^n\frac{d^nF(s)}{ds^n}</script><h3 id="s域积分"><a href="#s域积分" class="headerlink" title="s域积分"></a>s域积分</h3><script type="math/tex; mode=display">L\bigg[\frac{f(t)}{t}\bigg]=\int_{s}^{\infty}F(s)ds</script><h1 id="拉普拉斯反变换"><a href="#拉普拉斯反变换" class="headerlink" title="拉普拉斯反变换"></a>拉普拉斯反变换</h1><h2 id="变换的两种方法"><a href="#变换的两种方法" class="headerlink" title="变换的两种方法"></a>变换的两种方法</h2><p>要从F(s)变回f(t)，通常来说有两种方法：</p><ul><li>部分分式展开法</li><li>留数定理计算：留数定理指出，如果一个函数在某个点处有一个孤立奇点（例如拉普拉斯变换里面的极点），那么该函数在该点的留数就是拉普拉斯反变换的系数。因此，通过计算其所有极点的留数，即可求得拉普拉斯反变换表达式。</li></ul><p>正如前面提及，拉普拉斯变换常用变换对进行计算，将f(t)或F(s)往变换对上凑，以此来简便计算实现变换。而部分分式展开法就是为此而设计的，该课程仅介绍该方法。</p><p>下面是常用的拉普拉斯变换对：</p><p><img src="https://img-blog.csdnimg.cn/3695f24fdd864ef5a57ac31601b2168b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAV3JlbmfmiJHmmK8wMDI=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="img"></p><h2 id="部分分式展开法"><a href="#部分分式展开法" class="headerlink" title="部分分式展开法"></a>部分分式展开法</h2><p>对于任意一个式子，都可以写成分数的形式，无论是真分数还是假分数，总之它是可以的。也就是说，我们可以把F(s)拆分成分母和分子两部分</p><script type="math/tex; mode=display">F(s)=\frac{A(s)}{B(s)}=\frac{a_ms^m+a_{m-1}s^{m-1}+...+a_{1}s+a_0}{b_ns^n+b_{n-1}s^{n-1}+...+b_{1}s+b_0}</script><h3 id="F-s-为真分式"><a href="#F-s-为真分式" class="headerlink" title="F(s)为真分式"></a>F(s)为真分式</h3><p>若F(s)为真分式，即，其分子的次数低于分母的次数，那么可作如下处理：</p><p>$B(s)$ 这一组多项式可以被因式分解<em>（因式分解就是：多项式$3x^2-2x-1 = (3x+1)(x-1)$）</em></p><p>因此F(s)可以被写成：</p><script type="math/tex; mode=display">F(s)=\frac{A(s)}{(s-p_1)(s-p_2)...(s-p_n)}</script>]]></content>
      
      
      <categories>
          
          <category> 大二下 </category>
          
          <category> 信号与系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟信号分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信传输理论-CH2-DataTransmission</title>
      <link href="/posts/5b823d72.html"/>
      <url>/posts/5b823d72.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="547c6a01a6e097fa7ef6ae2d622af3a13fe7804c8d8192d5e0f96aad3d538121"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 电信传输理论与工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思常用短语</title>
      <link href="/posts/fea3ad7c.html"/>
      <url>/posts/fea3ad7c.html</url>
      
        <content type="html"><![CDATA[<h1 id="锻炼身体"><a href="#锻炼身体" class="headerlink" title="锻炼身体"></a>锻炼身体</h1><ul><li>Intense exercise 剧烈的运动</li></ul><h1 id="传统文化"><a href="#传统文化" class="headerlink" title="传统文化"></a>传统文化</h1><h1 id="节假日和聚会"><a href="#节假日和聚会" class="headerlink" title="节假日和聚会"></a>节假日和聚会</h1><h1 id="自然环境"><a href="#自然环境" class="headerlink" title="自然环境"></a>自然环境</h1><ul><li>an oasis of calm in the midst of urban chaos 城市中的平静绿洲   (midst /mɪdst/ 在……当中 n.)；（chaos /ˈkeɪɒs/ 混乱 n.）；</li><li>Hustle and bustle 熙熙攘攘，城市的喧嚣</li><li>provide visual appeal 提供视觉吸引力（常用于描述观赏性植物）</li><li>symphony of birdsong 鸟鸣的交响曲 （symphony /ˈsɪmfəni/ 交响曲 n.）</li><li>become one with nature 融入为自然的一员</li><li>planting flowers = gardening </li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 雅思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代通信网络-Ch1-Overview</title>
      <link href="/posts/cfa858d3.html"/>
      <url>/posts/cfa858d3.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3e59530ea1b896f56e8b09fadd4e92de6185590d79bd3e545c3c103608423408"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 现代通信网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Part1-Filter</title>
      <link href="/posts/a7a0e2d0.html"/>
      <url>/posts/a7a0e2d0.html</url>
      
        <content type="html"><![CDATA[<h1 id="滤波器基本参数"><a href="#滤波器基本参数" class="headerlink" title="滤波器基本参数"></a>滤波器基本参数</h1><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226174510849.png" alt="image-20240226174510849"></p><p>上图展示了滤波器通带、阻带、过渡带。</p><h3 id="特征角频率和特征频率-f-0-f-n-pole-frequency-nature-frequency"><a href="#特征角频率和特征频率-f-0-f-n-pole-frequency-nature-frequency" class="headerlink" title="特征角频率和特征频率($f_0/f_n$) pole frequency/ nature frequency"></a>特征角频率和特征频率($f_0/f_n$) pole frequency/ nature frequency</h3><p>它只与滤波用的电阻和电容元件的参数有关，通常对于带通(带阻）滤波器，称为带通(带阻）滤波器的中心角频率或中心频率$f_0$，是通带(阻带）内电压增益最大(最小）点的频率。<br>滤波器的截止频率（$f_c$）cut-off frequency</p><h3 id="滤波器的截止频率（-f-c-）cut-off-frequency"><a href="#滤波器的截止频率（-f-c-）cut-off-frequency" class="headerlink" title="滤波器的截止频率（$f_c$）cut-off frequency"></a>滤波器的截止频率（$f_c$）cut-off frequency</h3><p>一般地是指幅度响应比通带低3 dB时的频率。无论是什么样的滤波器，截止频率一般都是指-3db的位置，也就是说从滤波器的通带的增益算起，下降-3db的位置。</p><p><strong>Chenqiao原话：但是一些文献里面认为$f_0$就是截止频率$ f_c $，截止频率不一定需要在-3dB point。这里需要根据实际情况讨论。</strong></p><hr><h1 id="无源滤波器-Passive-Filter"><a href="#无源滤波器-Passive-Filter" class="headerlink" title="无源滤波器(Passive Filter)"></a>无源滤波器(Passive Filter)</h1><p>电容、电抗和阻抗的关系：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226174753964.png" alt="image-20240226174753964"></p><p>所有滤波器的公式都是将电容和电抗表现成阻抗的形式，代入电路得出的。</p><h2 id="一阶无源滤波器"><a href="#一阶无源滤波器" class="headerlink" title="一阶无源滤波器"></a>一阶无源滤波器</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226174630689.png" alt="image-20240226174630689"></p><h3 id="低通"><a href="#低通" class="headerlink" title="低通:"></a>低通:</h3><p>一阶低通滤波器：输出的电压等于夸在电容两端的电压，输出信号的相位</p><script type="math/tex; mode=display">\psi=\phi_0-arctan⁡(R/X_C )=\phi_0-arctan⁡(2πfRC)。</script><p><strong>因此，当到达截止频率$X_C=R$时，相位移动为-45°</strong></p><h3 id="高通："><a href="#高通：" class="headerlink" title="高通："></a>高通：</h3><p>输出的电压等于夸在电阻两端的电压，相位：</p><script type="math/tex; mode=display">\psi=\phi_0+π/2-arctan⁡(2πfRC)</script><p><strong>因此，当到达截止频率$X_C=R$时，相位移动为+45°</strong></p><h2 id="二阶滤波器"><a href="#二阶滤波器" class="headerlink" title="二阶滤波器"></a>二阶滤波器</h2><p>对于高阶滤波器，可以看成多个一阶串联，因此相位移动是叠加的。例如二阶高通滤波器截止频率的相位移动就是+90°</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175143051.png" alt="image-20240226175143051"></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175159970.png" alt="image-20240226175159970"></p><h3 id="增益下降slope比较"><a href="#增益下降slope比较" class="headerlink" title="增益下降slope比较"></a>增益下降slope比较</h3><p>二阶滤波器可以看做两个一阶滤波器串联。因此假设对于某一频率，一个二阶滤波器由两个同样的一阶滤波器串联而成。一阶滤波器的slope=-20dB/Decade, 那么二阶滤波器slope就是一阶滤波器的平方也就是-40dB/ Decade. (Decade=f/fc(3dB))</p><p>对于二阶带通滤波器而言，两端的slope是两个独立的一阶滤波器，因此还是-20dB/ Decade.</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175308020.png" alt="image-20240226175308020"></p><hr><h1 id="有源滤波器-Active-Filter"><a href="#有源滤波器-Active-Filter" class="headerlink" title="有源滤波器(Active Filter)"></a>有源滤波器(Active Filter)</h1><p>有源滤波器带有运放，因此可以实现增益大于1（0dB）。且提供更好的输入输出阻抗。</p><h2 id="有源低通滤波器"><a href="#有源低通滤波器" class="headerlink" title="有源低通滤波器"></a>有源低通滤波器</h2><table>    <tr>        <td><center><img src= "https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175432892.png"></center></td>            <td><center><img src= "https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175447274.png"></center></td></table><p>其截止频率$f=1/2πRC$, </p><p>增益$DC Gain=(1+R_2/R_1 )$,</p><p>如果把低通滤波器的电阻放在反馈电阻上，同样能通过影响不同频率的放大倍数进行滤波。这样可以得到更好的输入阻抗。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175650304.png" alt="image-20240226175650304"></p><p>一阶有源HPF只需要把电容更换位置，放在信号输入端即可（也就是R1前面）。</p><h2 id="有源高通滤波器-二阶"><a href="#有源高通滤波器-二阶" class="headerlink" title="有源高通滤波器(二阶)"></a><strong>有源高通滤波器(二阶)</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175821801.png" alt="image-20240226175821801"></p><p>同无源滤波器分析的一样，有源一阶滤波器的slope斜率为-20dB/Decade, 二阶为-40dB/Decade.</p><h2 id="有源带通滤波器-二阶"><a href="#有源带通滤波器-二阶" class="headerlink" title="有源带通滤波器(二阶)"></a><strong>有源带通滤波器(二阶)</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175903538.png" alt="image-20240226175903538"></p><h2 id="有源带阻滤波器"><a href="#有源带阻滤波器" class="headerlink" title="有源带阻滤波器"></a><strong>有源带阻滤波器</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226175930196.png" alt="image-20240226175930196"></p><p>相当于是一个有源加法器，输入信号为一个高通的输出和一个低通的输出。增益-频率响应为高通和低通的叠加。<br>有源的二阶带通和带阻中心频率计算公式都是</p><script type="math/tex; mode=display">f_0=\sqrt{(f_L⋅f_H)}</script><p>陷波滤波器(Notch Filter) 是带阻滤波器的一种，只不过阻带很窄。（好像不是重点，没考过）</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226180019446.png" alt="image-20240226180019446"></p><hr><h1 id="Sallen-Key-滤波器（五星级）"><a href="#Sallen-Key-滤波器（五星级）" class="headerlink" title="Sallen-Key 滤波器（五星级）"></a>Sallen-Key 滤波器（五星级）</h1><p>Sallen-key是设计有源滤波器设计的一种拓扑结构，VCVS（Voltage-controlled voltage-source）滤波器的变种，由麻省理工学院林肯实验室的R. P. Sallen and E. L. Key 在1955所提出。</p><h2 id="Q-Factor"><a href="#Q-Factor" class="headerlink" title="Q Factor"></a>Q Factor</h2><p>用频率定义Q：电路发生谐振的频率 ω0 称为谐振频率谐振峰两边 I ＝ （1/2） Im 处的频率值ω2j 和 ω1j 之间宽度定义为通频带宽度 BW，衡量一个谐振器在电路中性能的好坏。常用品质因数 Q ＝ ω0/ω2j －ω1j 来描述，Q 的物理意义是在谐振频率ω0 附近将具有更强的频率响应；对于偏离 ω0 较远的频率，则响应很弱或不响</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226180243570.png" alt="image-20240226180243570"></p><p>对低通和高通滤波器而言,<strong>Q值等于滤波器电路电压增益（截止频率对应处的增益）模$|A_u |$与通带增益的模之比 $|A_{up}|$；对带通(带阻）滤波器而言，Q值等于中心角频率与通带(阻带）宽度bw之比。</strong></p><h2 id="S-K滤波器的整体模型"><a href="#S-K滤波器的整体模型" class="headerlink" title="S-K滤波器的整体模型"></a>S-K滤波器的整体模型</h2><p>图中电阻根据低通、带通、高通不同要求替换成电容。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226180316035.png" alt="image-20240226180316035"></p><p>计算通式为：</p><script type="math/tex; mode=display">\frac{V_{out}}{V_{in}}=\frac{Z_3\times Z_4}{Z_1\times Z_2 + Z_2\times Z_3 +Z_3 \times Z_4 +Z_1 \times Z_3}</script><h2 id="S-K低通-amp-高通滤波器"><a href="#S-K低通-amp-高通滤波器" class="headerlink" title="S-K低通&amp;高通滤波器"></a>S-K低通&amp;高通滤波器</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226180514237.png" alt="image-20240226180514237"></p><p>以低通滤波器为例：</p><script type="math/tex; mode=display">Z_1=R_1,Z_2=R_2,Z_3=\frac{1}{(sC_1 )},Z_4=\frac{1}{(sC_2 )}, 其中 s=jω</script><script type="math/tex; mode=display">A=\frac{\frac{1}{sC_1}\times \frac{1}{sC_2}}{R_1R_2+R_2\frac{1}{sC_1}+\frac{1}{sC_1}\times \frac{1}{sC_2}+R_1\frac{1}{sC_1}}</script><script type="math/tex; mode=display">=  \frac {1}{R_ {1}R_ {2}C_ {1}C_ {2}s^ {2}+R_ {2}C_ {2}s+1+R_ {1}C_ {2}s}</script><script type="math/tex; mode=display">=  \frac {1}{R_ {1}R_ {2}C_ {1}C_ {2}s^ {2}+C_ {2}s(R_ {1}+R_ {2})+1}</script><h3 id="特征频率"><a href="#特征频率" class="headerlink" title="特征频率:"></a>特征频率:</h3><p>（有时候认为$f_n=f_c$，$f_c$不在-3dB点，所以截止频率也是这个，具体要看题目）</p><script type="math/tex; mode=display">f_n=\frac{1}{(2\pi\sqrt{(R_1 R_2 C_1 C_2 )}}</script><h3 id="品质因子Q："><a href="#品质因子Q：" class="headerlink" title="品质因子Q："></a>品质因子Q：</h3><script type="math/tex; mode=display">Q=\frac{1}{R_1+R_2}(\sqrt{R_1 R_2 \frac{C_1}{C_2} })</script><p>当$R_1=R_2, C_1=C_2$ 时，Q 有：</p><script type="math/tex; mode=display">Q=\frac{1}{3-A}</script><p>其中A为放大电路的放大倍数。</p><h2 id="设计S-K滤波器的例题"><a href="#设计S-K滤波器的例题" class="headerlink" title="设计S-K滤波器的例题"></a>设计S-K滤波器的例题</h2><p>设计一个具有以下特性的二阶高通Sallen-Key滤波器电路：$f_C=200Hz，Q=3$。</p><p>解：</p><p>为简化计算，认为$R_1=R_2,C_1=C_2$</p><p>$f_c=1/2πRC=200Hz$, 选择c=100nF继续计算， R=7957Ω。（这道题认为$f_c=f_0$，PPT上举例原题）</p><script type="math/tex; mode=display">Q=3=\frac{1}{3-A},A=\frac{3Q-1}{Q}=2.667</script><p>所以放大电阻分别取10K和6K</p><h2 id="设计S-K滤波器生成类型的判定："><a href="#设计S-K滤波器生成类型的判定：" class="headerlink" title="设计S-K滤波器生成类型的判定："></a>设计S-K滤波器生成类型的判定：</h2><p>滤波器的类型是看 $\omega_0$ 处有没有bump来判定的，因此使用品质因素Q来判定</p><p>巴特沃夫滤波器没有bump,因此Q<1贝塞尔滤波器Q≈1切比雪夫滤波器Q>1</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240226181523677.png" alt="image-20240226181523677"></p>]]></content>
      
      
      <categories>
          
          <category> 大三上 </category>
          
          <category> 电子系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 滤波器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Part1-CH4-数字的表达和算数电路</title>
      <link href="/posts/202924f0.html"/>
      <url>/posts/202924f0.html</url>
      
        <content type="html"><![CDATA[<h1 id="加法器"><a href="#加法器" class="headerlink" title="加法器"></a>加法器</h1><h2 id="半加法器"><a href="#半加法器" class="headerlink" title="半加法器"></a>半加法器</h2><p>半加法器接受两个输入：$x_1,x_2$ 并产生本位和进位两个输出。半加法器的真值表和实现电路如下图所示</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209031411970.png"></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209031506622.png"></center></td>    </tr></table><h2 id="全加法器"><a href="#全加法器" class="headerlink" title="全加法器"></a>全加法器</h2><p>全加法器：输入$x_1,x_2,c$,三位（其中c表示上一位到这一位的进位）计算三位相加产生本位和进位。真值表和电路如下</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209031737291.png"></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209031755498.png"></center></td>    </tr></table><h2 id="串行进位全加法器（Ripple-carry-Adder）"><a href="#串行进位全加法器（Ripple-carry-Adder）" class="headerlink" title="串行进位全加法器（Ripple-carry Adder）"></a>串行进位全加法器（Ripple-carry Adder）</h2><p>讲上述全加法器进行串联，前一个的进位输出连接至下一个的进位输入。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/clip_image002.gif" alt="图表, 箱线图  描述已自动生成" style="zoom:150%;" /></p><div class="note info simple"><p>原码（True form）反码(1’s complement ) 补码(2’s complement) 在 计算机组成与接口 中有更详细的介绍，此处略去。</p></div><h1 id="加法（减法）单元"><a href="#加法（减法）单元" class="headerlink" title="加法（减法）单元"></a>加法（减法）单元</h1><p>在计算机中，设计专门的减法电路划不来，因此使用补码+加法电路来计算减法。补码的求法是原码取反加一，因此设计如下的计算模块</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209032156159.png" alt="image-20240209032156159"></p><ul><li>当Add/Sub control 为0时，$y_i=y_i\oplus0=y_i$, 同时输入的基础进位$c_0$等于0。此时是正常调用全加法器计算加法。</li><li>当Add/Sub control为1时，$y_i=y_i\oplus1=\overline y_i$,同时$c_0=1$。相当于把序列$y$取反后加1（这个加一就是基础进位$c_0$加上来的）算成了补码的形式。故调用全加法器计算减法。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大三上 </category>
          
          <category> 数字电路设计与可靠性工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Part1-CH5-组合电路-构建快</title>
      <link href="/posts/5cb49984.html"/>
      <url>/posts/5cb49984.html</url>
      
        <content type="html"><![CDATA[<h1 id="多路复用器"><a href="#多路复用器" class="headerlink" title="多路复用器"></a>多路复用器</h1><p>多路复用器可以使用逻辑门制造，也可以使用Transition Gate 制造。一个多路复用器具有n个输入，那么就需要$log_{2}{n}$路选择信号。考试中最多出现4 to 1多路复用器。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209032918533.png" alt="image-20240209032918533"></p><p>例题：2x2交叉选择器</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209032958296.png"></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209033003100.png"></center></td>    </tr></table><h2 id="使用多路复用器构建逻辑函数-五星级中的五星级"><a href="#使用多路复用器构建逻辑函数-五星级中的五星级" class="headerlink" title="使用多路复用器构建逻辑函数 五星级中的五星级"></a>使用多路复用器构建逻辑函数 <em>五星级中的五星级</em></h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209033354986.png" alt="image-20240209033354986"></p><p>如上图这个情况，使用$w_1,w_2$做为选择信号，可以把输出分为4个case：</p><ul><li>Case 0: $w_1=0,w_2=0$, 输出为0</li><li>Case 1: $w_1=0,w_2=1$, 输出等于$w_3$</li><li>Case 3: $w_1=1,w_2=0$,输出等于$w_3$</li><li>Case 4: $w_1=1,w_2=1$,输出等于1</li></ul><p>这样就实现了用多路复用器来实现基础的逻辑组合。除了简单的电路外，还可以使用逻辑门的输出和多路复用器进行组合，实现更复杂的电路。</p><p><strong>香农拓展定理（Shannon’s Expansion Theorem）</strong></p><p>香农拓展定理的核心理念是：对于一个Boolean function, 可以把它写为分解为$w_1 (…)+ \overline w_1 (…)$，也就是$w_1$和$\overline w_1$下的两种情况。这里的$w_1$为称为辅因子(cofactor). 那么对于一个有$w_n$项的布尔函数，把$w_1$作为辅因子，可以写成如下表达式：</p><script type="math/tex; mode=display">f(  w_ {1}  ,  w_ {2}  ,  \cdots  ,  w_ {n}  )=  \overline {w}_ {1}   \cdot  f(0,  w_ {2}  ,  \cdots  ,  w_ {n}  )+  w_ {1}   \cdot  f(1,  w_ {2}  ,  \cdots  ,  w_ {n}  )</script><p>几个分解的例题：</p><ul><li><strong>例1：</strong></li></ul><script type="math/tex; mode=display">f(  w_ {1}  ,  w_ {2}  ,  w_ {3}  )=  w_ {1}   w_ {2}  +  w_ {1}   w_ {3}  +  w_ {2}   w_ {3}</script><p>可分解为：</p><script type="math/tex; mode=display">f=  w_ {1}   w_ {2}  +  w_ {1}   w_ {3}  +(  w_ {1}  +  \overline {w_ {1}}  )  w_ {2}   w_ {3}  =  w_ {1}  (  w_ {2}  +  w_ {3}  +  w_ {2}   w_ {3}  )+  \overline {w_ {1}}  (  w_ {2}   w_ {3}  )=  w_ {1}  (  w_ {2}  +  w_ {3}  )+  \overline {w_ {1}}  (  w_ {2}   w_ {3}  )</script><ul><li><strong>例2</strong></li></ul><script type="math/tex; mode=display">f=  w_ {1}   \oplus   w_ {2}   \oplus   w_ {3}</script><p>可分解为：</p><script type="math/tex; mode=display">f=\overline w_1(w_ {2}   \oplus   w_ {3}  )+  w_ {1}  (  w_ {2}   \oplus   w_ {3}  )</script><ul><li>例3</li></ul><script type="math/tex; mode=display">f=  \overline {w}_ {1}   \overline {w}_ {3}  +  w_ {1}   w_ {2}  +  w_ {1}   w_ {3}</script><p>使用$w_1$作cofactor：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209034518973.png" alt="image-20240209034518973"></p><p>使用$w_1w_2$做cofactor：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209034545314.png" alt="image-20240209034545314"></p><hr><h1 id="解码器（decoders）"><a href="#解码器（decoders）" class="headerlink" title="解码器（decoders）"></a>解码器（decoders）</h1><p>解码器电路接受$n$个输入，产生$2^n$个输出。其作用是将收到的数据映射到对应的线路上去。举个例子，假设一个2bit decoder受到的数据是11，对应十进制是3（第四个数，从0开始数），那么它会把输出的第4条线置高电平。下面是一个2bit解码器的例子</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209034839045.png" alt="image-20240209034839045"></p><p>使用多路复用器的思路，也可以用两个2 to 4 decoder 合成一个 3 to 8 decoder</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209034926916.png" alt="image-20240209034926916"></p><p>解码器最重要的应用之一是用于存储信息的存储块寻址：</p><p>输入想要访问的存储单元的地址，解码器即可将那一行使能（此处可以b站了解一下NAND闪存或者固态硬盘工作原理）</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209035138132.png" alt="image-20240209035138132"></p><hr><h1 id="多路分解器（Demultiplexer）"><a href="#多路分解器（Demultiplexer）" class="headerlink" title="多路分解器（Demultiplexer）"></a>多路分解器（Demultiplexer）</h1><p>Multiplexer使用不同switch输入组合选择输出不同的单条线路。Demultiplexer使用不同的Switch输入组合将单条线路输出到在多个不同的数据输出上。</p><p>Demultiplexer 可以用 Decoder实现，下图就是个例子。右图$w_1 w_2$被用作Switch 信号，En被用作输入信号。$w_1 w_2$控制En信号在那条路上被输出。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209035039471.png" alt="image-20240209035039471"></p><hr><h1 id="编码器-（Encoder）"><a href="#编码器-（Encoder）" class="headerlink" title="编码器 （Encoder）"></a>编码器 （Encoder）</h1><p>编码器是Decoder的逆过程，它接受$2^n$条输入，产生n个输出。n个输出呈现二进制数，用于表示是哪一条输入。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209035340281.png" alt="image-20240209035340281"></p><hr><h1 id="译码器（Code-Converter）"><a href="#译码器（Code-Converter）" class="headerlink" title="译码器（Code Converter）"></a>译码器（Code Converter）</h1><p>把输入翻译成特定的输出。例如用来点亮7为数码管的code converter, 会把二进制数字输入转化成对应的pattern输出。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/clip_image002.jpg" alt="img"></p><hr><h1 id="算术比较电路"><a href="#算术比较电路" class="headerlink" title="算术比较电路"></a>算术比较电路</h1><p>算术比较电路接受两个二进制数输入，记为A和B，比较A和B大小后输出A&gt;B,A=B,A&lt;B三个输出。</p><p>举个例子：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209035554476.png" alt="image-20240209035554476"></p><p>在这个例子中，定义一个中间信号$i_k=\overline {a_k\oplus b_k}$</p><p>则：A=B可表示为：$AeqB=i_3i_2i_1i_0$，A&gt;B可表示为$AgtB= a_ {3}   \overline {b}_ {3}  +  i_ {3}   a_ {2}   \overline {b}_ {2}  +  i_ {3}   i_ {2}   a_ {1}   \overline {b}_ {1}  +  i_ {3}   i_ {2}   i_ {1}   a_ {0}   \overline {b}_ {0}$ ， A&lt;B可表示为：$AltB=\overline {AeqB+AgtB}$</p><p>算术比较电路也可被分为两类：有符号的，无符号的。</p><ul><li>有符号的：认为输入的数据是以补码的形式输入的，第一位为符号位，这类算术比较电路通常使用加法电路来比较大小</li><li>无符号的：认为输入数据都是原码格式，没有符号位，这类算术比较电路通常直接比较，上图就是无符号的例子</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大三上 </category>
          
          <category> 数字电路设计与可靠性工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32的UART通信(Register)</title>
      <link href="/posts/7c92a281.html"/>
      <url>/posts/7c92a281.html</url>
      
        <content type="html"><![CDATA[<h1 id="基本工作原理-F4系列"><a href="#基本工作原理-F4系列" class="headerlink" title="基本工作原理(F4系列)"></a>基本工作原理(F4系列)</h1><p>F4的USART模块支持可编程字长、自定义波特率、单线半双工模式（RX，TX使用一条线，半双工收发）、唤醒MCU、可编程的停止位长度、可启用/禁用/设置模式的就校验位。其硬件模块如下</p><p>F4系列的USART模块还支持IRDA和LIN，这里不会详细介绍</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240205011104190.png" alt="image-20240205011104190"  /></p><p>USART硬件系统可以被拆分成如下几个重要部分：</p><p>控制初始化工作部分</p><ul><li>使能USART：由CR1寄存器UE位(bit13)进行控制，使能后USART模块才会开始工作，不用时失能减少功耗；</li><li>设置数据字长：F4系列支持8bit和9bit两种长度，通过对CR1寄存器M位(bit12)配置进行控制；</li><li>设置波特率：波特率生成器负责生成控制发送速率的时钟，由USART_BRR寄存器控制。</li><li>设置停止位长度：由CR2寄存器中bit[12:13]控制，支持0.5 / 1 / 1.5 / 2四种停止位长度</li><li>设置奇偶校验：CR1寄存器PCE位（bit10）控制。</li></ul><p>控制收发工作部分</p><ul><li>DR(数据寄存器)：用于寄存要发送的数据或者收到的数据。发送时，该寄存器内的值会被逐个读取至TDR，并通过移位寄存器逐个bit发送；接受时，RDR寄存器内的数值会逐个写入该寄存器。TDR和RDR寄存器用户不可交互，仅可以操作DR。</li><li>开始发送：当CR1寄存器中发送使能位（bit4）控制。当置 1 时，发送移位寄存器中的数据在 TX 引脚输出</li><li>在发送开始后，TDR寄存器内的数据会被传输到发送移位寄存器，开始自动传输。</li><li>在发送数据开始时，SCLK会产生时钟脉冲，以兼容同步通信。</li></ul><p>状态指示器部分</p><ul><li>TC(Transmission Complete)：当发送完成，且无新的数据被写入待发送时(即，TXE位为1，且没有新数据写入DR使得TXE置0)，TC位将会被置1表示发送完成；否则由硬件置0。该位可以CR1寄存器配置中断</li><li>TXE：DR寄存器和TDR寄存器均已完成数据交接，现数据在发送移位寄存起内准备发送；DR寄存器支持写入新的数据；<strong>TXE寄存器由硬件置位，超DR寄存器写入来清零</strong>。该位可由CR1寄存器配置中断。</li><li>RXNE：类似于TXE，用于指示接收输入已经传到RDR，接收移位寄存器可以接收下一帧数据。</li></ul><p>中断控制器部分</p><ul><li>中断使能分布在CR寄存器中，可在完成单次接收、完成单次发送、完成传输、出现错误、侦测到空闲等时候触发中断</li></ul><p>硬件流控部分</p><ul><li>nRTS：如果使能 RTS 流控制 (RTSE=1)，只要 USART 接收器准备好接收新数据，便会将 nRTS 变  为有效（输出低电平）。当接收寄存器已满时，会将 nRTS 变为无效（高电平）。</li><li>nCTS：如果使能 CTS 流控制 (CTSE=1)，则发送器会在发送下一帧前检查nCTS。如果 nCTS 有效（收到低电平），则会发送下一数据（假设数据已准备好发送，即 TXE=0）；否则不会进行发送。如果在发送过程中 nCTS 变为无效，则当前发送完成之后，发送器停止。</li></ul><h1 id="UART（F4系列）"><a href="#UART（F4系列）" class="headerlink" title="UART（F4系列）"></a>UART（F4系列）</h1><h2 id="计算波特率和波特率寄存器"><a href="#计算波特率和波特率寄存器" class="headerlink" title="计算波特率和波特率寄存器"></a>计算波特率和波特率寄存器</h2><p>在工作原理图的下方发送器时钟框图部分可以看出，串口时钟信号$f_{ck}$首先经过USARTDIV分频，然后再经过$8\times(2-OVER8)$分频产生，因此波特率计算公式如下：</p><script type="math/tex; mode=display">Baud=\frac{f_{ck}}{8\times(2-OVER8)\times USARTDIV}</script><p>其中USARTDIV这个常数是通过USART_BRR寄存器配置得到的，计算公式在左下角，这里面的OVER8是超采样的配置（通过USART_CR1寄存器配置，后续介绍），F1系列没有(F1系列默认16倍)。OVER8: “1”=8倍过采样； “0”=16倍过采样。</p><script type="math/tex; mode=display">USARTDIV=DIV\_Mantissa+(DIV\_Fraction/8\times(2-OVER8))</script><p>因此，在已知Baud时，可以算出USARTDIV，又可以根据USARTDIV算出配置USART_BRR寄存器的DIV_Mantissa和DIV_Fraction (整数和小数)部分的值。USART_BRR寄存器结构如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240205175018208.png" alt="image-20240205175018208"></p><p><strong>它本身有32位，但仅使用16位，高16位保持复位值（全0）。USART的整数部分写入15-4位，小数部分写入3-0位。当过采样设置为8倍（i.e., OVER8=1）时，小数仅使用2-0位，DIV_Fraction3 必须保持为0</strong></p><p>举个例子：要设置波特率为115200，OVER8=0, 串口总线频率$f_{ck}=72MHz$</p><script type="math/tex; mode=display">USARTDIV=\frac{72M}{16\times115200}=39.0625</script><script type="math/tex; mode=display">DIV\_Mantissa=39 (直接取整数部分即可)</script><script type="math/tex; mode=display">DIV\_Fraction=(USARTDIV-DIV\_Mantissa)\times16=0.625\times16=10</script><p>在计算DIV_Fraction部分时，计算出的结果不一定全部是整数，因此需要进行四舍五入。因为是以整形数据进行存储，所以计算出的结果会进行直接去小数操作。因此直接在DIV_Fraction计算值后面+0.5来进行四舍五入。</p><p>设置代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> fck=72000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Baud=115200</span></span><br><span class="line"><span class="type">uint16_t</span> mantissa;</span><br><span class="line"><span class="type">uint16_t</span> fraction;</span><br><span class="line">mantissa=fck/(<span class="number">16</span>*Baud);</span><br><span class="line">fraction=(fck%(<span class="number">16</span>*Baud))*<span class="number">16</span>+<span class="number">0.5</span>;</span><br><span class="line">USART-&gt;BRR=(mantissa&lt;&lt;<span class="number">4</span>)+fraction;</span><br></pre></td></tr></table></figure><p>不难看出，因为小数部分进行了舍入操作，所以部分波特率会有误差。典型$f_{ck}$下设置波特率的误差在不同芯片的芯片手册中有详细介绍</p><h2 id="F4系列UART常用功能"><a href="#F4系列UART常用功能" class="headerlink" title="F4系列UART常用功能"></a>F4系列UART常用功能</h2><h3 id="奇偶校验控制"><a href="#奇偶校验控制" class="headerlink" title="奇偶校验控制"></a>奇偶校验控制</h3><p>通过配置CR1寄存器PCE和PS位，可控制奇偶校验使能和模式。启用奇偶校验后，会占用一个数据位填入奇偶校验位。假设数据字长设置为8bit，那么现在7bit是数据位，1bit是奇偶校验位。假设数据字长为9bit，那么8bit是数据位，1bit是就校验位。奇偶校验位填充在原MSB的位置。</p><h3 id="硬件流控制"><a href="#硬件流控制" class="headerlink" title="硬件流控制"></a>硬件流控制</h3><p>分别向 USART_CR3 寄存器中的 RTSE 位和 CTSE 位写入 1，可以分别使能 RTS 和 CTS 流  控制。</p><p>CTS：如果在发送数据时使  nCTS 输入无效，会在停止之前完成发送。如果使 nCTS 有效时数据已写入数据寄存器，则将延迟发送，直到 nCTS 有效。</p><p>RTS：只要 USART 接收器准备好接收新数据，便会将 nRTS 变  为有效（连接到低电平）。当接收寄存器已满时，会将 nRTS 变为无效，表明发送过程会在当前帧结束后停止。</p><h3 id="USART支持的中断事件"><a href="#USART支持的中断事件" class="headerlink" title="USART支持的中断事件"></a>USART支持的中断事件</h3><p>通过配置对应的使能寄存器，在以下事件产生时，可以触发USART中断。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240206232412336.png" alt="image-20240206232412336"></p><h2 id="UART（不含USART-LIDAR-LIN）关键寄存器"><a href="#UART（不含USART-LIDAR-LIN）关键寄存器" class="headerlink" title="UART（不含USART,LIDAR,LIN）关键寄存器"></a>UART（不含USART,LIDAR,LIN）关键寄存器</h2><h3 id="状态寄存器（USART-SR）指示的状态"><a href="#状态寄存器（USART-SR）指示的状态" class="headerlink" title="状态寄存器（USART_SR）指示的状态"></a>状态寄存器（USART_SR）指示的状态</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240206220951514.png" alt="image-20240206220951514"></p><ul><li><p><strong>位 9 CTS</strong>：CTS 标志 (CTS flag) </p><p>​    如果 CTSE 位置 1，当 nCTS 输入变换时，此位由硬件置 1。0：nCTS 状态线上未发生变化  1：nCTS 状态线上发生变化</p><p>​    通过软件将该位清零（通过向 该位中写入 0）。</p><p>​    如果 USART_CR3 寄存器中 CTSIE=1，则会生成中断。  （<em>注：F4系列UART4、5不适用</em>）</p></li><li><p><strong>位 7 TXE：</strong>发送数据寄存器为空 (Transmit data register empty) </p><p>​    当 TDR 寄存器的内容已传输到移位寄存器时，该位由硬件置 1。0：数据未传输到移位寄存器 1：数据传输到移位寄存器</p><p>​    如果 USART_CR1 寄存器  中 TXEIE 位 = 1，则会生成中断。</p><p>​    通过对 USART_DR 寄存器执行写入操作将该位清零。 </p></li><li><p><strong>位 6 TC</strong>：发送完成 (Transmission complete) </p><p>​    如果已完成对包含数据的帧的发送并且 TXE 置 1，则该位由硬件置 1。 0：传送未完成 1：传送已完成</p><p>​    如果 USART_CR1 寄存  器中 TCIE = 1，则会生成中断。</p><p>​    该位由软件序列清零（读取 USART_SR 寄存器，然后写入  USART_DR 寄存器）。TC 位也可以通过向该位写入‘0’来清零。建议仅在多缓冲区通信  时使用此清零序列。</p></li><li><p><strong>位 5 RXNE：</strong>读取数据寄存器不为空 (Read data register not empty) </p><p>​    当 RDR 移位寄存器的内容已传输到 USART_DR 寄存器时，该位由硬件置 1。0：未接收到数据 1：已准备好读取接收到的数据</p><p>​    如果  USART_CR1 寄存器中 RXNEIE = 1，则会生成中断。</p><p>​    通过对 USART_DR 寄存器执行读入  操作将该位清零。RXNE 标志也可以通过向该位写入零来清零。建议仅在多缓冲区通信时使  用此清零序列。 </p></li><li><p><strong>位 4 IDLE：</strong>检测到空闲线路 (IDLE line detected)</p><p>​     检测到空闲线路时，该位由硬件置 1。0：未检测到空闲线路 1：检测到空闲线路</p><p>​    如果 USART_CR1 寄存器中 IDLEIE = 1，则会生成中 断。</p><p>​    该位由软件序列清零（读入 USART_SR 寄存器，然后读入 USART_DR 寄存器）。 </p><p>​    <em>注意：直到 RXNE 位本身已置 1 时（即，当出现新的空闲线路时）IDLE 位才会被再次置 1。</em></p></li><li><p><strong>位 3 ORE：</strong>上溢错误 (Overrun error)</p><p>​     在 RXNE = 1 的情况下，当移位寄存器中当前正在接收的字准备好传输到 RDR 寄存器时，该  位由硬件置 1。 0：无上溢错误 1：检测到上溢错误</p><p>​    如果 USART_CR1 寄存器中 RXNEIE = 1，则会生成中断。该位由软件序列清零（读入 USART_SR 寄存器，然后读入 USART_DR 寄存器。</p><p>​    <em>注意：当该位置 1 时，RDR 寄存器的内容不会丢失，但移位寄存器会被覆盖。如果 EIE 位置 1，  则在进行多缓冲区通信时会对 ORE 标志生成一个中断。</em></p></li><li><p><strong>位 2 NF：</strong>检测到噪声标志 (Noise detected flag) </p><p>​    当在接收的帧上检测到噪声时，该位由硬件置 1。 0：未检测到噪声  1：检测到噪声</p><p>​    该位由软件序列清零（读入 USART_SR 寄  存器，然后读入 USART_DR 寄存器。</p><p>​     <em>注意：如果 EIE 位置 1，则在进行多缓冲区通信时，该位不会生成中断，因为该位出现的时间与  本身生成中断的 RXNE 位因 NF 标志而生成的时间相同。</em></p><p>​    <em>注意：当线路无噪声时，可以通过将 ONEBIT 位编程为 1 提高 USART 对偏差的容差来禁止  NF 标志</em></p></li><li><p><strong>位 1 FE：</strong>帧错误 (Framing error) </p><p>​    当检测到去同步化、过度的噪声或中断字符时，该位由硬件置 1。0：未检测到帧错误 1：检测到帧错误或中断字符</p><p>​    该位由软件序列清零（读入  USART_SR 寄存器，然后读入 USART_DR 寄存器）。</p><p>​    <em>注意：该位不会生成中断，因为该位出现的时间与本身生成中断的 RXNE 位出现的时间相同。  如果当前正在传输的字同时导致帧错误和上溢错误，则会传输该字，且仅有 ORE 位被  置 1。 如果 EIE 位置 1，则在进行多缓冲区通信时会对 FE 标志生成一个中断。</em></p></li><li><p><strong>位 0 PE：</strong>奇偶校验错误 (Parity error) </p><p>​    当在接收器模式下发生奇偶校验错误时，该位由硬件置 1。0：无奇偶校验错误  1：奇偶校验错误</p><p>​    该位由软件序列清零（读取状态寄存器，然后对 USART_DR 数据寄存器执行读或写访问。</p><p>​    将 PE 位清零前软件必须等待  RXNE 标志被置 1。  如果 USART_CR1 寄存器中 PEIE = 1，则会生成中断。 </p></li></ul><h3 id="数据寄存器-USART-DR"><a href="#数据寄存器-USART-DR" class="headerlink" title="数据寄存器(USART_DR)"></a>数据寄存器(USART_DR)</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240206223126595.png" alt="image-20240206223126595"></p><p>该寄存器有32位，但<strong>[31:9]位保留，[8:0]为用于存放待发送或接受的9位或8位数据（9位或8位由设置的字长决定）</strong>这个寄存器其实由TDR和RDR两个寄存器组成，访问的是那个寄存器由读写操作决定。如果是写要发送的数据，则访问的是TDR寄存器。如果是要读已接收的数据，则访问的是RDR寄存器。</p><p>在使能奇偶校验位的情况下（USART_CR1 寄存器中的 PCE 位被置 1）进行发送时，由于  MSB 的写入值（位 7 或位 8，具体取决于数据长度）会被奇偶校验位所取代，因此该值不起任何作用。</p><h3 id="控制寄存器1-USART-CR1"><a href="#控制寄存器1-USART-CR1" class="headerlink" title="控制寄存器1(USART_CR1)"></a>控制寄存器1(USART_CR1)</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240206223222420.png" alt="image-20240206223222420"></p><ul><li><p><strong>位 15 OVER8：过采样模式 (Oversampling mode)</strong>（F1系列没有这一位）</p><p>​    0：16 倍过采样;  1：8 倍过采样</p></li><li><p><strong>位 13 UE：USART 使能 (USART enable) </strong></p><p>​    0：禁止 USART 预分频器和输出 1：使能 USART</p><p>​    该位清零后，USART 预分频器和输出将停止，并会结束当前字节传输以降低功耗。</p><p>​    此位由软  件置 1 和清零。 </p></li><li><p><strong>位 12 M：字长 (Word length)</strong>。该位决定了字长。该位由软件置 1 或清零</p><p>​    0：8 数据位； 1：9 数据位</p><p>​    <em>注意：在数据传输（发送和接收）期间不得更改 M 位</em></p></li><li><p><strong>位 10 PCE：奇偶校验控制使能 (Parity control enable)</strong></p><p>​    0：禁止奇偶校验控制；1：使能奇偶校验控制</p></li><li><p><strong>位 9 PS：奇偶校验选择 (Parity selection)</strong></p><p>​    0：偶校验； 1：奇校验</p></li><li><p><strong>位 8 PEIE：奇偶校验错误中断使能 (PE interrupt enable)</strong></p><p>​    0：禁止中断； 1：当 USART_SR 寄存器中 PE=1 时，生成 USART 中断</p></li><li><p><strong>位 7 TXEIE：发送寄存器空中断使能 (TXE interrupt enable)</strong></p><p>​    0：禁止中断； 1：当 USART_SR 寄存器中 TXE=1 时(i.e., 当 TDR 寄存器的内容已传输到移位寄存器时)，生成 USART 中断</p></li><li><p><strong>位 6 TCIE：传送完成中断使能 (Transmission complete interrupt enable)</strong></p><p>​    0：禁止中断； 1：当 USART_SR 寄存器中 TC=1 时，生成 USART 中断</p></li><li><p><strong>位 3 TE：发送器使能 (Transmitter enable)</strong></p><p>​    0：禁止发送器；1：使能发送器</p></li><li><p><strong>位 2 RE：接收器使能 (Receiver enable)</strong></p><p>​    0：禁止接收器；1：使能接收器并开始搜索起始位</p></li></ul><h3 id="控制寄存器2-USART-CR2"><a href="#控制寄存器2-USART-CR2" class="headerlink" title="控制寄存器2(USART_CR2)"></a>控制寄存器2(USART_CR2)</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240206224629997.png" alt="image-20240206224629997"></p><ul><li><p><strong>位 13:12 STOP：停止位配置 (STOP bit)</strong></p><p>​    00：1 个停止位</p><p>​    01：0.5 个停止位</p><p>​    10：2 个停止位</p><p>​    11：1.5 个停止位</p><p>​    <em>注意：0.5 个停止位和 1.5 个停止位不适用于 UART4 和 UART5</em></p></li></ul><h3 id="控制寄存器3-USART-CR3"><a href="#控制寄存器3-USART-CR3" class="headerlink" title="控制寄存器3(USART_CR3)"></a>控制寄存器3(USART_CR3)</h3><p>  <img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240206225157524.png" alt="image-20240206225157524"></p><ul><li><p><strong>位 11 ONEBIT：一个采样位方法使能 (One sample bit method enable)</strong></p><p>​    0：三个采样位方法 ；1：一个采样位方法（将禁止噪声检测标志 (NF)）</p></li><li><p><strong>位 10 CTSIE：CTS 中断使能 (CTS interrupt enable)</strong></p><p>​    0：禁止中断；1：当 USART_SR 寄存器中 CTS = 1 时，生成中断</p><p>​    <em>注意：该位不适用于 UART4 和 UART5。</em></p></li><li><p><strong>位 9 CTSE： CTS 使能 (CTS enable)</strong></p><p>​    0：禁止 CTS 硬件流控制；1：使能 CTS 模式，仅当 nCTS 输入有效 （连接到 0）时才发送数据。</p></li><li><p><strong>位 8 RTSE： RTS 使能 (RTS enable)</strong></p><p>​    0：禁止 RTS 硬件流控制；1：使能 RTS 中断，仅当接收缓冲区中有空间时才会请求数据。可以接收数据时使 nRTS 输出有效 （连接到 0）。</p></li><li><p><strong>位 7 DMAT： DMA 使能发送器 (DMA enable transmitter)</strong></p><p>​    1：针对发送使能 DMA 模式 ；0：针对发送禁止 DMA 模式</p></li><li><p><strong>位 6 DMAR： DMA 使能接收器 (DMA enable receiver)</strong></p><p>​    1：针对接收使能 DMA 模式 ；0：针对接收禁止 DMA 模式</p></li></ul><h2 id="常用功能对应寄存器总表"><a href="#常用功能对应寄存器总表" class="headerlink" title="常用功能对应寄存器总表"></a>常用功能对应寄存器总表</h2><div class="table-container"><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">寄存器</th><th style="text-align:center">配置</th><th style="text-align:center">功能</th><th style="text-align:center">寄存器</th><th style="text-align:center">配置</th></tr></thead><tbody><tr><td style="text-align:center">使能USART</td><td style="text-align:center">USART_CR1 UE（位13）</td><td style="text-align:center">0：失能；1：使能</td><td style="text-align:center">设置数据字长</td><td style="text-align:center">USART_CR1  M（位12）</td><td style="text-align:center">0：8数据位；1：9数据位</td></tr><tr><td style="text-align:center">设置波特率</td><td style="text-align:center">USART_BRR [15:4]&amp;[3:0]</td><td style="text-align:center">-</td><td style="text-align:center">奇偶校验使能</td><td style="text-align:center">USART_CR1 PCE（位10）</td><td style="text-align:center">0：失能；1：使能</td></tr><tr><td style="text-align:center">奇偶校验模式选择</td><td style="text-align:center">USART_CR1 PS（位9）</td><td style="text-align:center">0：偶校验；1：奇校验</td><td style="text-align:center">发送器使能</td><td style="text-align:center">USART_CR1 TE（位3）</td><td style="text-align:center">0：失能；1：使能</td></tr><tr><td style="text-align:center">接收器使能</td><td style="text-align:center">USART_CR1 RE（位2）</td><td style="text-align:center">0：失能；1：使能</td><td style="text-align:center">设置停止位</td><td style="text-align:center">USART_CR2 STOP（位[13:12]）</td><td style="text-align:center">00：1个;  01：0.5个；<br>10：2个；  11：1.5个</td></tr><tr><td style="text-align:center">DMA 使能发送器</td><td style="text-align:center">USART_CR3 DMAT（位7）</td><td style="text-align:center">0：失能；1：使能</td><td style="text-align:center">DMA 使能接收器</td><td style="text-align:center">USART_CR3 DMAR（位6）</td><td style="text-align:center">0：失能；1：使能</td></tr></tbody></table></div><h2 id="使用UART通信的配置步骤"><a href="#使用UART通信的配置步骤" class="headerlink" title="使用UART通信的配置步骤"></a>使用UART通信的配置步骤</h2><p>设置GPIO的复用模式</p><ul><li>设置为复用-推挽模式</li><li>无上拉、下拉</li><li>设置GPIO时钟（通常设置成高速）</li><li>通过配置GPIO-&gt;AFR寄存器，将USART1复用至GPIO</li></ul><p>设置NVIC（如果要使用中断串口，则需要设置NVIC）</p><ul><li>设置中断分组(AIRCR寄存器)</li><li>设置中断优先级(IPR寄存器[7:4])</li><li>使能对应的中断(ISER)</li></ul><p>设置串口通信相关参数</p><ul><li>使能串口挂在总线的时钟</li><li>对USART-&gt;BRR寄存器写入，设置波特率</li><li>通过对USART-&gt;CR1寄存器写入设置OVER8过采样模式。</li><li>通过对USART-&gt;CR2寄存器写入，设置STOP位长度</li><li>通过对USART-&gt;CR1寄存器写入，设置奇偶校验使能和模式</li><li>如需使用中断，则使能相关中断</li><li>如需使用DMA，则使能DMA</li></ul>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式中常用串行通信</title>
      <link href="/posts/aa8bcb7e.html"/>
      <url>/posts/aa8bcb7e.html</url>
      
        <content type="html"><![CDATA[<h1 id="USART"><a href="#USART" class="headerlink" title="USART"></a>USART</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>USART：</strong>Universal Synchronous Asynchronous Receiver Transmitter，通用同步异步收发器</p><p><strong>UART：</strong>Universal Asynchronous Receiver Transmitte，通用异步收发器</p><p>USART算是UART的哥哥，比UART多一个同步通信特性。<strong>这两个都是串行通信协议</strong>。同步通信需要双方时钟频率一致，而异步通信无需时钟频率一致，通过设置固定的波特率+识别起始位和结束位来识别数据。其数字基带调制均使用NRZ（不归零）码。</p><p><strong>UART和USART最大都只能和一个主机同时通信</strong></p><h2 id="波特率"><a href="#波特率" class="headerlink" title="波特率"></a>波特率</h2><p>UART通信的波特率用于描述UART每秒传输的比特的速度(因为UART采用二进制信道Baud=bps)，其单位为bps(bit per sec)，常用的波特率有9600，115200等。以9600为例，每一个bit持续的Ts就是</p><script type="math/tex; mode=display">T_s=\frac{1}{9600}\approx104.2us</script><h2 id="帧格式"><a href="#帧格式" class="headerlink" title="帧格式"></a>帧格式</h2><p>UART规定数据空闲时，总线为高电平。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240205002705006.png" alt="image-20240205002705006" style="zoom:67%;" /></p><p>UART的帧格式为</p><ol><li>起始位：一个低电平信号，使用由高电平(空闲)朝低电平(起始位)跳变的边沿触发来检测。</li><li>先低后高的数据位，通常为8bit，不同的UART控制器支持的bit数不同，一般可以通过寄存器配置使用几位数据位。</li><li>校验位（可有可无），它有4种校验模式<ul><li>奇校验(ODD)：每个字节传送整个过程中bit为1的个数是奇数个（使用校验位调调控）</li><li>偶校验(EVEN)：每个字节传送整个过程中bit为1的个数是偶数个（使用校验位调调控）</li><li>固定校验位(STICK)： 固定在校验位置位逻辑高(MARK)或者逻辑低(SPACE)。</li><li>无校验位（NONE）：不发送校验位，直接停止。</li></ul></li><li>停止位，保持高电平，持续1位或1.5位或2位均可。由于数据是在传输线上定时的，并且每一个设备有其自己的时钟，很可能在通信中两台设备之间出现了小小的不同步。因此停止位不仅仅是表示传输的结束，并且提供计算机校正时钟的机会。停止位个数越多，数据传输越稳定，但是数据传输速度也越慢。</li></ol><h2 id="串口流控（CTS-RTS）"><a href="#串口流控（CTS-RTS）" class="headerlink" title="串口流控（CTS/RTS）"></a>串口流控（CTS/RTS）</h2><h3 id="串口流控介绍"><a href="#串口流控介绍" class="headerlink" title="串口流控介绍"></a>串口流控介绍</h3><p> 在两个设备正常通信时，由于处理速度不同，就存在这样一个问题，有的快，有的慢，在某些情况下，就可能导致丢失数据的情况。举个例子，假如用于接收的UART buffer已经满了，单片机还没来得及处理buffer内的数据，此时再继续发来新的数据，数据就会丢失。因此，使用串口流控来避免这种情况。</p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>RTS （Require ToSend，发送请求）为输出信号，用于指示本设备是否准备好接收数据，低电平有效，低电平说明本设备准备好接收数据。</p><p>CTS （Clear ToSend，发送允许）为输入信号，用于判断是否可以向对方发送数据，低电平有效，低电平说明可以向对方发送数据。</p><p>在两设备通信时，RTS和CTS的连接如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">设备1RTS -------- 设备2CTS</span></span><br><span class="line"><span class="comment">设备1CTS -------- 设备2RTS</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><hr><h1 id="SPI"><a href="#SPI" class="headerlink" title="SPI"></a>SPI</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p><strong>SPI</strong> ：Serial Peripheral Interface (串行外设接口) 一种同步全双工串行通信协议。它的通信速度比I2C和UART都要快。SPI通信内只有一个主机，可支持多个从机。连接图如下</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240208213112276.png" alt="image-20240208213112276"></p><h3 id="SS或CS选择信号线："><a href="#SS或CS选择信号线：" class="headerlink" title="SS或CS选择信号线："></a>SS或CS选择信号线：</h3><p>通过给SS信号线来选择和哪一个从机通信。通常，高电平无效，低电平有效，但是有例外，要参考从机的芯片手册。</p><h3 id="SCK时钟信号线："><a href="#SCK时钟信号线：" class="headerlink" title="SCK时钟信号线："></a>SCK时钟信号线：</h3><p>由主设备产生的同步时钟。通常，MOSI和MISO上的数据信号可以在上升或下降时钟沿被采集，详情需要参考特定的芯片手册。一般来说，会有一个CKP或CKOL（时钟极性）参数，来决定时钟闲时电平高低。还有一个CKE或CPHL（时钟相位）参数来决定是第一次跳变时采集数据还是第二次。这二者共同决定数据在时钟上沿还是下沿被采集。</p><h3 id="MOSI："><a href="#MOSI：" class="headerlink" title="MOSI："></a>MOSI：</h3><p>Master Output，Slave Input，用于主机向从机发送信号</p><h3 id="MISO"><a href="#MISO" class="headerlink" title="MISO"></a>MISO</h3><p>Master Input，Slave Output，用于从机向主机发送信号</p><h2 id="时钟极性和相位的规定"><a href="#时钟极性和相位的规定" class="headerlink" title="时钟极性和相位的规定"></a>时钟极性和相位的规定</h2><p>时钟极性CPOL决定时钟在空闲时的电平高低。规定如下</p><ul><li>CPOL= 0：空闲时SCLK为低电平</li><li>CPOL= 1：空闲时SCLK为高电平</li></ul><p>CPHA表示采样时刻，也就是时钟相位。用于指明在第几次跳变时开始第一次采样。</p><ul><li><p>CPHA= 0：第一个时钟沿</p></li><li><p>CPHA= 1：第二个时钟沿</p></li></ul><h2 id="帧格式-1"><a href="#帧格式-1" class="headerlink" title="帧格式"></a>帧格式</h2><p>SPI通信在发送数据时<strong>不包含</strong>IIC中的地址码、应答信号或是UART中的起始位、停止位、校验位。它的<strong>数据是简单的纯数据位，没有应答，没有起始，没有结束</strong>。<strong>SPI的数据位先发高位(MSB)，再发低位(LSB)</strong>。高电平表示1，低电平表示0。在一个字节传输完成后，SPI可以紧跟着直接发送下一个字节，没有应答操作。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240208234346844.png" alt="image-20240208234346844"></p>]]></content>
      
      
      <categories>
          
          <category> 各种折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字基带通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动通信-Ch1-Overview</title>
      <link href="/posts/58a1197c.html"/>
      <url>/posts/58a1197c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="看来您不属于攻略组,请等待笔记验证后发布" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="95f860b3851f64baadc3d3c80c1cee2d3e551a8e806fe434c620152070102c48"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">阿尔戈在迷宫区搜集到的零碎攻略信息,还在整理...</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 大三下 </category>
          
          <category> 移动通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> private </tag>
            
            <tag> 通信网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32的中断(Register)</title>
      <link href="/posts/e95d61a1.html"/>
      <url>/posts/e95d61a1.html</url>
      
        <content type="html"><![CDATA[<h1 id="NVIC"><a href="#NVIC" class="headerlink" title="NVIC"></a>NVIC</h1><p>不同于普通单片机的软中断（单一入口，软件识别flag）或硬中断（不同入口）会在多个中断同时发生时挂起后发生的，STM32支持对中断的优先级进行编程，在中断中触发中断。用于管理这一优先级的系统被称为NVIC。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240202143753489.png" alt="image-20240202143753489"></p><p>NVIC：Nested vectoredinterrupt controller，嵌套向量中断控制器，属于内核 (M3/4/7)。NVIC支持256个中断(16个内核中断+240个外部中断)，内核支持256个中断优先级。ST公司把256个优先级裁切为了<strong>16个优先级</strong>（所有系列都是如此）。对于F407xx系列芯片，有10个内核中断，82个外部中断。</p><p>STM32的中断优先级又分为几类：抢占式优先级、响应式优先级、自然优先级。<strong>在STM32中，优先级设置的数值越小，其优先级越高</strong></p><ul><li>抢占式优先级：当两个中断同时发生时，优先执行抢占式优先级高的中断，可形成中断嵌套(在执行某低优先级中断中被高优先级再次中断，先执行高的再回来继续执行低的)</li><li>响应式优先级：当两个同抢占式优先级的中断同时发生时，优先响应 响应式优先级 高的中断，另一个被挂起。响应式优先级无法打断执行过程中的中断。</li><li>自然优先级：由startup文件决定，当设置的抢占优先级和响应优先级相同时，先执行自然优先级高的中断。</li></ul><h2 id="中断向量表"><a href="#中断向量表" class="headerlink" title="中断向量表"></a>中断向量表</h2><p>中断向量表用于存放各个中断服务函数的首地址，每一个地址有4 byte （32位MCU）。在sartup文件中，中断向量表被定义在__Vectors中。CPU在上电后默认运行main，但一旦有中断触发，就调用对用的Handler。下方代码就是F4系列Startup文件中定义的10个内核中断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">__Vectors       DCD     __initial_sp               ; Top of Stack</span><br><span class="line">                DCD     Reset_Handler              ; Reset Handler</span><br><span class="line">                DCD     NMI_Handler                ; NMI Handler</span><br><span class="line">                DCD     HardFault_Handler          ; Hard Fault Handler</span><br><span class="line">                DCD     MemManage_Handler          ; MPU Fault Handler</span><br><span class="line">                DCD     BusFault_Handler           ; Bus Fault Handler</span><br><span class="line">                DCD     UsageFault_Handler         ; Usage Fault Handler</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     SVC_Handler                ; SVCall Handler</span><br><span class="line">                DCD     DebugMon_Handler           ; Debug Monitor Handler</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     PendSV_Handler             ; PendSV Handler</span><br><span class="line">                DCD     SysTick_Handler            ; SysTick Handler</span><br></pre></td></tr></table></figure><p>如上代码定义的就是中断函数的接口，也就是说，不像其他单片机那样触发中断调用的函数是interrupt()，stm32不同的中断会调用不同的函数，这些函数的名字就是如上定义的这些，而非interrupt。</p><p>在startup文件中，调用中断向量表的Handler时，会天然地决定中断判定和执行的顺序，即自然优先级。例如复位(Reset)被为-3，是自然优先级最高的中断。NMI被定义为-2，硬件失效(HardFault)定义为-1。</p><h2 id="NVIC相关寄存器"><a href="#NVIC相关寄存器" class="headerlink" title="NVIC相关寄存器"></a>NVIC相关寄存器</h2><h3 id="ISER寄存器"><a href="#ISER寄存器" class="headerlink" title="ISER寄存器"></a>ISER寄存器</h3><p>ISER：Interrupt Set Enable Registers，用于控制中断使能。Cortex内核中ISER有 ISER0～ISER7 共8个，每个32位。ISER的每一个位控制一个中断，所以每一个中断使能寄存器可以控制 32 个中断，共256个。<strong>不过，由于 STM32F407 的 可屏蔽中断只有 82 个，所以对我们来说，实际用到的 ISER 只有 3 个（ISER[0]～ISER[2]）。</strong> 不同芯片ISER寄存器对应控制的中断不同，需参考芯片手册。<strong>要对某个中断使能，只需朝ISER中对应位写入1即可</strong></p><p>因为其内存地址连续，所以可以直接定义uint_32类型数组ISER[n]来控制。</p><h3 id="ICER寄存器"><a href="#ICER寄存器" class="headerlink" title="ICER寄存器"></a>ICER寄存器</h3><p>与ISER相对， ICER(Interrupt Clear Enable Registers)，用于中断失能控制。<strong>要对某个中断失能，只需朝ICER中对应位写入1即可</strong></p><h3 id="IPR寄存器"><a href="#IPR寄存器" class="headerlink" title="IPR寄存器"></a>IPR寄存器</h3><p> Cortex-M4 内核可屏蔽中断有240个，每一个有256档优先级可以设置(需要8bit 寄存器进行配置)，因此内核规定IPR有60个，每个32bit （$60\times32bit=240\times8bit$）。在编程时，同样定义为数组来处理。<strong>由于 STM32F407 只用到了 Cortex-M4 的 82 个可屏蔽中断，故数组也只用了其中的元素 IP[0]～IP[81]。STM32F407 也并没有用到 IP 数组元素中的全部 8bit 来配置中断优先级，而是只使用了其中的高4位（对应16个优先级）</strong></p><h3 id="中断优先级的分组和AIRCR寄存器"><a href="#中断优先级的分组和AIRCR寄存器" class="headerlink" title="中断优先级的分组和AIRCR寄存器"></a>中断优先级的分组和AIRCR寄存器</h3><p>前面我们已知，STM32中中断优先级有16个，也就是需要IPR中的4个bit来表示，这16个又可以被分为抢占优先级和响应优先级。<strong>那么这4bit哪些用于控制响应优先级，哪些用于控制抢占优先级呢？这是通过设置AICRC寄存器实现的。</strong></p><p>AICRC： Application Interrupt and Reset Control Register，即应用程序中断及复位控制寄存器。该寄存器有32位，功能定义如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240203183209909.png" alt="image-20240203183209909"></p><p>可以看到，第8-10位被用于中断优先级的分组，这个分组有五种，用于控制PIR中4个bit控制抢占优先级还是响应优先级。如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240202150050747.png" alt="image-20240202150050747"></p><p>bit8-10的值和对应的组别如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240203182224262.png" alt="image-20240203182224262" style="zoom: 50%;" /></p><h3 id="设置步骤"><a href="#设置步骤" class="headerlink" title="设置步骤"></a>设置步骤</h3><p>总的来说，要启用某一个中断，需要<strong>对NVIC进行的配置步骤如下：</strong></p><ul><li>设置中断分组(AIRCR寄存器)</li><li>设置中断优先级(IPR寄存器[7:4])</li><li>使能中断(ISER)</li></ul><hr><h1 id="外部中断-事件-控制器EXTI"><a href="#外部中断-事件-控制器EXTI" class="headerlink" title="外部中断(事件)控制器EXTI"></a>外部中断(事件)控制器EXTI</h1><p>EXTI：External Interrupt/Event Controller。EXTI线含边缘检测器，可以接受外部的中断信号，来触发中断或是事件。各系列芯片的支持的EXTI线如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240203203004878.png" alt="image-20240203203004878"></p><p><strong>每条EXTI线都可以单独配置：1.选择其触发中断或是事件，2.选择触发方式(上沿、下沿、双边沿)、3.软件触发、4.设置使能/失能、5.存储中断挂起状态</strong></p><p>对于F4系列芯片，有23个EXTI线。详情需查询对应芯片的手册。</p><p><strong>中断和事件的区别</strong></p><ul><li><p>中断：要进入NVIC，触发后由CPU调用对应的中断函数来执行中断程序</p></li><li><p>事件：不进入NVIC，本质上就是一个触发信号，是用来触发特定的外设模块或核心本身(唤醒)仅用于内部硬件自动控制。事件不需要软件参与，所以响应速度也更快。事件可作为中断的触发源。</p></li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240204162635225.png" alt="image-20240204162635225"></p><p>整个电路框图如上图所示。输入线接受外部信号，通过配置EXTI_RTSR和EXTI_FTSR来设置边沿检测电路对上沿或下沿响应。EXTI_SWIER允许我们通过程序控制就可以启动中断/事件线，也就是在某些时候让中断或事件以软件作为触发源，而非外部输入的硬件信号。后续是事件屏蔽器，用于enable和disable是否产生事件脉冲。同时EXTI_PR会存储有中断请求发生，这里就是作中断flag。当EXTI_IMR被使能时，中断信号进入NVIC，触发中断。</p><h2 id="EXTI相关寄存器"><a href="#EXTI相关寄存器" class="headerlink" title="EXTI相关寄存器"></a>EXTI相关寄存器</h2><h3 id="EXTI-IMR（中断屏蔽寄存器）"><a href="#EXTI-IMR（中断屏蔽寄存器）" class="headerlink" title="EXTI_IMR（中断屏蔽寄存器）"></a>EXTI_IMR（中断屏蔽寄存器）</h3><p>该寄存器总共有32位，但因为F4系列只有23个EXTI线，所以只有0-22位被使用。<strong>该寄存器写1位enable中断，写0为disable；复位值为全0，即所有中断disable</strong>。bit0对应EXTI0，bit1对应EXTI1，以此类推。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240204162947090.png" alt="image-20240204162947090"></p><h3 id="EXTI-EMR（事件屏蔽寄存器）"><a href="#EXTI-EMR（事件屏蔽寄存器）" class="headerlink" title="EXTI_EMR（事件屏蔽寄存器）"></a>EXTI_EMR（事件屏蔽寄存器）</h3><p>该寄存器同EXTI_IMR，复位全0，写0屏蔽，写1使能。该寄存器用于控制是否产生事件脉冲。</p><h3 id="EXTI-RTSR（上沿触发选择寄存器）"><a href="#EXTI-RTSR（上沿触发选择寄存器）" class="headerlink" title="EXTI_RTSR（上沿触发选择寄存器）"></a>EXTI_RTSR（上沿触发选择寄存器）</h3><p>该寄存器也是32位，但仅有23个bit被使用。bit0对应EXTI0，bit1对应EXTI1，以此类推。<strong>写0表示禁止上沿触发，写1表示使能上沿触发，复位值全0</strong></p><h3 id="EXTI-FTSR-下降沿触发选择寄存器"><a href="#EXTI-FTSR-下降沿触发选择寄存器" class="headerlink" title="EXTI_FTSR(下降沿触发选择寄存器)"></a>EXTI_FTSR(下降沿触发选择寄存器)</h3><p>同上沿触发寄存器。如果上沿下沿触发都被enable，那么任意边沿都可唤起中断。如果在设置极性的同时产生了中断，那么中断请求会被忽略。</p><h3 id="EXTI-PR-（挂起请求寄存器）"><a href="#EXTI-PR-（挂起请求寄存器）" class="headerlink" title="EXTI_PR （挂起请求寄存器）"></a>EXTI_PR （挂起请求寄存器）</h3><p>当在外部中断线上发生了选择的边沿事件，该位被置“1”。在此位中<strong>写入“1”可以清除它（注意这里不是写0）</strong>，在改变边沿检测的极性时，该位也会自动被清除。</p><h3 id="EXTI-SWIER（软件中断寄存器）"><a href="#EXTI-SWIER（软件中断寄存器）" class="headerlink" title="EXTI_SWIER（软件中断寄存器）"></a>EXTI_SWIER（软件中断寄存器）</h3><p>当该位为“0”时，写“1”将设置 EXTI_PR 中相应的挂起位。如果在 EXTI_IMR 和 EXTI_EMR  中允许产生该中断，则产生中断请求。通过清除 EXTI_PR（挂起寄存器） 的对应位（写入“1”），可以清除该位为“0”，即处理中断flag时自动清除该位。</p><h2 id="EXTI和IO口的映射"><a href="#EXTI和IO口的映射" class="headerlink" title="EXTI和IO口的映射"></a>EXTI和IO口的映射</h2><h3 id="AFIO（功能复用寄存器）配置-对于F1单片机"><a href="#AFIO（功能复用寄存器）配置-对于F1单片机" class="headerlink" title="AFIO（功能复用寄存器）配置(对于F1单片机)"></a>AFIO（功能复用寄存器）配置(对于F1单片机)</h3><p>对F1系列单片机，此处不做过多介绍，参考芯片手册即可。</p><h3 id="SYSCFG（系统配置寄存器）配置（对于F4-F7-H7单片机）"><a href="#SYSCFG（系统配置寄存器）配置（对于F4-F7-H7单片机）" class="headerlink" title="SYSCFG（系统配置寄存器）配置（对于F4/F7/H7单片机）"></a>SYSCFG（系统配置寄存器）配置（对于F4/F7/H7单片机）</h3><p>EXTIn线可以映射到GPIOn上，例如EXTI0这条线，就可以映射至所有端口(如PA，PB等)的GPIO0这个口,EXTI15这条线，可映射至所有端口的GPIO15。一条EXTI线同一时间仅可以和一个GPIO相连。</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240204170054912.png"></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240204171730480.png" alt="image-20240204171730480" style="zoom:78%;" /></center></td>        </tr></table><p>在SYSCFG寄存器组中，有SYSCFG_EXTICR1~4 4组用于配置EXTI映射的寄存器，用于控制EXTI线和哪一个端口相连。，每组寄存器都是32位，但仅使用16位，使用的16位又被分为4组（每4bit一组），一组控制一条EXTI线。可映射至GPIO的EXTI线共有16条，4组SYSCFG_EXTICR寄存器，每组控制4条，刚好与16条契合。下图展示SYSCFG_EXTICR1寄存器的bit构成，2-4同理：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240204171226010.png" alt="image-20240204171226010"></p><p>4bit和端口的值对应关系如下(对于F4)：</p><div class="table-container"><table><thead><tr><th style="text-align:center">数值（Binary）</th><th style="text-align:center">对应端口</th><th style="text-align:center">数值（Binary）</th><th style="text-align:center">对应端口</th></tr></thead><tbody><tr><td style="text-align:center">0000</td><td style="text-align:center">PA</td><td style="text-align:center">0101</td><td style="text-align:center">PF</td></tr><tr><td style="text-align:center">0001</td><td style="text-align:center">PB</td><td style="text-align:center">0110</td><td style="text-align:center">PG</td></tr><tr><td style="text-align:center">0010</td><td style="text-align:center">PC</td><td style="text-align:center">0111</td><td style="text-align:center">PH</td></tr><tr><td style="text-align:center">0011</td><td style="text-align:center">PD</td><td style="text-align:center">1000</td><td style="text-align:center">PI</td></tr><tr><td style="text-align:center">0100</td><td style="text-align:center">PE</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table></div><p>设置寄存器前，需要对SYSCFG时钟进行使能(<em>HAL库提供宏：__HAL_RCC_SYSCFG_CLK_ENABLE()</em>)</p><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><p>要在STM32芯片上使用某一中断功能，需要遵循如下步骤配置</p><ul><li>使能GPIO时钟</li><li>设置GPIO模式（输入、是否上拉等），如果使用片上外设中断，可跳过这一步</li><li>使能SYSCFG/APIO时钟，如果使用片上外设中断，可跳过这一步</li><li>设置EXTI和GPIO的映射关系（设置APIO或STYSCFG寄存器），如果使用片上外设中断，可跳过这一步</li><li>设置边沿触发模式(RTSR,FTSR)、enbale中断(IMR/EMR)，如果使用片上外设中断，可跳过这一步</li><li>（对于其他片上外设，中断会直接进入NVIC，无需配置EXTI相关设置）</li><li>设置NVIC（包含优先级分组，优先级，使能中断，详见NVIC配置步骤）</li><li>编写中断服务函数（服务函数内需清除中断标志）</li></ul><h2 id="服务函数注意事项"><a href="#服务函数注意事项" class="headerlink" title="服务函数注意事项"></a>服务函数注意事项</h2><p>在STM32中，EXTI0-4有5个独立的中断服务函数；EXTI9-5共用一个中断服务函数；EXTI15-10共用一个中断服务函数。也就是总共有7个中断服务函数。</p>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思阅读</title>
      <link href="/posts/189c0aac.html"/>
      <url>/posts/189c0aac.html</url>
      
        <content type="html"><![CDATA[<h1 id="分数对应表"><a href="#分数对应表" class="headerlink" title="分数对应表"></a>分数对应表</h1><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/v2-e2a43c0d7e956a2a28630da1706b6867_1440w.webp" alt="img"></p><p>通常来说，中国的学生主要靠阅读和听力拉分，小分目标6.5-7需要阅读冲8。也就是最多错4-5分的阅读题。</p><h1 id="整体题目顺序度"><a href="#整体题目顺序度" class="headerlink" title="整体题目顺序度"></a>整体题目顺序度</h1><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/v2-fae07171ce009b09a4ca9012531114d2_1440w.webp" alt="img"></p><hr><h1 id="题型介绍"><a href="#题型介绍" class="headerlink" title="题型介绍"></a>题型介绍</h1><h2 id="单词填空题"><a href="#单词填空题" class="headerlink" title="单词填空题"></a>单词填空题</h2><ul><li>难度：低</li><li>顺序/乱序：顺序</li><li>做题步骤：<ol><li>读第一个和第二个空，勾画定位词</li><li>在文中遇到定位词即做对应的空(通常密集出现)</li><li>填完第一个空之后，读第三个空，带着第二个空和第三个空的定位词做题</li><li>以此类推</li></ol></li></ul><p>单词填空题一般分为段落(原文摘要)填空和填图题。这两类题目一般要求<strong>直接从原文选择规定词数以内的单词填入(一般不超过3个词)</strong>。常考同义替换</p><h2 id="判断题-T-F-NG"><a href="#判断题-T-F-NG" class="headerlink" title="判断题(T/F/NG)"></a>判断题(T/F/NG)</h2><ul><li>难度：低</li><li>顺序/乱序：顺序</li><li>做题步骤：<ol><li>读第一个和第二个选项，勾画定位词，考点词</li><li>在文中遇到定位词即做对应的选项(通常密集出现)</li><li>填完第一个选项之后，读第三个选项，带着第二个选项和第三个选项的定位词做题</li><li>以此类推</li></ol></li></ul><p>根据标题内容是否在原文中证实或呈现选择 True, False, Not Given. 判断题注意不要带入自己的主管臆测，一定要专注于原文是否提及、是否明确阐述。</p><p>考点词：体现出题目核心思想的词，这个词决定了是T还是F，increasing/ decreasing之类的</p><p><strong>一般来说，3个选项的判断题不一定出现NG，四个选项的含有NG。</strong></p><p><strong>连续的T或F不会超过3个</strong></p><h2 id="段落中心思想题-给段落选Heading"><a href="#段落中心思想题-给段落选Heading" class="headerlink" title="段落中心思想题(给段落选Heading)"></a>段落中心思想题(给段落选Heading)</h2><ul><li><p>难度：中等</p></li><li><p>顺序/乱序：乱序</p></li><li><p>做题步骤：</p><ol><li><p>通读题干，勾定位词</p></li><li><p>找段落主旨句和核心词汇，正确答案常常是主旨句的改写</p></li><li><p>对比主旨句和选项，寻找同义替换。<strong>这里需要注意同义改写后的表述和原文不应当有信息差</strong></p></li><li><p>确定某段话的答案后，将它从选项列表中划去</p></li><li><p>读一段选一题，不确定的可以选择了但不划去</p></li></ol></li></ul><p>这类题目要求给阅读文章中的每一段选个小标题，概括这段话的段落大意、中心思想、主旨。<strong>在文段中定位时，通常看首句，第二句，末句。当定位没有出现在这里面时，重点关注段中转折</strong></p><p>如果选项中有相似的词语或有链接的句子，那注意这些要么是干扰项，要么是</p><h2 id="信息匹配（Matching）"><a href="#信息匹配（Matching）" class="headerlink" title="信息匹配（Matching）"></a>信息匹配（Matching）</h2><ul><li>难度：中等</li><li>顺序/乱序：乱序</li><li><p>做题步骤：</p><ol><li>通读题干和选项，勾定位词，一般选项内的人名、国家、地区等比较好定位</li><li>读文章时遇到定位词就做对应的题目</li></ol></li></ul><p>Matching（匹配题）是雅思阅读最常考的题型之一，每次考试都至少有一组，很多时候会达到两组甚至更多。匹配题一般要求匹配谁干了什么，什么地区怎么样了，什么国家干了什么，谁有什么观点之类的，选项一般是人名、地名或者其他名词，比较好定位。</p><p><strong>若出现NB，也不一定会要复选，但是大部分需要复选</strong></p><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><ul><li>难度：中等</li><li>顺序/乱序：基本顺序，局部可能乱序</li><li>做题步骤：</li><li><p>做题步骤：</p><ol><li></li><li></li></ol></li></ul><p>每个题目都是一个特殊问句，要求根据原文作出回答。</p><p><strong>所有的答案都不用大写，专有名词除外。</strong></p><p><strong>绝大部分的答案来自原文原词，极少一部分需要自己写答案。</strong> </p><p>答案涉及数字的，一般要有简单的四则运算，且涉及钱币的，在数字前一定要有货币符号，在数字后可能会有单位。题目问 how many/how much/what proportion/what is the cost 时，答案一般不会直接是原文中出现的数字，而要涉及到简单的四则运算，通常是加减法</p><h2 id="带选择的填空"><a href="#带选择的填空" class="headerlink" title="带选择的填空"></a>带选择的填空</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240125141227927.png" alt="image-20240125141227927"></p><ul><li>难度：中等</li><li>顺序/乱序：基本顺序，局部可能乱序</li><li>做题步骤：</li></ul><p>这类题可以根据名词单复数、转折关系、因果关联，来辅助做题。</p><h2 id="单项选择"><a href="#单项选择" class="headerlink" title="单项选择"></a>单项选择</h2><ul><li>难度：中等</li><li>顺序/乱序：选项内部没有顺序，题目与题目之间有顺序</li><li>做题步骤：</li></ul><h2 id="多项选择"><a href="#多项选择" class="headerlink" title="多项选择"></a>多项选择</h2><p>没有顺序但答案集中</p><hr><h1 id="做题技巧"><a href="#做题技巧" class="headerlink" title="做题技巧"></a>做题技巧</h1><ul><li>遇到例子的时候，例子通常是为了论证例子前面的观点，所以观点一般在前面，仅有少数在例子之后</li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 雅思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32——HAL库</title>
      <link href="/posts/82419430.html"/>
      <url>/posts/82419430.html</url>
      
        <content type="html"><![CDATA[<h1 id="GPIO控制"><a href="#GPIO控制" class="headerlink" title="GPIO控制"></a>GPIO控制</h1><h2 id="GPIO口寄存器的封装和总线时钟"><a href="#GPIO口寄存器的封装和总线时钟" class="headerlink" title="GPIO口寄存器的封装和总线时钟"></a>GPIO口寄存器的封装和总线时钟</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//GPIO_TypeDef 结构体如下：</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> MODER;    <span class="comment">/*!&lt;模式寄存器,                Address offset: 0x00      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> OTYPER;   <span class="comment">/*!&lt;输出数据类型寄存器,         Address offset: 0x04      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> OSPEEDR;  <span class="comment">/*!&lt;输出速度寄存器,             Address offset: 0x08      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> PUPDR;    <span class="comment">/*!&lt;上拉下拉电阻选择寄存器,      Address offset: 0x0C      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> IDR;      <span class="comment">/*!&lt;输入数据寄存器,             Address offset: 0x10      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> ODR;      <span class="comment">/*!&lt;输出数据寄存器,             Address offset: 0x14      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> BSRR;     <span class="comment">/*!&lt; GPIO port bit set/reset register,      Address offset: 0x18      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> LCKR;     <span class="comment">/*!&lt;设置锁寄存器,               Address offset: 0x1C      */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> AFR[<span class="number">2</span>];   <span class="comment">/*!&lt;复用功能寄存器,             Address offset: 0x20-0x24 */</span></span><br><span class="line">&#125; GPIO_TypeDef;</span><br><span class="line"><span class="comment">//GPIO_InitTypeDef 结构体如下：</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">uint32_t</span> Pin; <span class="comment">//引脚</span></span><br><span class="line">  <span class="type">uint32_t</span> Mode; <span class="comment">//引脚模式(推挽 or 开漏 等)</span></span><br><span class="line">  <span class="type">uint32_t</span> Pull; <span class="comment">//上拉电阻使能情况</span></span><br><span class="line">  <span class="type">uint32_t</span> Speed; <span class="comment">//引脚响应速度</span></span><br><span class="line">  <span class="type">uint32_t</span> Alternate; <span class="comment">//引脚复用情况</span></span><br><span class="line">&#125;GPIO_InitTypeDef;</span><br><span class="line"></span><br><span class="line"><span class="comment">//GPIO所在总线(AHB1)时钟使能</span></span><br><span class="line">__HAL_RCC_GPIOx_CLK_ENABLE();  <span class="comment">/*HAL库使用宏来进行使能, GPIOx可以是任意一组GPIO,但是对于f4系列芯片而言，他们挂载的总线一致，所以都是对AHB1总线时钟进行使能*/</span></span><br><span class="line"><span class="comment">/*宏内配置如下*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_RCC_GPIOA_CLK_ENABLE()   do &#123; \</span></span><br><span class="line"><span class="meta">                                        __IO uint32_t tmpreg = 0x00U; \</span></span><br><span class="line"><span class="meta">                                        SET_BIT(RCC-&gt;AHB1ENR, RCC_AHB1ENR_GPIOAEN);\</span></span><br><span class="line"><span class="meta">                                        <span class="comment">/* Delay after an RCC peripheral clock enabling */</span> \</span></span><br><span class="line"><span class="meta">                                        tmpreg = READ_BIT(RCC-&gt;AHB1ENR, RCC_AHB1ENR_GPIOAEN);\</span></span><br><span class="line"><span class="meta">                                        UNUSED(tmpreg); \</span></span><br><span class="line"><span class="meta">                                          &#125; while(0U)</span></span><br></pre></td></tr></table></figure><hr><h2 id="GPIO的初始化"><a href="#GPIO的初始化" class="headerlink" title="GPIO的初始化"></a>GPIO的初始化</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_Init</span><span class="params">(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)</span></span><br></pre></td></tr></table></figure><p>其中GPIOx可以直接传入GPIOA, GPIOB等等，这些已经被预编译成了以引脚初始寄存器位置开始的GPIO_TypeDef 类型的结构体，上面一节有介绍。GPIO_InitTypeDef用于控制引脚的各个功能和状态配置。</p><p>GPIO_InitTypeDef成员的值定义如下：</p><h3 id="Pin"><a href="#Pin" class="headerlink" title="Pin:"></a>Pin:</h3><p>Pin控制要对那一个引脚操控， 可传GPIO_PIN_x，x可以为0-15，ALL，MASK三种。</p><ul><li><p>GPIO_PIN_0 如果将x设置为0-15，则传入的是GPIO的寄存器位置（例如，GPIO3对应的寄存器地址0B0000,0100）。多个引脚时，可以用或运算同时使能，如GPIO_PIN_0 | GPIO_PIN_1。</p></li><li><p>GPIO_PIN_ALL 对应的是0xFFFF，也就是将16个PIN全部操作</p></li><li><p><em>GPIO_PIN_MASK是给断言机制判断传入参数是否合法使用的，<strong>不作为用户调用参数传入</strong></em>。断言机制代码如下：</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> IS_GPIO_PIN(__PIN__)        ((((__PIN__) &amp; GPIO_PIN_MASK) != (uint32_t)0x00) &amp;&amp;\</span></span><br><span class="line"><span class="meta">                                     (((__PIN__) &amp; ~GPIO_PIN_MASK) == (uint32_t)0x00))</span></span><br></pre></td></tr></table></figure><p>  这样IS_GPIO_PIN 宏定义就会在输入非GPIO合法值时返回0，触发断言机制，程序报错并定位。</p><h3 id="Mode："><a href="#Mode：" class="headerlink" title="Mode："></a>Mode：</h3><p>Mode控制GPIO的输入、输出模式，有如下选择：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_INPUT                <span class="comment">//浮动输入：上拉</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_OUTPUT_PP            <span class="comment">//推挽输出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_OUTPUT_OD            <span class="comment">//开漏输出</span></span></span><br><span class="line"><span class="comment">//复用PP/OD输出模式，与PP/OD出模式很是相似。只是输出的高低电平的来源不同，由ODR寄存器控制，而是用片内外设模块的复用功能输出来决定的。</span></span><br><span class="line"><span class="comment">//复用开漏输出功能有：（TX1,MOSI,MISO.SCK.SS）</span></span><br><span class="line"><span class="comment">//复用推挽输出功能有：（I2C的SCL,SDA）</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_AF_PP                 <span class="comment">//复用推挽输出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_AF_OD                 <span class="comment">//复用开漏输出</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_ANALOG                <span class="comment">//此时GPIO处于analog模式。可作ADC转换通道,可做比较器、DAC等模拟外设的复用通道</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_IT_RISING             <span class="comment">//具有上升沿触发检测的外部中断模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_IT_FALLING            <span class="comment">//具有下降沿触发检测的外部中断模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_IT_RISING_FALLING     <span class="comment">//上升沿和下降沿均触发的外部中断模式</span></span></span><br><span class="line"><span class="comment">//下面几个对应的是&quot;事件&quot;,RISING,FALLING等含义同中断.在这里事件可以唤醒休眠状态(WFE)的MCU,但是不会产生&quot;中断事件&quot;,也就是说不会执行中断处理函数,也就说不需要清除外设中断挂起位或 NVIC. 使用GPIO&quot;事件&quot;来启动AD转换也是可以的</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_EVT_RISING                   </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_EVT_FALLING                  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_EVT_RISING_FALLING            </span></span><br></pre></td></tr></table></figure><h3 id="Pull"><a href="#Pull" class="headerlink" title="Pull:"></a>Pull:</h3><p>PULL控制上拉、下拉电阻使能情况：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_NOPULL        ((uint32_t)0x00000000)   <span class="comment">//上拉下拉都不使能</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_PULLUP        ((uint32_t)0x00000001)   <span class="comment">//使能上拉电阻</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_PULLDOWN      ((uint32_t)0x00000002)   <span class="comment">//使能下拉电阻</span></span></span><br></pre></td></tr></table></figure><h3 id="Speed"><a href="#Speed" class="headerlink" title="Speed"></a>Speed</h3><p>控制GPIO时钟的速度，对应也就是GPIO的响应速度.ST公司给了四种不同的相对速度(相对MCU极限速度而言)可供选择。<strong>对于不同的MCU，这里define的值是不一样的，对应的频率也是不一样的，需要参考芯片手册。对于F4系列，其定义如下</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_SPEED_FREQ_LOW        <span class="comment">//2 MHz</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_SPEED_FREQ_MEDIUM     <span class="comment">//12.5 MHz to 50 MHz</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_SPEED_FREQ_HIGH       <span class="comment">//25 MHz to 100 MHz</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_SPEED_FREQ_VERY_HIGH  <span class="comment">//50 MHz to 200 MHz</span></span></span><br></pre></td></tr></table></figure><h3 id="Alternate"><a href="#Alternate" class="headerlink" title="Alternate"></a>Alternate</h3><p>控制引脚的复用情况，不同的MCU引脚可复用功能不同，需要参看<em>stm32f4xx_hal_gpio_ex.h</em> 头文件内的定义。例如F407系列，AF8引脚就可以配置成GPIO_AF8_UART4、GPIO_AF8_UART5、GPIO_AF8_USART6三种。详情需要参考不同芯片的手册。</p><hr><h2 id="GPIO的去初始化"><a href="#GPIO的去初始化" class="headerlink" title="GPIO的去初始化"></a>GPIO的去初始化</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_DeInit</span><span class="params">(GPIO_TypeDef  *GPIOx, <span class="type">uint32_t</span> GPIO_Pin)</span></span><br></pre></td></tr></table></figure><p>这个函数用于将已初始化的GPIO恢复至默认值</p><ul><li>GPIOx 同init。</li><li>GPIO_Pin传入要初始化第几个即可，多个Pin使用或运算合并，同Init。</li></ul><hr><h2 id="读取引脚电平"><a href="#读取引脚电平" class="headerlink" title="读取引脚电平"></a>读取引脚电平</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GPIO_PinState <span class="title function_">HAL_GPIO_ReadPin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span></span><br></pre></td></tr></table></figure><p>用于读取GPIO的电平，读取的是IDR寄存器内对应的值。其返回值类型为GPIO_PinState，定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  GPIO_PIN_RESET = <span class="number">0</span>,</span><br><span class="line">  GPIO_PIN_SET</span><br><span class="line">&#125;GPIO_PinState;</span><br></pre></td></tr></table></figure><p>也就是RESET=0，SET=1。</p><hr><h2 id="写引脚电平"><a href="#写引脚电平" class="headerlink" title="写引脚电平"></a>写引脚电平</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_WritePin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin, GPIO_PinState PinState)</span></span><br></pre></td></tr></table></figure><p>用于写入GPIO某一引脚的电平。GPIOx, GPIO_Pin同上，PinState有 GPIO_PIN_RESET 和  GPIO_PIN_SET 两种</p><hr><h2 id="反转引脚电平"><a href="#反转引脚电平" class="headerlink" title="反转引脚电平"></a>反转引脚电平</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_TogglePin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span></span><br></pre></td></tr></table></figure><p>这个函数的作用是讲某个引脚输出的值反转</p><p>这个函数的实现原理是使用BSRR寄存器，如果直接操作ODR寄存器，有被中断等(IRQ)打断的风险，而通过BSRR和BRR去改变管脚状态是不会被中断打断的，即不需要关闭中断。</p><p>BSRR的<strong>低 16bits 是set操作</strong>，而<strong>高16bits是 reset 操作</strong>。这个函数的实现原理如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GPIOx-&gt;BSRR = ((odr &amp; GPIO_Pin) &lt;&lt; GPIO_NUMBER) | (~odr &amp; GPIO_Pin);</span><br><span class="line"><span class="comment">//GPIO_NUMBER 在F4中被定义为16，因为一组GPIO有16Pin</span></span><br></pre></td></tr></table></figure><p>这个语句首先将要操作PIN的ODR值放进Reset里面，然后再将这个值取反放进Set里面，如果此时这个Pin是1，那么对应寄存器的Reset就会是1，Set是0，反之亦然。这样就达到了对某一个PIN反相的效果。</p><hr><h2 id="锁定端口电平"><a href="#锁定端口电平" class="headerlink" title="锁定端口电平"></a>锁定端口电平</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAL_StatusTypeDef <span class="title function_">HAL_GPIO_LockPin</span><span class="params">(GPIO_TypeDef* GPIOx, <span class="type">uint16_t</span> GPIO_Pin)</span></span><br></pre></td></tr></table></figure><p>这个函数通过对LCKR寄存器进行配置，对某一个引脚输出的值进行锁定，一般用得比较少。其返回值是锁定是否成功，成功返回HAL_OK (0)，失败返回HAL_ERROR (1)</p><hr><h2 id="GPIO触发的中断处理函数"><a href="#GPIO触发的中断处理函数" class="headerlink" title="GPIO触发的中断处理函数"></a>GPIO触发的中断处理函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_IRQHandler</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* EXTI line interrupt detected */</span></span><br><span class="line">  <span class="keyword">if</span>(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);</span><br><span class="line">    HAL_GPIO_EXTI_Callback(GPIO_Pin);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">__weak <span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span></span><br><span class="line">&#123;UNUSED(GPIO_Pin);&#125;</span><br></pre></td></tr></table></figure><p>这个函数在中断入口的位置被自动调用。函数首先会清除中断Flag，然后调用HAL_GPIO_EXTI_Callback函数，这个回调函数就是中断要干什么。在HAL库内，有一个HAL_GPIO_EXTI_Callback已经被定义，但是使用__weak修饰，且函数只是返回一个void值，这里的意思是当用户自己定义这个中断处理函数时HAL库内这个会被disable，这个函数存在在这个只是为了防止gcc报错，<strong>且用户不可直接修改HAL库内这个callback</strong>，需要自己重新定义一个新的。</p><p><strong>也就是说，我们需要自定义一个void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) 的函数，来写入中断操作的内容。</strong></p><hr><h1 id="NVIC、EXTI和中断"><a href="#NVIC、EXTI和中断" class="headerlink" title="NVIC、EXTI和中断"></a>NVIC、EXTI和中断</h1><p>代码在stm32f4xx_hal_cortex.c中</p><h2 id="设置中断分组-NVIC"><a href="#设置中断分组-NVIC" class="headerlink" title="设置中断分组(NVIC)"></a>设置中断分组(NVIC)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_NVIC_SetPriorityGrouping</span><span class="params">(<span class="type">uint32_t</span> PriorityGroup)</span></span><br></pre></td></tr></table></figure><p>其中参数如下：</p><ul><li>NVIC_PRIORITYGROUP_0</li><li>NVIC_PRIORITYGROUP_1</li><li>NVIC_PRIORITYGROUP_2</li><li>NVIC_PRIORITYGROUP_3</li><li>NVIC_PRIORITYGROUP_4</li></ul><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240202150050747.png" alt="image-20240202150050747"></p><h2 id="设置中断优先级-NVIC"><a href="#设置中断优先级-NVIC" class="headerlink" title="设置中断优先级(NVIC)"></a>设置中断优先级(NVIC)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_NVIC_SetPriority</span><span class="params">(IRQn_Type IRQn, <span class="type">uint32_t</span> PreemptPriority, <span class="type">uint32_t</span> SubPriority)</span></span><br></pre></td></tr></table></figure><p>其中IRQn表示要设置的中断，PreemptPriority表示抢占优先级，SubPriority表示响应优先级</p><h3 id="IRQn-中断号"><a href="#IRQn-中断号" class="headerlink" title="IRQn(中断号)"></a>IRQn(中断号)</h3><p>中断号用于指明控制哪一个中断，代码定义和对应中断如下：</p><p>它存储的是偏移地址，即相对于外部中断第一个中断寄存器WWDG_IRQn(0x0000,0040)地址的偏移量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="comment">/******  Cortex-M4 Processor Exceptions Numbers ****************************************************************/</span></span><br><span class="line">  NonMaskableInt_IRQn         = <span class="number">-14</span>,    <span class="comment">/*!&lt; 2 Non Maskable Interrupt                                          */</span></span><br><span class="line">  MemoryManagement_IRQn       = <span class="number">-12</span>,    <span class="comment">/*!&lt; 4 Cortex-M4 Memory Management Interrupt                           */</span></span><br><span class="line">  BusFault_IRQn               = <span class="number">-11</span>,    <span class="comment">/*!&lt; 5 Cortex-M4 Bus Fault Interrupt                                   */</span></span><br><span class="line">  UsageFault_IRQn             = <span class="number">-10</span>,    <span class="comment">/*!&lt; 6 Cortex-M4 Usage Fault Interrupt                                 */</span></span><br><span class="line">  SVCall_IRQn                 = <span class="number">-5</span>,     <span class="comment">/*!&lt; 11 Cortex-M4 SV Call Interrupt                                    */</span></span><br><span class="line">  DebugMonitor_IRQn           = <span class="number">-4</span>,     <span class="comment">/*!&lt; 12 Cortex-M4 Debug Monitor Interrupt                              */</span></span><br><span class="line">  PendSV_IRQn                 = <span class="number">-2</span>,     <span class="comment">/*!&lt; 14 Cortex-M4 Pend SV Interrupt                                    */</span></span><br><span class="line">  SysTick_IRQn                = <span class="number">-1</span>,     <span class="comment">/*!&lt; 15 Cortex-M4 System Tick Interrupt                                */</span></span><br><span class="line">  <span class="comment">/******  STM32 specific Interrupt Numbers **********************************************************************/</span></span><br><span class="line">  WWDG_IRQn                   = <span class="number">0</span>,      <span class="comment">/*!&lt; Window WatchDog Interrupt                                         */</span></span><br><span class="line">  PVD_IRQn                    = <span class="number">1</span>,      <span class="comment">/*!&lt; PVD through EXTI Line detection Interrupt                         */</span></span><br><span class="line">  TAMP_STAMP_IRQn             = <span class="number">2</span>,      <span class="comment">/*!&lt; Tamper and TimeStamp interrupts through the EXTI line             */</span></span><br><span class="line">  RTC_WKUP_IRQn               = <span class="number">3</span>,      <span class="comment">/*!&lt; RTC Wakeup interrupt through the EXTI line                        */</span></span><br><span class="line">  FLASH_IRQn                  = <span class="number">4</span>,      <span class="comment">/*!&lt; FLASH global Interrupt                                            */</span></span><br><span class="line">  RCC_IRQn                    = <span class="number">5</span>,      <span class="comment">/*!&lt; RCC global Interrupt                                              */</span></span><br><span class="line">  EXTI0_IRQn                  = <span class="number">6</span>,      <span class="comment">/*!&lt; EXTI Line0 Interrupt                                              */</span></span><br><span class="line">  EXTI1_IRQn                  = <span class="number">7</span>,      <span class="comment">/*!&lt; EXTI Line1 Interrupt                                              */</span></span><br><span class="line">  EXTI2_IRQn                  = <span class="number">8</span>,      <span class="comment">/*!&lt; EXTI Line2 Interrupt                                              */</span></span><br><span class="line">  EXTI3_IRQn                  = <span class="number">9</span>,      <span class="comment">/*!&lt; EXTI Line3 Interrupt                                              */</span></span><br><span class="line">  EXTI4_IRQn                  = <span class="number">10</span>,     <span class="comment">/*!&lt; EXTI Line4 Interrupt                                              */</span></span><br><span class="line">  DMA1_Stream0_IRQn           = <span class="number">11</span>,     <span class="comment">/*!&lt; DMA1 Stream 0 global Interrupt                                    */</span></span><br><span class="line">  DMA1_Stream1_IRQn           = <span class="number">12</span>,     <span class="comment">/*!&lt; DMA1 Stream 1 global Interrupt                                    */</span></span><br><span class="line">  DMA1_Stream2_IRQn           = <span class="number">13</span>,     <span class="comment">/*!&lt; DMA1 Stream 2 global Interrupt                                    */</span></span><br><span class="line">  DMA1_Stream3_IRQn           = <span class="number">14</span>,     <span class="comment">/*!&lt; DMA1 Stream 3 global Interrupt                                    */</span></span><br><span class="line">  DMA1_Stream4_IRQn           = <span class="number">15</span>,     <span class="comment">/*!&lt; DMA1 Stream 4 global Interrupt                                    */</span></span><br><span class="line">  DMA1_Stream5_IRQn           = <span class="number">16</span>,     <span class="comment">/*!&lt; DMA1 Stream 5 global Interrupt                                    */</span></span><br><span class="line">  DMA1_Stream6_IRQn           = <span class="number">17</span>,     <span class="comment">/*!&lt; DMA1 Stream 6 global Interrupt                                    */</span></span><br><span class="line">  ADC_IRQn                    = <span class="number">18</span>,     <span class="comment">/*!&lt; ADC1, ADC2 and ADC3 global Interrupts                             */</span></span><br><span class="line">  CAN1_TX_IRQn                = <span class="number">19</span>,     <span class="comment">/*!&lt; CAN1 TX Interrupt                                                 */</span></span><br><span class="line">  CAN1_RX0_IRQn               = <span class="number">20</span>,     <span class="comment">/*!&lt; CAN1 RX0 Interrupt                                                */</span></span><br><span class="line">  CAN1_RX1_IRQn               = <span class="number">21</span>,     <span class="comment">/*!&lt; CAN1 RX1 Interrupt                                                */</span></span><br><span class="line">  CAN1_SCE_IRQn               = <span class="number">22</span>,     <span class="comment">/*!&lt; CAN1 SCE Interrupt                                                */</span></span><br><span class="line">  EXTI9_5_IRQn                = <span class="number">23</span>,     <span class="comment">/*!&lt; External Line[9:5] Interrupts                                     */</span></span><br><span class="line">  TIM1_BRK_TIM9_IRQn          = <span class="number">24</span>,     <span class="comment">/*!&lt; TIM1 Break interrupt and TIM9 global interrupt                    */</span></span><br><span class="line">  TIM1_UP_TIM10_IRQn          = <span class="number">25</span>,     <span class="comment">/*!&lt; TIM1 Update Interrupt and TIM10 global interrupt                  */</span></span><br><span class="line">  TIM1_TRG_COM_TIM11_IRQn     = <span class="number">26</span>,     <span class="comment">/*!&lt; TIM1 Trigger and Commutation Interrupt and TIM11 global interrupt */</span></span><br><span class="line">  TIM1_CC_IRQn                = <span class="number">27</span>,     <span class="comment">/*!&lt; TIM1 Capture Compare Interrupt                                    */</span></span><br><span class="line">  TIM2_IRQn                   = <span class="number">28</span>,     <span class="comment">/*!&lt; TIM2 global Interrupt                                             */</span></span><br><span class="line">  TIM3_IRQn                   = <span class="number">29</span>,     <span class="comment">/*!&lt; TIM3 global Interrupt                                             */</span></span><br><span class="line">  TIM4_IRQn                   = <span class="number">30</span>,     <span class="comment">/*!&lt; TIM4 global Interrupt                                             */</span></span><br><span class="line">  I2C1_EV_IRQn                = <span class="number">31</span>,     <span class="comment">/*!&lt; I2C1 Event Interrupt                                              */</span></span><br><span class="line">  I2C1_ER_IRQn                = <span class="number">32</span>,     <span class="comment">/*!&lt; I2C1 Error Interrupt                                              */</span></span><br><span class="line">  I2C2_EV_IRQn                = <span class="number">33</span>,     <span class="comment">/*!&lt; I2C2 Event Interrupt                                              */</span></span><br><span class="line">  I2C2_ER_IRQn                = <span class="number">34</span>,     <span class="comment">/*!&lt; I2C2 Error Interrupt                                              */</span></span><br><span class="line">  SPI1_IRQn                   = <span class="number">35</span>,     <span class="comment">/*!&lt; SPI1 global Interrupt                                             */</span></span><br><span class="line">  SPI2_IRQn                   = <span class="number">36</span>,     <span class="comment">/*!&lt; SPI2 global Interrupt                                             */</span></span><br><span class="line">  USART1_IRQn                 = <span class="number">37</span>,     <span class="comment">/*!&lt; USART1 global Interrupt                                           */</span></span><br><span class="line">  USART2_IRQn                 = <span class="number">38</span>,     <span class="comment">/*!&lt; USART2 global Interrupt                                           */</span></span><br><span class="line">  USART3_IRQn                 = <span class="number">39</span>,     <span class="comment">/*!&lt; USART3 global Interrupt                                           */</span></span><br><span class="line">  EXTI15_10_IRQn              = <span class="number">40</span>,     <span class="comment">/*!&lt; External Line[15:10] Interrupts                                   */</span></span><br><span class="line">  RTC_Alarm_IRQn              = <span class="number">41</span>,     <span class="comment">/*!&lt; RTC Alarm (A and B) through EXTI Line Interrupt                   */</span></span><br><span class="line">  OTG_FS_WKUP_IRQn            = <span class="number">42</span>,     <span class="comment">/*!&lt; USB OTG FS Wakeup through EXTI line interrupt                     */</span></span><br><span class="line">  TIM8_BRK_TIM12_IRQn         = <span class="number">43</span>,     <span class="comment">/*!&lt; TIM8 Break Interrupt and TIM12 global interrupt                   */</span></span><br><span class="line">  TIM8_UP_TIM13_IRQn          = <span class="number">44</span>,     <span class="comment">/*!&lt; TIM8 Update Interrupt and TIM13 global interrupt                  */</span></span><br><span class="line">  TIM8_TRG_COM_TIM14_IRQn     = <span class="number">45</span>,     <span class="comment">/*!&lt; TIM8 Trigger and Commutation Interrupt and TIM14 global interrupt */</span></span><br><span class="line">  TIM8_CC_IRQn                = <span class="number">46</span>,     <span class="comment">/*!&lt; TIM8 Capture Compare global interrupt                             */</span></span><br><span class="line">  DMA1_Stream7_IRQn           = <span class="number">47</span>,     <span class="comment">/*!&lt; DMA1 Stream7 Interrupt                                            */</span></span><br><span class="line">  FSMC_IRQn                   = <span class="number">48</span>,     <span class="comment">/*!&lt; FSMC global Interrupt                                             */</span></span><br><span class="line">  SDIO_IRQn                   = <span class="number">49</span>,     <span class="comment">/*!&lt; SDIO global Interrupt                                             */</span></span><br><span class="line">  TIM5_IRQn                   = <span class="number">50</span>,     <span class="comment">/*!&lt; TIM5 global Interrupt                                             */</span></span><br><span class="line">  SPI3_IRQn                   = <span class="number">51</span>,     <span class="comment">/*!&lt; SPI3 global Interrupt                                             */</span></span><br><span class="line">  UART4_IRQn                  = <span class="number">52</span>,     <span class="comment">/*!&lt; UART4 global Interrupt                                            */</span></span><br><span class="line">  UART5_IRQn                  = <span class="number">53</span>,     <span class="comment">/*!&lt; UART5 global Interrupt                                            */</span></span><br><span class="line">  TIM6_DAC_IRQn               = <span class="number">54</span>,     <span class="comment">/*!&lt; TIM6 global and DAC1&amp;2 underrun error  interrupts                 */</span></span><br><span class="line">  TIM7_IRQn                   = <span class="number">55</span>,     <span class="comment">/*!&lt; TIM7 global interrupt                                             */</span></span><br><span class="line">  DMA2_Stream0_IRQn           = <span class="number">56</span>,     <span class="comment">/*!&lt; DMA2 Stream 0 global Interrupt                                    */</span></span><br><span class="line">  DMA2_Stream1_IRQn           = <span class="number">57</span>,     <span class="comment">/*!&lt; DMA2 Stream 1 global Interrupt                                    */</span></span><br><span class="line">  DMA2_Stream2_IRQn           = <span class="number">58</span>,     <span class="comment">/*!&lt; DMA2 Stream 2 global Interrupt                                    */</span></span><br><span class="line">  DMA2_Stream3_IRQn           = <span class="number">59</span>,     <span class="comment">/*!&lt; DMA2 Stream 3 global Interrupt                                    */</span></span><br><span class="line">  DMA2_Stream4_IRQn           = <span class="number">60</span>,     <span class="comment">/*!&lt; DMA2 Stream 4 global Interrupt                                    */</span></span><br><span class="line">  ETH_IRQn                    = <span class="number">61</span>,     <span class="comment">/*!&lt; Ethernet global Interrupt                                         */</span></span><br><span class="line">  ETH_WKUP_IRQn               = <span class="number">62</span>,     <span class="comment">/*!&lt; Ethernet Wakeup through EXTI line Interrupt                       */</span></span><br><span class="line">  CAN2_TX_IRQn                = <span class="number">63</span>,     <span class="comment">/*!&lt; CAN2 TX Interrupt                                                 */</span></span><br><span class="line">  CAN2_RX0_IRQn               = <span class="number">64</span>,     <span class="comment">/*!&lt; CAN2 RX0 Interrupt                                                */</span></span><br><span class="line">  CAN2_RX1_IRQn               = <span class="number">65</span>,     <span class="comment">/*!&lt; CAN2 RX1 Interrupt                                                */</span></span><br><span class="line">  CAN2_SCE_IRQn               = <span class="number">66</span>,     <span class="comment">/*!&lt; CAN2 SCE Interrupt                                                */</span></span><br><span class="line">  OTG_FS_IRQn                 = <span class="number">67</span>,     <span class="comment">/*!&lt; USB OTG FS global Interrupt                                       */</span></span><br><span class="line">  DMA2_Stream5_IRQn           = <span class="number">68</span>,     <span class="comment">/*!&lt; DMA2 Stream 5 global interrupt                                    */</span></span><br><span class="line">  DMA2_Stream6_IRQn           = <span class="number">69</span>,     <span class="comment">/*!&lt; DMA2 Stream 6 global int   terrupt                                    */</span></span><br><span class="line">  USART6_IRQn                 = <span class="number">71</span>,     <span class="comment">/*!&lt; USART6 global interrupt                                           */</span></span><br><span class="line">  I2C3_EV_IRQn                = <span class="number">72</span>,     <span class="comment">/*!&lt; I2C3 event interrupt                                              */</span></span><br><span class="line">  I2C3_ER_IRQn                = <span class="number">73</span>,     <span class="comment">/*!&lt; I2C3 error interrupt                                              */</span></span><br><span class="line">  OTG_HS_EP1_OUT_IRQn         = <span class="number">74</span>,     <span class="comment">/*!&lt; USB OTG HS End Point 1 Out global interrupt                       */</span></span><br><span class="line">  OTG_HS_EP1_IN_IRQn          = <span class="number">75</span>,     <span class="comment">/*!&lt; USB OTG HS End Point 1 In global interrupt                        */</span></span><br><span class="line">  OTG_HS_WKUP_IRQn            = <span class="number">76</span>,     <span class="comment">/*!&lt; USB OTG HS Wakeup through EXTI interrupt                          */</span></span><br><span class="line">  OTG_HS_IRQn                 = <span class="number">77</span>,     <span class="comment">/*!&lt; USB OTG HS global interrupt                                       */</span></span><br><span class="line">  DCMI_IRQn                   = <span class="number">78</span>,     <span class="comment">/*!&lt; DCMI global interrupt                                             */</span></span><br><span class="line">  RNG_IRQn                    = <span class="number">80</span>,     <span class="comment">/*!&lt; RNG global Interrupt                                              */</span></span><br><span class="line">  FPU_IRQn                    = <span class="number">81</span>      <span class="comment">/*!&lt; FPU global interrupt                                               */</span></span><br><span class="line">&#125; IRQn_Type;</span><br></pre></td></tr></table></figure><h3 id="PreemptPriority（抢占优先级）和SubPriority-响应优先级"><a href="#PreemptPriority（抢占优先级）和SubPriority-响应优先级" class="headerlink" title="PreemptPriority（抢占优先级）和SubPriority (响应优先级)"></a>PreemptPriority（抢占优先级）和SubPriority (响应优先级)</h3><p>可输入0-15（十进制），对应抢占优先级/响应优先级的大小，数字越小优先级越高。朝IPR寄存器内写入，优先级的输入范围随Group设置范围变化。</p><h2 id="使能-失能中断-NVIC"><a href="#使能-失能中断-NVIC" class="headerlink" title="使能/失能中断(NVIC)"></a>使能/失能中断(NVIC)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_NVIC_EnableIRQ</span><span class="params">(IRQn_Type IRQn)</span> <span class="comment">//使能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_NVIC_DisableIRQ</span><span class="params">(IRQn_Type IRQn)</span> <span class="comment">//失能</span></span><br></pre></td></tr></table></figure><p>其输入参数IRQn(中断号) 同上。用于指明控制哪一个中断。</p><h2 id="配置EXTI模式和映射IO"><a href="#配置EXTI模式和映射IO" class="headerlink" title="配置EXTI模式和映射IO"></a>配置EXTI模式和映射IO</h2><p>在HAL库中，配置EXTI寄存器上沿/下沿触发，映射IO，都通过在引脚初始化时，设置GPIO_InitTypeDef.mode实现。可设置参数如下，详见GPIO章节。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_IT_RISING             <span class="comment">//具有上升沿触发检测的外部中断模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_IT_FALLING            <span class="comment">//具有下降沿触发检测的外部中断模式</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_IT_RISING_FALLING     <span class="comment">//上升沿和下降沿均触发的外部中断模式</span></span></span><br><span class="line"><span class="comment">//下面几个对应的是&quot;事件&quot;,RISING,FALLING等含义同中断.在这里事件可以唤醒休眠状态(WFE)的MCU,但是不会产生&quot;中断事件&quot;,也就是说不会执行中断处理函数,也就说不需要清除外设中断挂起位或 NVIC. 使用GPIO&quot;事件&quot;来启动AD转换也是可以的</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_EVT_RISING                   </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_EVT_FALLING                  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span>  GPIO_MODE_EVT_RISING_FALLING        </span></span><br></pre></td></tr></table></figure><h2 id="清除中断flag"><a href="#清除中断flag" class="headerlink" title="清除中断flag"></a>清除中断flag</h2><p>HAL库中中断flag会在调用回调函数前自动通过宏清除，宏定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> __HAL_GPIO_EXTI_CLEAR_IT(__EXTI_LINE__) (EXTI-&gt;PR = (__EXTI_LINE__))</span></span><br></pre></td></tr></table></figure><p>这个过程无需人为干预</p><h2 id="中断Handler"><a href="#中断Handler" class="headerlink" title="中断Handler"></a>中断Handler</h2><p>在进入中断时，我们需要编写中断执行的函数，STM32不同于大部分单片机中断函数都叫interrupt，它不同的中断会调用各自不同的函数。这些中断函数在startup文件中被定义，称之为“中断向量表”。以下是定义代码和对应的名称。<strong>在使用CubeMX初始化代码时，这些Handler会被定义在stm32fxxx_it.c文件中，可以直接在it.c文件中对中断进行编辑。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">__Vectors       DCD     __initial_sp               ; Top of Stack</span><br><span class="line">                DCD     Reset_Handler              ; Reset Handler</span><br><span class="line">                DCD     NMI_Handler                ; NMI Handler</span><br><span class="line">                DCD     HardFault_Handler          ; Hard Fault Handler</span><br><span class="line">                DCD     MemManage_Handler          ; MPU Fault Handler</span><br><span class="line">                DCD     BusFault_Handler           ; Bus Fault Handler</span><br><span class="line">                DCD     UsageFault_Handler         ; Usage Fault Handler</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     SVC_Handler                ; SVCall Handler</span><br><span class="line">                DCD     DebugMon_Handler           ; Debug Monitor Handler</span><br><span class="line">                DCD     0                          ; Reserved</span><br><span class="line">                DCD     PendSV_Handler             ; PendSV Handler</span><br><span class="line">                DCD     SysTick_Handler            ; SysTick Handler</span><br><span class="line"></span><br><span class="line">                ; External Interrupts</span><br><span class="line">                DCD     WWDG_IRQHandler                   ; Window WatchDog                                        </span><br><span class="line">                DCD     PVD_IRQHandler                    ; PVD through EXTI Line detection                        </span><br><span class="line">                DCD     TAMP_STAMP_IRQHandler             ; Tamper and TimeStamps through the EXTI line            </span><br><span class="line">                DCD     RTC_WKUP_IRQHandler               ; RTC Wakeup through the EXTI line                       </span><br><span class="line">                DCD     FLASH_IRQHandler                  ; FLASH                                           </span><br><span class="line">                DCD     RCC_IRQHandler                    ; RCC                                             </span><br><span class="line">                DCD     EXTI0_IRQHandler                  ; EXTI Line0                                             </span><br><span class="line">                DCD     EXTI1_IRQHandler                  ; EXTI Line1                                             </span><br><span class="line">                DCD     EXTI2_IRQHandler                  ; EXTI Line2                                             </span><br><span class="line">                DCD     EXTI3_IRQHandler                  ; EXTI Line3                                             </span><br><span class="line">                DCD     EXTI4_IRQHandler                  ; EXTI Line4                                             </span><br><span class="line">                DCD     DMA1_Stream0_IRQHandler           ; DMA1 Stream 0                                   </span><br><span class="line">                DCD     DMA1_Stream1_IRQHandler           ; DMA1 Stream 1                                   </span><br><span class="line">                DCD     DMA1_Stream2_IRQHandler           ; DMA1 Stream 2                                   </span><br><span class="line">                DCD     DMA1_Stream3_IRQHandler           ; DMA1 Stream 3                                   </span><br><span class="line">                DCD     DMA1_Stream4_IRQHandler           ; DMA1 Stream 4                                   </span><br><span class="line">                DCD     DMA1_Stream5_IRQHandler           ; DMA1 Stream 5                                   </span><br><span class="line">                DCD     DMA1_Stream6_IRQHandler           ; DMA1 Stream 6                                   </span><br><span class="line">                DCD     ADC_IRQHandler                    ; ADC1, ADC2 and ADC3s                            </span><br><span class="line">                DCD     CAN1_TX_IRQHandler                ; CAN1 TX                                                </span><br><span class="line">                DCD     CAN1_RX0_IRQHandler               ; CAN1 RX0                                               </span><br><span class="line">                DCD     CAN1_RX1_IRQHandler               ; CAN1 RX1                                               </span><br><span class="line">                DCD     CAN1_SCE_IRQHandler               ; CAN1 SCE                                               </span><br><span class="line">                DCD     EXTI9_5_IRQHandler                ; External Line[9:5]s                                    </span><br><span class="line">                DCD     TIM1_BRK_TIM9_IRQHandler          ; TIM1 Break and TIM9                   </span><br><span class="line">                DCD     TIM1_UP_TIM10_IRQHandler          ; TIM1 Update and TIM10                 </span><br><span class="line">                DCD     TIM1_TRG_COM_TIM11_IRQHandler     ; TIM1 Trigger and Commutation and TIM11</span><br><span class="line">                DCD     TIM1_CC_IRQHandler                ; TIM1 Capture Compare                                   </span><br><span class="line">                DCD     TIM2_IRQHandler                   ; TIM2                                            </span><br><span class="line">                DCD     TIM3_IRQHandler                   ; TIM3                                            </span><br><span class="line">                DCD     TIM4_IRQHandler                   ; TIM4                                            </span><br><span class="line">                DCD     I2C1_EV_IRQHandler                ; I2C1 Event                                             </span><br><span class="line">                DCD     I2C1_ER_IRQHandler                ; I2C1 Error                                             </span><br><span class="line">                DCD     I2C2_EV_IRQHandler                ; I2C2 Event                                             </span><br><span class="line">                DCD     I2C2_ER_IRQHandler                ; I2C2 Error                                               </span><br><span class="line">                DCD     SPI1_IRQHandler                   ; SPI1                                            </span><br><span class="line">                DCD     SPI2_IRQHandler                   ; SPI2                                            </span><br><span class="line">                DCD     USART1_IRQHandler                 ; USART1                                          </span><br><span class="line">                DCD     USART2_IRQHandler                 ; USART2                                          </span><br><span class="line">                DCD     USART3_IRQHandler                 ; USART3                                          </span><br><span class="line">                DCD     EXTI15_10_IRQHandler              ; External Line[15:10]s                                  </span><br><span class="line">                DCD     RTC_Alarm_IRQHandler              ; RTC Alarm (A and B) through EXTI Line                  </span><br><span class="line">                DCD     OTG_FS_WKUP_IRQHandler            ; USB OTG FS Wakeup through EXTI line                        </span><br><span class="line">                DCD     TIM8_BRK_TIM12_IRQHandler         ; TIM8 Break and TIM12                  </span><br><span class="line">                DCD     TIM8_UP_TIM13_IRQHandler          ; TIM8 Update and TIM13                 </span><br><span class="line">                DCD     TIM8_TRG_COM_TIM14_IRQHandler     ; TIM8 Trigger and Commutation and TIM14</span><br><span class="line">                DCD     TIM8_CC_IRQHandler                ; TIM8 Capture Compare                                   </span><br><span class="line">                DCD     DMA1_Stream7_IRQHandler           ; DMA1 Stream7                                           </span><br><span class="line">                DCD     FMC_IRQHandler                    ; FMC                                             </span><br><span class="line">                DCD     SDIO_IRQHandler                   ; SDIO                                            </span><br><span class="line">                DCD     TIM5_IRQHandler                   ; TIM5                                            </span><br><span class="line">                DCD     SPI3_IRQHandler                   ; SPI3                                            </span><br><span class="line">                DCD     UART4_IRQHandler                  ; UART4                                           </span><br><span class="line">                DCD     UART5_IRQHandler                  ; UART5                                           </span><br><span class="line">                DCD     TIM6_DAC_IRQHandler               ; TIM6 and DAC1&amp;2 underrun errors                   </span><br><span class="line">                DCD     TIM7_IRQHandler                   ; TIM7                   </span><br><span class="line">                DCD     DMA2_Stream0_IRQHandler           ; DMA2 Stream 0                                   </span><br><span class="line">                DCD     DMA2_Stream1_IRQHandler           ; DMA2 Stream 1                                   </span><br><span class="line">                DCD     DMA2_Stream2_IRQHandler           ; DMA2 Stream 2                                   </span><br><span class="line">                DCD     DMA2_Stream3_IRQHandler           ; DMA2 Stream 3                                   </span><br><span class="line">                DCD     DMA2_Stream4_IRQHandler           ; DMA2 Stream 4                                   </span><br><span class="line">                DCD     ETH_IRQHandler                    ; Ethernet                                        </span><br><span class="line">                DCD     ETH_WKUP_IRQHandler               ; Ethernet Wakeup through EXTI line                      </span><br><span class="line">                DCD     CAN2_TX_IRQHandler                ; CAN2 TX                                                </span><br><span class="line">                DCD     CAN2_RX0_IRQHandler               ; CAN2 RX0                                               </span><br><span class="line">                DCD     CAN2_RX1_IRQHandler               ; CAN2 RX1                                               </span><br><span class="line">                DCD     CAN2_SCE_IRQHandler               ; CAN2 SCE                                               </span><br><span class="line">                DCD     OTG_FS_IRQHandler                 ; USB OTG FS                                      </span><br><span class="line">                DCD     DMA2_Stream5_IRQHandler           ; DMA2 Stream 5                                   </span><br><span class="line">                DCD     DMA2_Stream6_IRQHandler           ; DMA2 Stream 6                                   </span><br><span class="line">                DCD     DMA2_Stream7_IRQHandler           ; DMA2 Stream 7                                   </span><br><span class="line">                DCD     USART6_IRQHandler                 ; USART6                                           </span><br><span class="line">                DCD     I2C3_EV_IRQHandler                ; I2C3 event                                             </span><br><span class="line">                DCD     I2C3_ER_IRQHandler                ; I2C3 error                                             </span><br><span class="line">                DCD     OTG_HS_EP1_OUT_IRQHandler         ; USB OTG HS End Point 1 Out                      </span><br><span class="line">                DCD     OTG_HS_EP1_IN_IRQHandler          ; USB OTG HS End Point 1 In                       </span><br><span class="line">                DCD     OTG_HS_WKUP_IRQHandler            ; USB OTG HS Wakeup through EXTI                         </span><br><span class="line">                DCD     OTG_HS_IRQHandler                 ; USB OTG HS                                      </span><br><span class="line">                DCD     DCMI_IRQHandler                   ; DCMI  </span><br><span class="line">                DCD     0                                 ; Reserved                              </span><br><span class="line">                DCD     HASH_RNG_IRQHandler               ; Hash and Rng</span><br><span class="line">                DCD     FPU_IRQHandler                    ; FPU</span><br><span class="line">                </span><br><span class="line">                                         </span><br><span class="line">__Vectors_End</span><br></pre></td></tr></table></figure><h2 id="HAL库的中断处理流程"><a href="#HAL库的中断处理流程" class="headerlink" title="HAL库的中断处理流程"></a>HAL库的中断处理流程</h2><h3 id="CubeMX-HAL工程中断初始化的流程"><a href="#CubeMX-HAL工程中断初始化的流程" class="headerlink" title="CubeMX+HAL工程中断初始化的流程"></a>CubeMX+HAL工程中断初始化的流程</h3><p>如果我们采用寄存器编程，以初始化映射至IO的EXTI中断为例，那么需要经历以下步骤：</p><ol><li>使能GPIO时钟和NVIC、EXTI总线时钟</li><li>设置GPIO模式（输入、是否上拉等）</li><li>设置EXTI和GPIO的映射关系（设置APIO或STYSCFG寄存器）</li><li>设置边沿触发模式(RTSR,FTSR)、enbale中断(IMR/EMR)</li><li>设置NVIC分组模式</li><li>设置NVIC优先级模式</li><li>使能NVIC对应中断</li></ol><p>在使用CubeMX生成的工程中，1,2,3,4都是在MX_GPIO_Init()函数内完成。如果是映射至IO的EXTI的中断，那么MX_GPIO_Init()函数内还会完成相应中断的优先级设置和使能，也就是6,7；如果是其他中断，那么在相应外设的init函数中也会完成优先级设置和使能。</p><p>鉴于NVIC的分组模式一般不会更改，因此NVIC的分组在一开始就被设置，CubeMX+HAL库生成的工程会在HAL_Init()函数中完成。</p><p>main函数中，会依次调用这三个函数来完成整个系统的初始化，其中便囊括了中断的初始化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HAL_Init();<span class="comment">//完成步骤5，设置分组</span></span><br><span class="line">SystemClock_Config();</span><br><span class="line">MX_GPIO_Init();<span class="comment">//完成步骤1.2.3.4.6.7;初始化GPIO并配置和映射EXTI线，然后使能NVIC对应的中断</span></span><br></pre></td></tr></table></figure><h3 id="中断调用函数的流程"><a href="#中断调用函数的流程" class="headerlink" title="中断调用函数的流程"></a>中断调用函数的流程</h3><p>在中断被触发时，STM32首先会调用Handler，也就是下方 <em>中断Handler</em> 小节内介绍的这些。这些Handler的内容存储在stm32fxxx_it.c。Hander函数内首先调用公共中断函数，来实现清除中断标志等，然后调用回调函数执行处理的内容。这里面用户可直接编辑Handler函数的内容，来决定其调用哪些公共函数，也可自行重新定义Callback函数的内容，来编写中断处理程序。</p><p>这个流程的函数伪代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">xxx_IRQHandler</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//public interrupt functions</span></span><br><span class="line">xxx_public_INT_Func(specific parameters);<span class="comment">//e.g. HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">xxx_public_INT_Func</span><span class="params">(parameters)</span>&#123;</span><br><span class="line">public_funcs(parameters);<span class="comment">// e.g. __HAL_GPIO_EXTI_CLEAR_IT(GOIO_Pin)</span></span><br><span class="line">Callback_func(parameters);<span class="comment">// e.g. HAL_GPIO_EXTI_Callback(GPIO_Pin)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Callback_func</span><span class="params">(parameters)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (parameters == xx)&#123;</span><br><span class="line">        <span class="comment">//do sth</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (parameters == yy)&#123;</span><br><span class="line">        <span class="comment">//do sth</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//interrupt Processing code, written by user</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般来说，callback函数是弱定义的，例如EXTI的回调函数定义如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__weak <span class="type">void</span> <span class="title function_">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span></span><br></pre></td></tr></table></figure><p><strong>因此，在HAL库中使用中断时，用户只需要自定重新定义回调函数部分，找到不同中断Handler调用的回调函数，在回调函数部分写入中断处理的代码即可。</strong>通常来说，用户只需要自己重新定义Callback fucntion，并根据传入的参数不同，使用if编写不同中断源的处理程序即可。但是再多个外设共用一个回调函数时，这些if可能需要写非常多，这样不便于管理，因此直接把处理函数写在其自己的驱动文件内，然后在xxx_IRQHandler() 内调用即可。</p><hr><h1 id="UART串口"><a href="#UART串口" class="headerlink" title="UART串口"></a>UART串口</h1><h2 id="huart句柄"><a href="#huart句柄" class="headerlink" title="huart句柄"></a>huart句柄</h2><p>这是一个调用和uart相关HAL库接口时，需要传入的参数，用于说明数据从哪个串口进来，串口的基本设置参数。这个参数被称为”handel”，也就是huart中h的来源，可以理解为握着uart1的handel，就可以控制和操作uart1的意思。其源代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> __<span class="title">UART_HandleTypeDef</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  USART_TypeDef                 *Instance;        <span class="comment">/*!&lt; UART 控制寄存器基地址        */</span></span><br><span class="line">  UART_InitTypeDef              Init;             <span class="comment">/*!&lt; UART 串口初始化数据类型      */</span></span><br><span class="line">  <span class="type">const</span> <span class="type">uint8_t</span>                 *pTxBuffPtr;      <span class="comment">/*!&lt; 发送buffer地址 */</span></span><br><span class="line">  <span class="type">uint16_t</span>                      TxXferSize;       <span class="comment">/*!&lt; 发送数据个数             */</span></span><br><span class="line">  __IO <span class="type">uint16_t</span>                 TxXferCount;      <span class="comment">/*!&lt; 发送数据计数器           */</span></span><br><span class="line">  <span class="type">uint8_t</span>                       *pRxBuffPtr;      <span class="comment">/*!&lt; 接收buffer地址*/</span></span><br><span class="line">  <span class="type">uint16_t</span>                      RxXferSize;       <span class="comment">/*!&lt; 接收数据个数            */</span></span><br><span class="line">  __IO <span class="type">uint16_t</span>                 RxXferCount;      <span class="comment">/*!&lt; 接收数据计数器           */</span></span><br><span class="line">  __IO HAL_UART_RxTypeTypeDef ReceptionType;      <span class="comment">/*!&lt; Type of ongoing reception          */</span></span><br><span class="line">  __IO HAL_UART_RxEventTypeTypeDef RxEventType;   <span class="comment">/*!&lt; Type of Rx Event                   */</span></span><br><span class="line">  DMA_HandleTypeDef             *hdmatx;          <span class="comment">/*!&lt; UART Tx DMA Handle parameters      */</span></span><br><span class="line">  DMA_HandleTypeDef             *hdmarx;          <span class="comment">/*!&lt; UART Rx DMA Handle parameters      */</span></span><br><span class="line">  HAL_LockTypeDef               Lock;             <span class="comment">/*!&lt; Locking object                     */</span></span><br><span class="line">  __IO HAL_UART_StateTypeDef    gState;           <span class="comment">/*!&lt; UART state information related to global Handle management</span></span><br><span class="line"><span class="comment">                                                       and also related to Tx operations.</span></span><br><span class="line"><span class="comment">                                                       This parameter can be a value of @ref HAL_UART_StateTypeDef */</span></span><br><span class="line">  __IO HAL_UART_StateTypeDef    RxState;          <span class="comment">/*!&lt; UART state information related to Rx operations.</span></span><br><span class="line"><span class="comment">                                                       This parameter can be a value of @ref HAL_UART_StateTypeDef */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span>                 ErrorCode;        <span class="comment">/*!&lt; UART Error code                    */</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> (USE_HAL_UART_REGISTER_CALLBACKS == 1)</span></span><br><span class="line">  <span class="type">void</span> (* TxHalfCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);        <span class="comment">/*!&lt; UART Tx Half Complete Callback        */</span></span><br><span class="line">  <span class="type">void</span> (* TxCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);            <span class="comment">/*!&lt; UART Tx Complete Callback             */</span></span><br><span class="line">  <span class="type">void</span> (* RxHalfCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);        <span class="comment">/*!&lt; UART Rx Half Complete Callback        */</span></span><br><span class="line">  <span class="type">void</span> (* RxCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);            <span class="comment">/*!&lt; UART Rx Complete Callback             */</span></span><br><span class="line">  <span class="type">void</span> (* ErrorCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);             <span class="comment">/*!&lt; UART Error Callback                   */</span></span><br><span class="line">  <span class="type">void</span> (* AbortCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);         <span class="comment">/*!&lt; UART Abort Complete Callback          */</span></span><br><span class="line">  <span class="type">void</span> (* AbortTransmitCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart); <span class="comment">/*!&lt; UART Abort Transmit Complete Callback */</span></span><br><span class="line">  <span class="type">void</span> (* AbortReceiveCpltCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);  <span class="comment">/*!&lt; UART Abort Receive Complete Callback  */</span></span><br><span class="line">  <span class="type">void</span> (* WakeupCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);            <span class="comment">/*!&lt; UART Wakeup Callback                  */</span></span><br><span class="line">  <span class="type">void</span> (* RxEventCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart, <span class="type">uint16_t</span> Pos); <span class="comment">/*!&lt; UART Reception Event Callback     */</span></span><br><span class="line"></span><br><span class="line">  <span class="type">void</span> (* MspInitCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);           <span class="comment">/*!&lt; UART Msp Init callback                */</span></span><br><span class="line">  <span class="type">void</span> (* MspDeInitCallback)(<span class="keyword">struct</span> __UART_HandleTypeDef *huart);         <span class="comment">/*!&lt; UART Msp DeInit callback              */</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">/* USE_HAL_UART_REGISTER_CALLBACKS */</span></span></span><br><span class="line"></span><br><span class="line">&#125; UART_HandleTypeDef;</span><br></pre></td></tr></table></figure><h3 id="USART-TypeDef"><a href="#USART-TypeDef" class="headerlink" title="USART_TypeDef"></a>USART_TypeDef</h3><p>该结构体用于参数UASRT硬件的寄存器基地址，结构体定义如下：</p><p>在创建 $USART_TypeDef\ *$ 类型，以某一个串口配置寄存器开始的结构体指针后，便可以访问该串口的配置寄存器。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> SR;         <span class="comment">/*!&lt; USART Status register,                   Address offset: 0x00 */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> DR;         <span class="comment">/*!&lt; USART Data register,                     Address offset: 0x04 */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> BRR;        <span class="comment">/*!&lt; USART Baud rate register,                Address offset: 0x08 */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> CR1;        <span class="comment">/*!&lt; USART Control register 1,                Address offset: 0x0C */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> CR2;        <span class="comment">/*!&lt; USART Control register 2,                Address offset: 0x10 */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> CR3;        <span class="comment">/*!&lt; USART Control register 3,                Address offset: 0x14 */</span></span><br><span class="line">  __IO <span class="type">uint32_t</span> GTPR;       <span class="comment">/*!&lt; USART Guard time and prescaler register, Address offset: 0x18 */</span></span><br><span class="line">&#125; USART_TypeDef;</span><br></pre></td></tr></table></figure><p>该结构体的基地址变量，由总线基地址+偏移地址宏定义，例如F407定义的USART1和2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> USART1_BASE           (APB2PERIPH_BASE + 0x1000UL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USART2_BASE           (APB1PERIPH_BASE + 0x4400UL)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USART1              ((USART_TypeDef *) USART1_BASE)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USART2              ((USART_TypeDef *) USART2_BASE)</span></span><br></pre></td></tr></table></figure><p>对于F4系列，有6个串口：USART1-3，UART4-5，USART6，他们都通过如上代码宏定义了基地址，因此给结构体成员Instance传入这些地址即可。</p><h3 id="UART-InitTypeDef"><a href="#UART-InitTypeDef" class="headerlink" title="UART_InitTypeDef"></a>UART_InitTypeDef</h3><p>该结构体用于存放UART通信中的一些基本参数，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">uint32_t</span> BaudRate; <span class="comment">//波特率</span></span><br><span class="line">  <span class="type">uint32_t</span> WordLength; <span class="comment">//数据长度</span></span><br><span class="line">  <span class="type">uint32_t</span> StopBits; <span class="comment">//停止位长度</span></span><br><span class="line">  <span class="type">uint32_t</span> Parity; <span class="comment">//奇偶校验配置</span></span><br><span class="line">  <span class="type">uint32_t</span> Mode;<span class="comment">// UART收发模式设置（收、发、同时收发）</span></span><br><span class="line">  <span class="type">uint32_t</span> HwFlowCtl; <span class="comment">//硬件流控制</span></span><br><span class="line">  <span class="type">uint32_t</span> OverSampling; <span class="comment">//过采样设置</span></span><br><span class="line">&#125; UART_InitTypeDef;</span><br></pre></td></tr></table></figure><ul><li><p><strong>BaudRate:</strong> 直接设置波特率数字即可</p></li><li><p><strong>WordLength:</strong> 宏定义了 UART_WORDLENGTH_8B 和 UART_WORDLENGTH_9B 两种，分别对应8bit和9bit数据位</p></li><li><p><strong>StopBits:</strong> 宏定义 UART_STOPBITS_1，UART_STOPBITS_2 两种输入，分别对应1个停止位和2个</p></li><li><strong>Parity：</strong>有 UART_PARITY_NONE，UART_PARITY_EVEN，UART_PARITY_ODD 三种，分别对应无、偶校验、奇校验</li><li><strong>Mode:</strong> 有UART_MODE_RX，UART_MODE_TX，UART_MODE_TX_RX 三种，分别对应单收、单发、同时收发三种工作模式</li><li><strong>HwFlowCtl:</strong> 有UART_HWCONTROL_NONE，UART_HWCONTROL_RTS，UART_HWCONTROL_CTS，UART_HWCONTROL_RTS_CTS四种输入，分别对应无硬件流控制，接受流控制，发送流控制，同时启用接受发送流控制。</li><li><strong>OverSampling：</strong> UART_OVERSAMPLING_16，UART_OVERSAMPLING_8两种，对应16位过采样和8位，F1系列不可配置</li></ul><h2 id="串口初始化"><a href="#串口初始化" class="headerlink" title="串口初始化"></a>串口初始化</h2><h3 id="轮询方式收发的初始化"><a href="#轮询方式收发的初始化" class="headerlink" title="轮询方式收发的初始化"></a>轮询方式收发的初始化</h3><p>使用轮询模式时，只需要先配置huart中Init结构体的参数，然后再调用HAL_UART_Init函数进行寄存器配置即可。下面是一个例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">huart1.Instance = USART3;</span><br><span class="line">huart1.Init.BaudRate = <span class="number">115200</span>;</span><br><span class="line">huart1.Init.WordLength = UART_WORDLENGTH_8B;</span><br><span class="line">huart1.Init.StopBits = UART_STOPBITS_1;</span><br><span class="line">huart1.Init.Parity = UART_PARITY_NONE;</span><br><span class="line">huart1.Init.Mode = UART_MODE_TX_RX;</span><br><span class="line">huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;</span><br><span class="line">huart1.Init.OverSampling = UART_OVERSAMPLING_16;</span><br><span class="line"><span class="keyword">if</span> (HAL_UART_Init(&amp;huart1) != HAL_OK)</span><br><span class="line">&#123;</span><br><span class="line">  Error_Handler();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在HAL_UART_Init()函数中，会依次执行如下操作：</p><ul><li>若检测为轮询模式的初始化，则会调用HAL_UART_MspInit()函数对其所用的总线时钟、GPIO等关联设备进行初始化</li><li>UART_SetConfig() 函数来对控制寄存器写入</li><li>对句柄结构体中所有状态指示器写入OK的状态</li></ul><p>其中HAL_UART_MspInit()函数一个例子如下，它会对所有关联的设备进行初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_MspInit</span><span class="params">(UART_HandleTypeDef* uartHandle)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  GPIO_InitTypeDef GPIO_InitStruct = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">if</span>(uartHandle-&gt;Instance==USART1)</span><br><span class="line">  &#123;</span><br><span class="line">    __HAL_RCC_USART1_CLK_ENABLE();</span><br><span class="line">    __HAL_RCC_GPIOA_CLK_ENABLE();</span><br><span class="line">    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;</span><br><span class="line">    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;</span><br><span class="line">    GPIO_InitStruct.Pull = GPIO_NOPULL;</span><br><span class="line">    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;</span><br><span class="line">    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;<span class="comment">//该GPIO复用设置为GPIO_AF7_USART1</span></span><br><span class="line">    HAL_GPIO_Init(GPIOA, &amp;GPIO_InitStruct);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在使用CubeMX配置工程时，会生成usart.c文件来存放各项init函数，例如总初始化函数MX_USART1_UART_Init()、关联设备初始化函数HAL_UART_MspIni()，以备HAL库文件stm32fxxx_hal_uart.c调用</p><h2 id="轮询-阻塞-数据收发"><a href="#轮询-阻塞-数据收发" class="headerlink" title="轮询(阻塞)数据收发"></a>轮询(阻塞)数据收发</h2><p>在轮询数据模式下，MCU专注于发送数据或接受数据，在Timeout规定的时间内收发完成则return 成功，否则return超时。在这个期间，MCU一直除以等数据接受或者看着输出发送的状态，效率较低。</p><h3 id="轮询串口接收"><a href="#轮询串口接收" class="headerlink" title="轮询串口接收"></a>轮询串口接收</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAL_StatusTypeDef <span class="title function_">HAL_UART_Receive</span><span class="params">(UART_HandleTypeDef *huart, <span class="type">uint8_t</span> *pData, <span class="type">uint16_t</span> Size, <span class="type">uint32_t</span> Timeout)</span></span><br></pre></td></tr></table></figure><p>huart句柄已在上方介绍，剩余输入参数分别是：</p><ul><li>pData：存放数据的buffer首地址</li><li>Size：接受数据的字符串长度</li><li>Timeout：轮询时长，超时则返回</li></ul><p>这个函数会返回的类型”HAL_StatusTypeDef”有如下状态：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  HAL_OK       = <span class="number">0x00</span>U, <span class="comment">//成功接收</span></span><br><span class="line">  HAL_ERROR    = <span class="number">0x01</span>U, <span class="comment">//出现错误</span></span><br><span class="line">  HAL_BUSY     = <span class="number">0x02</span>U, <span class="comment">//串口忙</span></span><br><span class="line">  HAL_TIMEOUT  = <span class="number">0x03</span>U  <span class="comment">//轮询超时</span></span><br><span class="line">&#125; HAL_StatusTypeDef;</span><br></pre></td></tr></table></figure><h3 id="轮询串口发送"><a href="#轮询串口发送" class="headerlink" title="轮询串口发送"></a>轮询串口发送</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAL_StatusTypeDef <span class="title function_">HAL_UART_Transmit</span><span class="params">(UART_HandleTypeDef *huart, <span class="type">const</span> <span class="type">uint8_t</span> *pData, <span class="type">uint16_t</span> Size, <span class="type">uint32_t</span> Timeout)</span></span><br></pre></td></tr></table></figure><p>其输入参数、返回参数定义均同轮询接收函数一样，这里不重复介绍。</p><h2 id="中断数据收发"><a href="#中断数据收发" class="headerlink" title="中断数据收发"></a>中断数据收发</h2><p>使用中断模式进行数据收发时，MCU进会在有数据进来的时候让CPU去处理数据。其余时候可以干其他事情。这样效率较高</p><h3 id="中断串口接收"><a href="#中断串口接收" class="headerlink" title="中断串口接收"></a>中断串口接收</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAL_StatusTypeDef <span class="title function_">HAL_UART_Receive_IT</span><span class="params">(UART_HandleTypeDef *huart, <span class="type">uint8_t</span> *pData, <span class="type">uint16_t</span> Size)</span></span><br></pre></td></tr></table></figure><p>参数如下：</p><ul><li>huart：uart handle地址</li><li>pData：存放数据的buffer首地址</li><li>Size：接受数据的字符串长度</li></ul><p>这里面输入的Size参数会被赋值进handle内的RxXferSize成员内。pData会被赋值进handle内的pRxBuffPtr成员内。在USART中断函数</p><p>HAL_UART_IRQHandler()中，会首先判断有没有错误出现，如果没有错误，则调用UART_Receive_IT()函数进行接收。这两个函数都被定义在stm32xxx_hal_uart.c内。</p><p>UART_Receive_IT函数中，每接收一个数据，就会对pRxBuffPtr的指针地址进行位移，来指向下一个内存单元的地址。同时对RxXferCount自减。当RxXferCount自减至0时，会关闭USART接受相关的中断使能。这一段代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> HAL_StatusTypeDef <span class="title function_">UART_Receive_IT</span><span class="params">(UART_HandleTypeDef *huart)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">uint8_t</span>  *pdata8bits;</span><br><span class="line">  <span class="type">uint16_t</span> *pdata16bits;</span><br><span class="line">  <span class="keyword">if</span> (huart-&gt;RxState == HAL_UART_STATE_BUSY_RX)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ((huart-&gt;Init.WordLength == UART_WORDLENGTH_9B) &amp;&amp; (huart-&gt;Init.Parity == UART_PARITY_NONE))</span><br><span class="line">    &#123;</span><br><span class="line">      pdata8bits  = <span class="literal">NULL</span>;</span><br><span class="line">      pdata16bits = (<span class="type">uint16_t</span> *) huart-&gt;pRxBuffPtr;</span><br><span class="line">      *pdata16bits = (<span class="type">uint16_t</span>)(huart-&gt;Instance-&gt;DR &amp; (<span class="type">uint16_t</span>)<span class="number">0x01FF</span>);</span><br><span class="line">      huart-&gt;pRxBuffPtr += <span class="number">2U</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      pdata8bits = (<span class="type">uint8_t</span> *) huart-&gt;pRxBuffPtr;</span><br><span class="line">      pdata16bits  = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> ((huart-&gt;Init.WordLength == UART_WORDLENGTH_9B) || ((huart-&gt;Init.WordLength == UART_WORDLENGTH_8B) &amp;&amp; (huart-&gt;Init.Parity == UART_PARITY_NONE)))</span><br><span class="line">      &#123;</span><br><span class="line">        *pdata8bits = (<span class="type">uint8_t</span>)(huart-&gt;Instance-&gt;DR &amp; (<span class="type">uint8_t</span>)<span class="number">0x00FF</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        *pdata8bits = (<span class="type">uint8_t</span>)(huart-&gt;Instance-&gt;DR &amp; (<span class="type">uint8_t</span>)<span class="number">0x007F</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      huart-&gt;pRxBuffPtr += <span class="number">1U</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (--huart-&gt;RxXferCount == <span class="number">0U</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);</span><br><span class="line">      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);</span><br><span class="line">      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);</span><br><span class="line">      huart-&gt;RxState = HAL_UART_STATE_READY;</span><br><span class="line">      huart-&gt;RxEventType = HAL_UART_RXEVENT_TC;</span><br><span class="line">      <span class="keyword">if</span> (huart-&gt;ReceptionType == HAL_UART_RECEPTION_TOIDLE)</span><br><span class="line">      &#123;</span><br><span class="line">        huart-&gt;ReceptionType = HAL_UART_RECEPTION_STANDARD;</span><br><span class="line">        ATOMIC_CLEAR_BIT(huart-&gt;Instance-&gt;CR1, USART_CR1_IDLEIE);</span><br><span class="line">        <span class="keyword">if</span> (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))</span><br><span class="line">          __HAL_UART_CLEAR_IDLEFLAG(huart);</span><br><span class="line">          <span class="comment">//...未完</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>因此，调用HAL_UART_Receive_IT()后便会自动使能UART接收相关串口中断，同时准备好接受。在当接受的字符&gt;=Size所指定的字符数之后，便会自动失能相关中断</strong></p><p>在UART_Receive_IT()中，如果指定的字符数已经接收完成（RxXferCount == 0），则会调用HAL_UART_RxCpltCallback()这一公共回调函数。因为HAL库的库文件需要把硬件抽象成接口，因此直接改库文件内的代码不利于移植，用户的自定义中断回到函数写在HAL_UART_RxCpltCallback()内即可。此时UART已经将接收到的字符存在了pData指定的地址内，在HAL_UART_RxCpltCallback()内对pData内的数据进行处理即可。如果处理完成还需继续接收下一个数据，则再次调用HAL_UART_Receive_IT()来启用中断准备接收。</p><p>举个例子，假设我使用的通信协议规定每8byte数据为以通信帧，一数据帧传送数据位1byte，那么就可以把Size设置为8，然后每8byte数据接收完成之后就会调用用户自定义的回调函数HAL_UART_RxCpltCallback()函数来让用户处理数据。</p><p>下面是一个例程，实现使用中断接受UART数据，然后在收到换行符时把接收的数据发回去（省去了系统初始化部分）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> ch;</span><br><span class="line"><span class="type">uint8_t</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> buffer[<span class="number">13</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    HAL_UART_Receive_IT(&amp;huart1,&amp;ch,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span>&#123;</span><br><span class="line"><span class="comment">//user code here</span></span><br><span class="line">  buffer[count] = ch; <span class="comment">//ch就是pData指向的变量地址</span></span><br><span class="line">  count++;</span><br><span class="line">  <span class="keyword">if</span>(buffer[count<span class="number">-1</span>] == <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">    HAL_UART_Transmit(huart, buffer, count , <span class="number">100</span>);<span class="comment">//把收到的字符发回串口</span></span><br><span class="line">    <span class="built_in">memset</span>(buffer, <span class="string">&#x27;\0&#x27;</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  HAL_UART_Receive_IT(&amp;huart1,&amp;ch,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Part1-CH2-电路实现技术</title>
      <link href="/posts/2f4a86be.html"/>
      <url>/posts/2f4a86be.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用-AND-OR-NOT门综合设计（Synthesis-Using-AND-OR-and-NOT-Gates）"><a href="#使用-AND-OR-NOT门综合设计（Synthesis-Using-AND-OR-and-NOT-Gates）" class="headerlink" title="使用 AND OR NOT门综合设计（Synthesis Using AND, OR, and NOT Gates）"></a>使用 AND OR NOT门综合设计（Synthesis Using AND, OR, and NOT Gates）</h1><ul><li><p><strong>Minterm:</strong> 选取为1的项目。 <strong>选择输入逻辑满足F=1的输入组合</strong>，通过以下步骤设计Boolean function:</p><ol><li><p>使得某一个输入满足组合时输出为1（输入进行AND运算）</p></li><li><p>当 1 中任意一个满足时（步骤1的结果们进行OR运算），输出为1</p><p>例如，对$x_1,x_2,x_3$三个输入，想要满足$x_1=1 x_2=1 x_3=1$ 和$x_1=0 x_2=1 x_3=1$ 时输出为1，首先选取使得f输出为1的组合，也就是前面提到的两个，然后进行and运算:$x_1x_2x_3$和$\overline x_1 x_2x_3$，再对and运算的结果进行OR运算$F=x_1x_2x_3+\overline x_1 x_2x_3$(<strong>对应 Sum of Product SOP</strong>)</p></li></ol></li><li><p><strong>Maxterm:</strong> 排除为0的项目。<strong>选择输入逻辑满足F=0的输入组合</strong>，通过以下步骤设计Boolean function:</p><ol><li><p>使得输入满足这个组合时输出为0（输入AND运算的结果取反，然后德摩根化开，此时$\overline {A.B}$ 就会变成$\overline A+\overline B$ ）</p></li><li><p>当所有输入情况任意一个满足为0时为0，否则为1（步骤1的结果AND运算）。</p><p>例如： $F=(A+B).(  \overline {A}  +B).(A+  \overline {B}  )$ <strong>(对应 Product of Sum POS)</strong></p></li></ol></li><li><p><strong>Cost：</strong>电路中  <strong>门的总数</strong>  加 <strong>门的输入信号的总数</strong>, 如果题目说需要同时给了未取反和取反(complement)的形式，则可以忽略not门造成的cost，否则需要计算not门的cost</p></li></ul><p><em>例: Maxterm的化简</em></p><script type="math/tex; mode=display">f=(  x_ {1}  +  x_ {2}  +  x_ {3}  )(  x_ {1}  +  \overline {x}_ {2}  +  x_ {3}  )(  x_ {1}  +  \overline {x}_ {2}  +  \overline {x}_ {3}  )  (\overline {x}_ {1}+\overline {x}_ {2}+\overline {x}_ {3})_ {(}</script><script type="math/tex; mode=display">f=((  x_ {1}  +  x_ {3}  )+  x_ {2}  )((  x_ {1}  +  x_ {3}  )+  \overline {x}_ {2}  )(  x_ {1}  +(\overline  x_ {2}  +  \overline {x}_ {3}  ))(  \overline {x}_ {1}  +(  \overline {x}_ {2}  +  \overline {x}_ {3}  ))\\</script><script type="math/tex; mode=display">f=(  x_ {1}  +  x_ {3}  )(  \overline {x}_ {2}  +  \overline {x}_ {3}  )\\</script><div class="note info simple"><p><em>把AND OR NOT门电路转化成NAND和NOR只需要用DeMorgan’s theorem 整体取反后化开即可。Multiplexer后面有更详细的涉及，此处省去。</em></p></div><hr><h1 id="晶体管开关-Transistor-Switches"><a href="#晶体管开关-Transistor-Switches" class="headerlink" title="晶体管开关 (Transistor Switches)"></a>晶体管开关 (Transistor Switches)</h1><p>晶体管有三个级：  源极(Source)  漏极(Drain)  栅极(Gate)  </p><ul><li><p><strong>NMOS:</strong>   当$V_G$是低电平的时候关断，高电平的时候导通。 </p></li><li><p><strong>PMOS:</strong>    当$V_G$是低电平的时候导通，高电平的时候截止。</p><table>   <tr>       <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240113231550895.png"/></center></td>       <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240113232443627.png"/></center></td>   </tr></table></li></ul><h2 id="NMOS-逻辑门"><a href="#NMOS-逻辑门" class="headerlink" title="NMOS 逻辑门"></a><strong>NMOS</strong> <strong>逻辑门</strong></h2><ul><li><p>利用开关的特性，通过上拉或下拉工作模式即可实现一个基于NMOS的逻辑门。此时需要一个限流电阻。因此该种方式功耗较大 </p></li><li><p>从MOS管的构成视角来看，AND和OR门其实是NAND和NOR门取反(如下图所示)，成本更高</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240113232959053.png" alt="image-20240113232959053.png (748×237) (kaysonz.top)"></p><h2 id="CMOS逻辑门-五星级的"><a href="#CMOS逻辑门-五星级的" class="headerlink" title="CMOS逻辑门 (五星级的)"></a>CMOS逻辑门 (五星级的)</h2><h3 id="CMOS逻辑门的介绍"><a href="#CMOS逻辑门的介绍" class="headerlink" title="CMOS逻辑门的介绍"></a>CMOS逻辑门的介绍</h3><p>NMOS逻辑门中通过上拉电阻实现上拉电路，这导致了功耗增加。CMOS逻辑门则优化了这个问题。</p><p>CMOS使用上拉电路和下拉电路，构成逻辑门。以NOT门为例，无论输入是低或高时，CMOS NOT门都直接被连到VCC或者GND，内部没有电流流动，理想状态下没有功率。这是CMOS是当今最流行的逻辑电路技术的原因。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114004622139.png" alt="image-20240114004622139"></p><h3 id="使用CMOS逻辑门构建逻辑电路"><a href="#使用CMOS逻辑门构建逻辑电路" class="headerlink" title="使用CMOS逻辑门构建逻辑电路"></a>使用CMOS逻辑门构建逻辑电路</h3><p>在MOS层面，<strong>AND逻辑需要两个MOS都导通才导通，因此可以用两个MOS管串联来实现；OR逻辑只需要任意任意一个MOS导通它就导通，因此可以用两个MOS管并联来实现</strong></p><p>下图就时一个使用MOS管实现NOR逻辑的例子：</p><ul><li><p>上拉电路是电路取1的表达状态：根据真值表，只有当$x_1,x_2$都是0的时候，电路输出才是1。也就是$x_1x_2$</p></li><li><p>下拉电路是电路取0的表达状态，根据真值表，只要任意输入不为0，电路输出0。也就是$x_1+x_2$</p></li><li>根据上面的分析，AND逻辑使用串联，OR逻辑使用并联，即可得到下面这个NOR gate</li></ul><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114004807165.png" alt="image-20240114004807165"></p><p><em>Example：Realise the following function using PMOS and NMOS$f=  \overline {x_ {1}}  +  \overline {x_ {2}}   \cdot   \overline {x_ {3}}  $</em> </p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114005501784.png" alt="img" style="zoom:150%;" /></p><p>如上图所示，上拉电路为$f=1$的时候，也就是$f=  \overline {x_ {1}}  +  \overline {x_ {2}}   \cdot   \overline {x_ {3}}  $</p><p>下拉电路为$f=0$的时候，也就是$  \overline f=\overline { \overline {x_ {1}}  +  \overline {x_ {2}}   \cdot   \overline {x_ {3}}  }=<br>(  x_ {1}  )  (x_ {2}+x_ {3}) $，逻辑是($x_1$) 与 ($x_2,x_3$并联的结果) 串联</p><hr><h1 id="可编程逻辑器件-Programmable-Logic-Devices-PLDs"><a href="#可编程逻辑器件-Programmable-Logic-Devices-PLDs" class="headerlink" title="可编程逻辑器件 (Programmable Logic Devices PLDs)"></a>可编程逻辑器件 (Programmable Logic Devices PLDs)</h1><h2 id="Programmable-Logic-Array-PLA"><a href="#Programmable-Logic-Array-PLA" class="headerlink" title="Programmable Logic Array (PLA)"></a><strong>Programmable Logic Array (PLA)</strong></h2><p>PLA 由AND运算后输入给OR运算，整体构成了一个SOP的形式，下图中曲线的位置代表它可编程。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114011303571.png" alt="image-20240114011303571"></p><p>下图逻辑表达式如下 </p><p>$ P_ {1} $ = $ x_ {1} $ $ x_ {2} $  $ P_ {2} $ = $ x_ {1} $ $ \overline {x}_ {3} $ , $ P_ {3} $ = $ \overline {x}_ {1} $ $ \overline {x}_ {2} $ $ x_ {3} $ , $ andP_ {4} $ = $ x_ {1} $ $ x_ {3} $<br> $ f_ {1} $ = $ x_ {1} $ $ x_ {2} $ + $ x_ {1} $ $ \overline {x}_ {3} $ + $ \overline {x}_ {1} $ $ \overline {x}_ {2} $ $ x_ {3} $<br> $ f_ {2} $ = $ x_ {1} $ $ x_ {2} $ + $ \overline {x}_ {1} $ $ \overline {x_ {2}} $ $ x_ {3} $ + $ x_ {1} $ $ x_ {3} $ </p><p><strong>PLA 所需的可编程开关具有难以制造，速度慢的问题。</strong></p><h2 id="Programmable-Array-Logic-PAL"><a href="#Programmable-Array-Logic-PAL" class="headerlink" title="Programmable Array Logic (PAL)"></a><strong>Programmable Array Logic (PAL)</strong></h2><p>PAL的AND plane是可编程的，OR plane是固定的。与PLA相比，PAL提供的灵活性较小；PLA允许每个或门最多有四个乘积项，而PAL中的或门只有两个输入。但它减少了可编程开关的数量。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114010919955.png" alt="image-20240114010919955"></p><p>上图的输出为： $ f_ {1} $ = $ x_ {1} $ $ x_ {2} $ $ \overline {x}_ {3} $ + $ \overline {x}_ {1} $ $ x_ {2} $ $ x_ {3} $ ；   $ f_ {2} $ = $ \overline {x}_ {1} $ $ \overline {x}_ {2} $ + $ x_ {1} $ $ x_ {2} $ $ x_ {3} $ </p><p>因为PAL的OR的输出是不可编程的，因此flexibility较差。利用额外的宏单元来提升flexibility。宏(Macrocell) :将OR Gate的输出连接至额外的电路，如下图例子所示。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114011123843.png" alt="image-20240114011123843"></p><h2 id="Complex-Programmable-Logic-Device-CPLD"><a href="#Complex-Programmable-Logic-Device-CPLD" class="headerlink" title="Complex Programmable Logic Device (CPLD)"></a><strong>Complex Programmable Logic Device (CPLD)</strong></h2><p>为了实现需要更多输入和输出的电路，可以使用多个PLA或PAL，或者可以使用更复杂类型的芯片，称为复杂可编程逻辑器件（CPLD）。CPLD的基本结构可看成由可编程逻辑阵列（LAB），可编程I/O控制模块和可编程内部连线（PIA）等三部分组成。</p><p>Example：下图是四个类似PAL的块，连接到一组互连线。每个类似PAL的块也连接到标记为I/O块。note: 一旦CPLD被编程了，那它的程序是可以断电保存的。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114011242968.png" alt="image-20240114011242968"></p><h2 id="Field-programmable-gate-array-FPGA"><a href="#Field-programmable-gate-array-FPGA" class="headerlink" title="Field-programmable gate array (FPGA)"></a><strong>Field-programmable gate array (FPGA)</strong></h2><p>FPGA由可编程逻辑块（CLB/Logic Block），输入/输出模块（IOB）及可编程互连资源（PIR）等三种可编程电路和一个SRAM结构的配置存储单元组成。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114011406647.png" alt="image-20240114011406647"></p><p>最常用的可编程逻辑块（Logic Block），是查表(Look Up Table LUT)</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114011456609.png" alt="image-20240114011456609"></p><hr><h1 id="Custom-Chips-Standard-Cells-and-Gate-Arrays"><a href="#Custom-Chips-Standard-Cells-and-Gate-Arrays" class="headerlink" title="Custom Chips, Standard Cells, and Gate Arrays"></a><strong>Custom Chips, Standard Cells, and Gate Arrays</strong></h1><p>限制PLD中可以容纳的电路大小的关键因素是可编程开关的存在。尽管这些开关提供了用户可编程性的重要优势</p><ul><li><p><strong>它们在芯片上消耗了大量空间，从而导致成本增加。</strong></p></li><li><p><strong>它们还导致电路运行速度的降低</strong></p></li><li><p><strong>以及功耗的增加。</strong></p><p>AISC可以解决如上问题</p></li></ul><h2 id="Application-specific-integrated-circuits-AISCs"><a href="#Application-specific-integrated-circuits-AISCs" class="headerlink" title="Application-specific integrated circuits (AISCs)"></a><strong>Application-specific integrated circuits (AISCs)</strong></h2><p>专用集成电路，是指应特定用户要求和特定电子系统的需要而设计、制造的集成电路。制造商首先制造出逻辑操作的模板，后根据用户需求将模板用不同方式组合在一起。</p><p><strong>ASIC在批量生产时与通用集成电路相比具有体积更小、功耗更低、可靠性提高、性能提高、保密性增强、成本降低等优点。</strong></p><p><strong>ASIC和FPGA相比，ASIC是专用集成电路，一旦设计完成后集成电路即固定。而FPGA是在阵列内集成大量数字电路基本门电路和存储器，开发人员可以通过烧写FPGA配置来定义电路。</strong></p><p>一个AISC的例子：这个电路中，制造商制造框起来的标准逻辑块，用户自定义连接(红线)，来实现不同输出，下图电路实现的输出就是：$f_1=  x_ {1}   x_ {2}  +  \overline {x_ {1}}  \overline {x_ {2}}   x_ {3}  +  x_ {1}   x_ {3}  $;    $ f_2=  \overline {x_ {1}}    \overline {x_ {3}}  +  \overline {x_ {1}}   \overline {x_ {2}}   x_ {3}  +  x_ {1}   x_ {3}  $</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114011657224.png" alt="image-20240114011657224"></p><hr><h1 id="传输门（Transmission-Gates）五星级"><a href="#传输门（Transmission-Gates）五星级" class="headerlink" title="传输门（Transmission Gates）五星级"></a><strong>传输门（Transmission Gates）五星级</strong></h1><p>NMOS(高开低关)传输0较好，而传输1较差。PMOS（低开高关）传输1较好而传输0较差。传输门把一个NMOS和一个PMOS组合在一起，从而实现很低的导通电阻和很高的截止电阻。因此，传输门可以直接使得原始信号x通过逻辑门，此时逻辑门输出$f=x$。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114012221074.png" alt="image-20240114012221074"></p><div class="note warning simple"><p>五星级问题：一个传输门有几个 Transistor？ ——2个; 因为是把PMOS和NMOS组合在一起</p></div><p><strong>五星级例题：使用传输门构建XOR</strong></p><p>XOR表达式：$f=\overline x_1x_2+x_1 \overline x_2$</p><p>根据真值表，当$x_1=0$时，输出$f=x_2$。当$x_1=1$时，输出$f=\overline x_2 $。根据传输门良好导通的特性，下图电路可被设计。</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114012807046.png"/></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114012819416.png"/></center></td>    </tr></table><hr><h1 id="SPLD、CPLD和FPGA的实现细节"><a href="#SPLD、CPLD和FPGA的实现细节" class="headerlink" title="SPLD、CPLD和FPGA的实现细节"></a><strong>SPLD、CPLD和FPGA的实现细节</strong></h1><h2 id="PLD"><a href="#PLD" class="headerlink" title="PLD"></a>PLD</h2><p>这是一个普通的XOR Gate，使用NMOS实现的电路</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114012954804.png" alt="image-20240114012954804"></p><p>这是可编程版本</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114013017068.png" alt="image-20240114013017068"></p><p>白色框框内部结构是EEPROM编程开关，$Ve$连接的就是EEPROM</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114013141719.png" alt="image-20240114013141719"></p><h2 id="FPGA"><a href="#FPGA" class="headerlink" title="FPGA"></a>FPGA</h2><p>与白色框框不同，FPGA采用SRAM编程，结构如下图所示.  <strong>SRAM 单元中的数据掉电就会丢失</strong></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114014257973.png" alt="image-20240114014257973"></p><hr><h1 id="典型逻辑电路和它们的VHDL代码"><a href="#典型逻辑电路和它们的VHDL代码" class="headerlink" title="典型逻辑电路和它们的VHDL代码"></a>典型逻辑电路和它们的VHDL代码</h1><h2 id="例1："><a href="#例1：" class="headerlink" title="例1："></a>例1：</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114013350317.png" alt="image-20240114013350317"></p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--定义实体，主要定义输入输出的端口--</span></span><br><span class="line"><span class="keyword">ENTITY</span> examplel <span class="keyword">IS</span></span><br><span class="line"><span class="keyword">PORT</span> (x1,x2,x3 :<span class="keyword">IN</span> <span class="built_in">BIT</span> ; <span class="comment">--PORT后定义输入的端口和输出的端口</span></span><br><span class="line">f  : <span class="keyword">OUT</span> <span class="built_in">BIT</span> );<span class="comment">--这里定义类型为BIT，只有0和1两种状态；这里也可以定义为STD_LOGIC,会多出高阻等等状态，Dr.Wu一般只会考0和1的</span></span><br><span class="line"><span class="keyword">END</span> example1 ;</span><br><span class="line"><span class="comment">--定义某个实体对应的逻辑结构--</span></span><br><span class="line"><span class="keyword">ARCHITECTURE</span> LogicFunc <span class="keyword">OF</span> examplel <span class="keyword">IS</span> </span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">f &lt;= (x1 <span class="keyword">AND</span> x2) <span class="keyword">OR</span> (<span class="keyword">NOT</span> X2 <span class="keyword">AND</span> x3) <span class="comment">--写输入，输出端口对应的逻辑表达式</span></span><br><span class="line"><span class="keyword">END</span> LogicFunc;</span><br></pre></td></tr></table></figure><h2 id="例2："><a href="#例2：" class="headerlink" title="例2："></a>例2：</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114013524391.png" alt="image-20240114013524391"></p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ENTITY</span> example2 <span class="keyword">IS</span></span><br><span class="line"><span class="keyword">PORT</span> (xl,x2,x3,x4 :<span class="keyword">IN</span> <span class="built_in">BIT</span> ; <span class="comment">--PORT后定义输入的端口和输出的端口，这里是多路输出，有f和g两个OUT</span></span><br><span class="line">f,g : <span class="keyword">OUT</span> <span class="built_in">BIT</span>);</span><br><span class="line"><span class="keyword">END</span> example2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ARCHITECTURE</span> LogicFunc <span class="keyword">OF</span> example2 <span class="keyword">IS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">f &lt;=(x1 <span class="keyword">AND</span> x3) <span class="keyword">OR</span> (x2 <span class="keyword">AND</span> x4) ;<span class="comment">--分别写出输出的逻辑表达式</span></span><br><span class="line">g &lt;= (x1 <span class="keyword">OR</span> <span class="keyword">NOT</span> x3) <span class="keyword">AND</span> (<span class="keyword">NOT</span> X2 <span class="keyword">OR</span> X4)</span><br><span class="line"><span class="keyword">END</span> LogicFunc ;</span><br></pre></td></tr></table></figure><hr><center>---CHAPTER END---</center>]]></content>
      
      
      <categories>
          
          <category> 大三上 </category>
          
          <category> 数字电路设计与可靠性工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/posts/423abe9e.html"/>
      <url>/posts/423abe9e.html</url>
      
        <content type="html"><![CDATA[<h1 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h1><p>以下内容中&lt;参数&gt;都表示输入参数，输入时不需要加&lt;&gt;</p><h2 id="本地仓库相关"><a href="#本地仓库相关" class="headerlink" title="本地仓库相关"></a>本地仓库相关</h2><h3 id="在某一文件夹内初始化git"><a href="#在某一文件夹内初始化git" class="headerlink" title="在某一文件夹内初始化git"></a><strong>在某一文件夹内初始化git</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="把工作区文件添加至暂存区"><a href="#把工作区文件添加至暂存区" class="headerlink" title="把工作区文件添加至暂存区"></a><strong>把工作区文件添加至暂存区</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;文件名 或 通配符&gt;</span><br><span class="line">git add -u <span class="comment">#将已跟踪的文件提交至暂存区</span></span><br></pre></td></tr></table></figure><h3 id="把暂存区文件提交至本地仓库"><a href="#把暂存区文件提交至本地仓库" class="headerlink" title="把暂存区文件提交至本地仓库"></a><strong>把暂存区文件提交至本地仓库</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;&lt;对本次提交的描述&gt;&quot;</span> <span class="comment">#从暂存区提交</span></span><br><span class="line">git commit -am <span class="string">&quot;&lt;对本次提交的描述&gt;&quot;</span> <span class="comment">#将已跟踪的文件提交至暂存区和仓库</span></span><br><span class="line">git commit --amend -m <span class="string">&quot;&lt;对上次提交的描述修改&gt;&quot;</span> <span class="comment">#修改上次提交的描述，不加-m可进入vim编辑</span></span><br></pre></td></tr></table></figure><h3 id="查看当前仓库的状态（分支、文件、文件状态）"><a href="#查看当前仓库的状态（分支、文件、文件状态）" class="headerlink" title="查看当前仓库的状态（分支、文件、文件状态）"></a><strong>查看当前仓库的状态（分支、文件、文件状态）</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="回退版本"><a href="#回退版本" class="headerlink" title="回退版本"></a><strong>回退版本</strong></h3><p>  &lt;输入参数&gt;有：</p><ul><li>—soft  (保留工作区和暂存区仅回退版本)</li><li>—hard  （回退版本、工作区、暂存区）</li><li>—mixed   (回退功版本和暂存区，保留工作区)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset &lt;输入参数&gt;</span><br></pre></td></tr></table></figure><h3 id="查看差异"><a href="#查看差异" class="headerlink" title="查看差异"></a><strong>查看差异</strong></h3><p>  &lt;输入参数&gt;有：</p><ul><li>无： 工作区和暂存区的差异； 如果存在merge冲突，将在下面显示</li><li>HEAD：工作区和版本库的差异</li><li>— cache或—staged：暂存区和版本库的差异</li><li>&lt;版本1 id&gt; &lt;版本2 id&gt;：版本1和版本2之间的差异，这里可以用HEAD指代当前版本的id；HEAD~ 来指代上一个版本的id; HEAD~n 表示前n个版本的id；</li><li>&lt;分支名1&gt; &lt;分支名2&gt;：分支1和分支2间的差异</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;输入参数&gt;</span><br></pre></td></tr></table></figure><h3 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a><strong>查看提交记录</strong></h3><p>  &lt;参数&gt;：</p><ul><li>—oneline， 这样只会显示哈希值的前几位。</li><li>—graph —oneline —decorate -all 查看分支图形式的提交记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span> &lt;参数&gt;</span><br></pre></td></tr></table></figure><h3 id="查看暂存区文件"><a href="#查看暂存区文件" class="headerlink" title="查看暂存区文件"></a><strong>查看暂存区文件</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files</span><br></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a><strong>删除文件</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">rm</span> &lt;文件名&gt; <span class="comment">#等效于删除某一文件后git add</span></span><br><span class="line">git <span class="built_in">rm</span> &lt;文件夹&gt; -r * <span class="comment">#递归删除某个文件夹以及内部所有文件和子文件夹</span></span><br><span class="line">git <span class="built_in">rm</span> --cached &lt;文件名&gt; <span class="comment"># 从暂存区删除，但保留在工作区</span></span><br></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><ul><li><strong>branch 命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;分支名&gt; <span class="comment">#创建一个新的分支</span></span><br><span class="line">git branch <span class="comment">#查看当前的分支状态</span></span><br><span class="line">git branch -d &lt;分支名&gt; <span class="comment">#删除已经被合并的分支</span></span><br><span class="line">git branch -D &lt;分支名&gt; <span class="comment">#强制删除未被合并的分支</span></span><br><span class="line">git branch -vv <span class="comment">#查看本地分支时候和远程分支存在映射关系</span></span><br></pre></td></tr></table></figure><ul><li><strong>switch 命令（同checkout）</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git switch &lt;分支名&gt; <span class="comment">#切换到某分支</span></span><br><span class="line">git switch -b &lt;分支名&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>merge命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;分支名&gt; <span class="comment">#把输入名字的分支合并到当前分支</span></span><br><span class="line">git merge --abort <span class="comment">#终止合并</span></span><br></pre></td></tr></table></figure><p>当合并冲突出现时，需要手动修改冲突内容，并使用git add + commit进行提交来合并分支</p><ul><li><strong>rebase命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase &lt;分支名&gt; <span class="comment">#将&lt;分支名&gt;上由共同祖先到当前HEAD的所有提交记录，移动到当前分支的分支树上（直接变基在当前分支HEAD的顶上）</span></span><br></pre></td></tr></table></figure><h2 id="远程仓库相关"><a href="#远程仓库相关" class="headerlink" title="远程仓库相关"></a>远程仓库相关</h2><h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a><strong>克隆仓库</strong></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;仓库地址&gt;</span><br></pre></td></tr></table></figure><h3 id="设置远程仓库"><a href="#设置远程仓库" class="headerlink" title="设置远程仓库"></a>设置远程仓库</h3><p>  &lt;输入参数&gt;：</p><ul><li>add &lt;仓库别名,通常origin&gt; &lt;仓库地址&gt;: 添加远程仓库</li><li>-v :查看本地仓库对应的远程仓库的别名和地址</li><li>rm &lt;仓库别名&gt;：删除远程仓库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote &lt;输入参数&gt;</span><br></pre></td></tr></table></figure><p>设置远程仓库和本地仓库的分支映射关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream &lt;本地分支&gt; &lt;远程仓库名&gt;/&lt;远程分支&gt; <span class="comment">#将本地分支映射到远程主机的远程分支</span></span><br><span class="line">git branch --set-upstream &lt;本地分支&gt; &lt;远程仓库名&gt; <span class="comment">#将本地分支映射到远程主机的同名分支</span></span><br></pre></td></tr></table></figure><h3 id="拉取仓库"><a href="#拉取仓库" class="headerlink" title="拉取仓库"></a>拉取仓库</h3><p><strong>pull</strong>  </p><p>&lt;输入参数&gt;：</p><ul><li><p>&lt;远程主机名&gt; &lt;远程分支&gt;:&lt;本地分支&gt;: 将远程主机上的远程分支取回，并与本地分支合并</p></li><li><p>&lt;远程主机名&gt; &lt;远程分支&gt;: 将远程主机上的远程分支取回，并与当前的本地分支合并</p><p><strong>如果当前分支已经被设置了和远程分支的映射关系，则不需要输入参数</strong></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;输入参数&gt;</span><br></pre></td></tr></table></figure><p><strong>fetch</strong></p><p>所有使用pull命令拉取的分支都会自动和本地分支合并，fetch则是先存在本地，等待人工merge合并</p><p>&lt;输入参数&gt;：</p><ul><li>&lt;远程主机名&gt; &lt;远程分支&gt;:&lt;本地分支(一般新建tmp分支)&gt;: 将远程主机上的远程分支取回到本地工作区，不合并，需要主动$merge <tmp>$</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch &lt;输入参数&gt;</span><br></pre></td></tr></table></figure><h3 id="上传仓库"><a href="#上传仓库" class="headerlink" title="上传仓库"></a>上传仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;远程仓库名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; <span class="comment">#把本地分支推送至远程</span></span><br><span class="line"><span class="comment">#在本地分支和远程分支同名时或设置了映射关系时，可省略远程分支</span></span><br><span class="line">git push &lt;远程仓库名&gt; &lt;本地分支名&gt;</span><br><span class="line"><span class="comment">#推送当前分支时,可省略本地分支名</span></span><br><span class="line">git push &lt;远程仓库名&gt;</span><br><span class="line"><span class="comment">#在本地分支只和一个远程仓库有映射关系时，可省略远程仓库名</span></span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">git push  &lt;远程仓库名&gt; --delete &lt;远程分支名&gt; <span class="comment">#删除远程仓库中的某一分支</span></span><br></pre></td></tr></table></figure><h1 id="git常用工作流"><a href="#git常用工作流" class="headerlink" title="git常用工作流"></a>git常用工作流</h1><h3 id="gitflow工作流模型"><a href="#gitflow工作流模型" class="headerlink" title="gitflow工作流模型"></a><strong>gitflow工作流模型</strong></h3><ul><li><p><strong>mian分支</strong>（核心分支）：项目的可靠分支，可直接部署进生产环境，不允许直接修改，只能通过merge合并</p><p>主分支的版本号命名规则：Major Version（主要功能或者重大版本更新）；Minor Version（新功能改进和更新，不会影响现有功能）；Patch Version（一些bug修复）</p></li><li><p>hotfix分支：bug的热修复分支，一般从主分支中分离出来，修复完成后合并至mian分支和各个开发分支</p></li><li><p><strong>develop分支</strong>(核心分支)：开发分支，</p></li><li><p>feature分支：功能分支，用于开发新的功能的分支，新功能在稳定后会合并进开发分支。</p></li><li><p>release分支：发布前测试和验证的分支，由开发分支分离，当预发布分支稳定后，merge到主分支和开发分支并删除release分支。当预发布分支发现问题时，直接在预发布分支内进行修改。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 各种折腾 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sx1280芯片手册</title>
      <link href="/posts/dead6220.html"/>
      <url>/posts/dead6220.html</url>
      
        <content type="html"><![CDATA[<h1 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h1><h2 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h2><p>SX1280是一个工作在2.4GHz(ISM频段)的半双工收发器。芯片引脚定义如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">Pin Number</th><th style="text-align:center">引脚名称</th><th style="text-align:center">I/O类型</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">VR_PA</td><td style="text-align:center">-</td><td style="text-align:center">功放的稳压供电</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">VDD_IN</td><td style="text-align:center">I</td><td style="text-align:center">设备稳压供电，连接到Pin12</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">NRESET</td><td style="text-align:center">I</td><td style="text-align:center">复位信号，低电平有效，内部上拉为50kΩ</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">XTA</td><td style="text-align:center">-</td><td style="text-align:center">参考振荡器或温补晶振输入</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">XTB</td><td style="text-align:center">-</td><td style="text-align:center">参考振荡器</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">BUSY</td><td style="text-align:center">O</td><td style="text-align:center">忙信号</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">DIO1</td><td style="text-align:center">I/O</td><td style="text-align:center">数字IO</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">DIO2</td><td style="text-align:center">I/O</td><td style="text-align:center">数字IO</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">DIO3</td><td style="text-align:center">I/O</td><td style="text-align:center">数字IO</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center">VBAT_IO</td><td style="text-align:center">I</td><td style="text-align:center">数字IO供电（1.8V至3.7V）</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center">DCC_FB</td><td style="text-align:center">O</td><td style="text-align:center">片内稳压输出</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center">DCC_SW</td><td style="text-align:center">O</td><td style="text-align:center">DCDC开关电源输出</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">VBAT</td><td style="text-align:center">I</td><td style="text-align:center">RFIC的供电（1.8V至3.7V）</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">MISO_TX</td><td style="text-align:center">O</td><td style="text-align:center">SPI slave output_UART TX</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center">MOSI_RX</td><td style="text-align:center">I</td><td style="text-align:center">SPI slave input_UART RX</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center">SCK_RTSN</td><td style="text-align:center">I</td><td style="text-align:center">SPI 时钟_ UART请求发送（Request to Send）</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center">NSS_CTSN</td><td style="text-align:center">I</td><td style="text-align:center">SPI 从机选择_UART 允许发发送（Clear to Send）</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center">RFIO</td><td style="text-align:center">I/O</td><td style="text-align:center">射频发射/接收 IO</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center">GND</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table></div><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120041210550.png" alt="image-20240120041210550"></p><h2 id="SX1280的一些关键的参数"><a href="#SX1280的一些关键的参数" class="headerlink" title="SX1280的一些关键的参数"></a>SX1280的一些关键的参数</h2><ul><li>供电：1.8~3.7V</li><li>工作温度：-40~85 摄氏度</li><li>RF天线功率 ：最小输出-18dBm 最大输入12.5dBm</li><li>数字IO： 最大输入/输出电流 2.5mA</li></ul><h2 id="硬件模块结构"><a href="#硬件模块结构" class="headerlink" title="硬件模块结构"></a>硬件模块结构</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124162852697.png" alt="image-20240124162852697"></p><p>通过SPI或UART，发送对应的opcode+data的形式来控制这个模块。模块大致分为5个部分，模拟前端用于调制和发射频带信号，绿色的是数字调制部分，可产生不同调制的信号。Data Buffer用于存放接收的和待发送的数据。和 Protocol Engine用于硬件实现一些通信协议。</p><p>在供电方面，SX1280有两个独立的供电模组：DC-DC和LDO，默认情况下，仅开启LDO做为供电，但DCDC电源可在FS，RX，TX模式下启用，来承载更高的功耗。<strong>如果要想启用DCDC电源，则需要在12和14引脚之间接一个15uH的电感并将DCDC和LDO并联做为VDD。</strong>在DCDC被并入供电时，可在待机模式时切换启用和关闭DCDC供电，下方工作模式将会详细介绍。</p><h2 id="SX1280的几种工作模式"><a href="#SX1280的几种工作模式" class="headerlink" title="SX1280的几种工作模式"></a>SX1280的几种工作模式</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120013631945.png" alt="image-20240120013631945"></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240208021648925.png" alt="image-20240208021648925"></p><h3 id="STDBY（待机）模式"><a href="#STDBY（待机）模式" class="headerlink" title="STDBY（待机）模式"></a>STDBY（待机）模式</h3><p>该模式有两种时钟源，分别是13M的RC振荡器和外部晶振XOSC，可以用命令 $SetStandby(oscillatorMode)$ 来进行切换。当选用XOSC作为时钟源时，自动切换为DCDC模块供电。也可使用如下命令手动设置供电：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetRegulatorType(regulatorType); <span class="comment">//该指令仅可在STDBY_RC模式使用</span></span><br></pre></td></tr></table></figure><h3 id="Frequency-Synthesis-FS-频率合成-模式"><a href="#Frequency-Synthesis-FS-频率合成-模式" class="headerlink" title="Frequency Synthesis (FS 频率合成)模式"></a>Frequency Synthesis (FS 频率合成)模式</h3><p>在FS模式下，模拟部分的PLL会按照设置的Tx开始震荡，当震荡稳定时，BUSY引脚就会变成低电平（标明设备已准备好接受指令）</p><p>在SX1280的设计中，RX和TX的频率是不同的，RX的频率等于Tx的频率（i.e., 锁相环产生的频率）减去中间频率(Intermediate Frequency IF)，IF默认是1.3MHz。</p><h3 id="Receice（接收）模式"><a href="#Receice（接收）模式" class="headerlink" title="Receice（接收）模式"></a>Receice（接收）模式</h3><p>在接收模式下除了FS模式启用的PLL外，片上LNA，相干器，和对应的解调器（LoRa/FSK/FLRC）都会开始工作。接受模式可设置为连续接收（continuous mode）和单次接收（single mode）。在连续接收模式下，模块会保持接收模式。在单次接收模式下，模块会在一次接收完成后返回STDBY模式。</p><p>接收模式通过官方驱动的SetRx函数来设置，其输入参数periodBase是指的时钟振荡周期，periodBaseCount是指的历经多少次时钟震荡算超时。当超时时，会从Receive mode 返回至 STDBY_RC mode。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetRx(periodBase, periodBaseCount); <span class="comment">//Opcode 0x83</span></span><br></pre></td></tr></table></figure><h3 id="Transmit（发送）模式"><a href="#Transmit（发送）模式" class="headerlink" title="Transmit（发送）模式"></a>Transmit（发送）模式</h3><p>发送模式会在信号放大器（PA）启动完成后，发送待发送的数据包。在发送完成后自动返回STDBY_RC模式</p><h3 id="Sleep（睡眠）模式"><a href="#Sleep（睡眠）模式" class="headerlink" title="Sleep（睡眠）模式"></a>Sleep（睡眠）模式</h3><p>睡眠模式下，只有睡眠控制器模块和可选的64KHz RC时钟工作。睡眠模式仅能从STDBY_RC模式下进入。</p><p>唤醒的方式有：</p><ul><li>NSS（Pin 19）变成低电平</li><li>RTC定时器产生计时结束事件</li></ul><p>SX1280在上电时，会自动校准其RC时钟，PLL和ADC，在校准期间BUSY信号会保持高电平，在校准完成后会进入STDBY_RC模式，并使BUSY信号变为低电平以表示准备好接收指令。</p><p>上电校准的结果会有寄存器存储，因此在休眠模式被唤醒时无需再次校准。</p><h1 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h1><p>Sx1280使用串口发送opcode的形式来控制模块，串口可使用UART或SPI，二者发送命令和支持的功能（如校验、流控）有些许差异。详细介绍如下。</p><h2 id="使用UART和模块建立连接"><a href="#使用UART和模块建立连接" class="headerlink" title="使用UART和模块建立连接"></a>使用UART和模块建立连接</h2><ul><li>波特率：该模块支持的波特率有921.6K，460.6K，115.2K，57.6K，38.4K，19.2K，9.6K。 <strong>在上电时，默认以115200工作，通过配置寄存器更改其他波特率</strong></li><li>停止位：模块支持1或2个停止位，通过寄存器配置，<strong>上电默认一个停止位</strong></li><li>仅支持8byte数据</li><li>模块支持奇偶校验、无校验</li><li>模块支持在Rx满，Tx空，奇偶校验错误或无停止位时，产生中断</li></ul><p><strong>使用UART和模块通信时，主机必须提供长度信息，模块一旦接受到所需长度的信息，就会开始处理任务，命令格式通常为：opcode+后续长度+后续参数</strong></p><p>举个例子，在UART执行写寄存器的操作时，必须发送操作码+要写的首地址+数据的长度+数据+….+数据n。如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209004243157.png" alt="image-20240209004243157"></p><p>在使用UART进行读寄存器时，发送完操作码+要读的首地址+数据的长度后，主机RX线便会收到从机的数据内容。如下图</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209004849480.png" alt="image-20240209004849480"></p><p>在使用UART指令时，模块一收到opcode就会将busy线拉高，然后在接收后续长度指定的命令个数后，将BUSY线重新拉低进行命令处理。</p><h2 id="使用SPI和模块建立连接"><a href="#使用SPI和模块建立连接" class="headerlink" title="使用SPI和模块建立连接"></a>使用SPI和模块建立连接</h2><ul><li>NSS引脚变成低电平使能，高电平失能</li><li>MOSI 由主机在 SCK 下降沿时产生，并由从机在 SCK 上升沿时采样。 MISO 由 SCK 下降沿的从机产生。</li><li>通信时钟SCK最高频率为18MHz</li></ul><p><strong>使用SPI和模块通信时，无需提供命令长度，以NSS信号线被拉高来结束一次通信即可，即，命令格式为：opcode+后续参数</strong></p><p>举个例子，在SPI执行写寄存器时，只需发送操作码+要写的首地址+数据+…+数据n，相较于UART无需发送数据长度。由NSS信号被拉高来标明当前写操作结束。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209004451160.png" alt="image-20240209004451160"></p><p>在使用SPI执行读寄存器时，要发送操作码+要读的首地址+NOP（0x00），MISO线才开始传输数据。也就是说，UART内数据长度的位置需要用一个NOP来顶替，以此达到一个延时等待响应的目的。如下图</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240209004819079.png" alt="image-20240209004819079"></p><h1 id="指令操作码（OPcode）"><a href="#指令操作码（OPcode）" class="headerlink" title="指令操作码（OPcode）"></a>指令操作码（OPcode）</h1><p><em>在以下笔记中，所有NOP表示数据0x00，指令顺序中用+连接的是通过不同数据帧发送的不同byte，比如0x01+0x02是先发送0x01再发送0x02</em></p><h2 id="寄存器相关"><a href="#寄存器相关" class="headerlink" title="寄存器相关"></a>寄存器相关</h2><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">写寄存器数据</td><td style="text-align:center">0x18</td><td style="text-align:center">操作码+地址[15:8]+地址[7:0]+数据…+数据n</td><td style="text-align:center">操作码+地址[15:8]+地址[7:0]+长度+数据…+数据n</td></tr><tr><td style="text-align:center">读寄存器数据</td><td style="text-align:center">0x19</td><td style="text-align:center">操作码+地址[15:8]+地址[7:0]+NOP</td><td style="text-align:center">操作码+地址[15:8]+地址[7:0]+长度</td></tr></tbody></table></div><h2 id="数据缓冲区-Buffer-相关"><a href="#数据缓冲区-Buffer-相关" class="headerlink" title="数据缓冲区(Buffer)相关"></a>数据缓冲区(Buffer)相关</h2><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">写Buffer数据</td><td style="text-align:center">0x1A</td><td style="text-align:center">操作码+地址偏移+数据…+数据n</td><td style="text-align:center">操作码+地址偏移+长度+数据…+数据n</td></tr><tr><td style="text-align:center">读Buffer数据</td><td style="text-align:center">0x1B</td><td style="text-align:center">操作码+地址偏移+NOP</td><td style="text-align:center">操作码+地址偏移+长度</td></tr></tbody></table></div><h2 id="模式切换相关"><a href="#模式切换相关" class="headerlink" title="模式切换相关"></a>模式切换相关</h2><h3 id="睡眠模式"><a href="#睡眠模式" class="headerlink" title="睡眠模式"></a>睡眠模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetSleep</td><td style="text-align:center">0x84</td><td style="text-align:center">操作码+睡眠配置</td><td style="text-align:center">操作码+睡眠配置</td></tr></tbody></table></div><p>其中睡眠配置为1byte，但只有低二位有用，其余bit保持0。例如0x01,0x03等：</p><ul><li>第0位：如果该位被置1，那么在RAM中的部分数据会被存放进非易失存储器（称为 retention mode）。否则RAM数据被刷新。RAM主要用于存放模块初始化设置，被备份的数据如下：<ul><li>SetPacketType()</li><li>SetModulationParams()</li><li>SetRfFrequency()</li><li>SetDioIrqParams()</li><li>SetCadParams()</li></ul></li></ul><ul><li>第1位：如果该为被置1，那么Data buffer中的数据会被存放进非易失存储器。否则Data Buffer内数据被刷新。</li></ul><h3 id="待机模式"><a href="#待机模式" class="headerlink" title="待机模式"></a>待机模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetStandby</td><td style="text-align:center">0x80</td><td style="text-align:center">操作码+待机配置</td><td style="text-align:center">操作码+0x01+待机配置</td></tr></tbody></table></div><p>其中待机配置为1byte，但只有LSB有用，其余bit保持0，也就是只有0x00和0x01两种：</p><ul><li>0x00：STDBY_RC模式，使用13MHz RC振荡器做为时钟源</li><li>0x01：STDBY_XOSC模式，使用外部晶振做为时钟源</li></ul><h3 id="频率合成模式（FS-mode）"><a href="#频率合成模式（FS-mode）" class="headerlink" title="频率合成模式（FS mode）"></a>频率合成模式（FS mode）</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetFs</td><td style="text-align:center">0xC1</td><td style="text-align:center">操作码</td><td style="text-align:center">操作码</td></tr></tbody></table></div><h3 id="发送模式"><a href="#发送模式" class="headerlink" title="发送模式"></a>发送模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th></tr></thead><tbody><tr><td style="text-align:center">SetTx</td><td style="text-align:center">0x83</td></tr><tr><td style="text-align:center"><strong>SPI模式指令顺序</strong></td><td style="text-align:center"><strong>UART模式指令顺序</strong></td></tr><tr><td style="text-align:center">操作码+periodBase+periodBaseCount[15:8]+periodBaseCount[7:0]</td><td style="text-align:center">操作码+0x03(后续长度)+periodBase+periodBaseCount[15:8]+periodBaseCount[7:0]</td></tr></tbody></table></div><p><em>note：在设置为发送模式前，需要先清除IRQ status</em></p><p><strong>Single Mode Tx</strong>： 如果periodBase和PeriodBaseCount都设置为0x00，即，传输指令0x83+0x00+0x00（SPI模式下），那么模块将工作在单次发模式（Single Mode Tx）。在该模式下，不会有超时限制，会在发送一个包之后结束Tx模式。</p><p><strong>发送模式的流程</strong>： 1. 打开PLL     2. 打开PA（功率放大器）     3. PA根据SetTxParam函数设置的模式，进行上升     4. 待PA上升完成，数据开始分包传输 5.传输完成后，关闭PA，关闭PLL，收发器返回STDBY_RC模式，并产生中断“IRQ TxDone”     6.若传输超时，则中断传输，返回STDBY_RC模式，并产生中断“TIMEOUT IRQ”。</p><p><strong>periodBase参数：</strong> 这个参数影响RTC时钟一步的计时时长，表如下</p><div class="table-container"><table><thead><tr><th style="text-align:center">periodBase</th><th style="text-align:center">Time-Out step</th></tr></thead><tbody><tr><td style="text-align:center">0x00</td><td style="text-align:center">15.625us</td></tr><tr><td style="text-align:center">0x01</td><td style="text-align:center">62.5us</td></tr><tr><td style="text-align:center">0x02</td><td style="text-align:center">1ms</td></tr><tr><td style="text-align:center">0x03</td><td style="text-align:center">4ms</td></tr></tbody></table></div><p><strong>PeriodBaseCount参数</strong>：该参数有16位，用于指明在计数多少个周期后超时。计算公式如下：</p><script type="math/tex; mode=display">Time-out\ duration = periodBase\times periodBaseCount</script><p>如果该为被设置为0x00，那么直到单个包发送完成之前，都不会退出Tx模式，无超时限制。当单个包发送完之后返回STDBY_RC模式。</p><h3 id="接收模式"><a href="#接收模式" class="headerlink" title="接收模式"></a>接收模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th></tr></thead><tbody><tr><td style="text-align:center">SetRx</td><td style="text-align:center">0x82</td></tr><tr><td style="text-align:center"><strong>SPI模式指令顺序</strong></td><td style="text-align:center"><strong>UART模式指令顺序</strong></td></tr><tr><td style="text-align:center">操作码+periodBase+periodBaseCount[15:8]+periodBaseCount[7:0]</td><td style="text-align:center">操作码+0x03(后续长度)+periodBase+PeriodBaseCount[15:8]+PeriodBaseCount[7:0]</td></tr></tbody></table></div><p><em>note：在设置为发送模式前，需要先清除IRQ status</em></p><p>接收模式的参数意义同发送模式，但它可以设置单次接收模式，连续接收模式，超时模式三种，表如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">periodBaseCount</th><th style="text-align:center">超时时间</th></tr></thead><tbody><tr><td style="text-align:center">0x0000</td><td style="text-align:center">单次接收模式，没有超时时间，但在完成一个包的接收之后返回STDBY_RC模式</td></tr><tr><td style="text-align:center">0xFFFF</td><td style="text-align:center">连续接收模式，设备一直保持接收模式，直到主机发送改变模式的命令。每次接收到数据包时，都会向主机发送已接收新的数据包的指示。</td></tr><tr><td style="text-align:center">其他</td><td style="text-align:center">超时时间=超时基周期*超时计数数量</td></tr></tbody></table></div><p><em>举个例子，保持一秒接收模式：0x82+0x03+0x00+0xFA</em></p><h2 id="特殊模式"><a href="#特殊模式" class="headerlink" title="特殊模式"></a>特殊模式</h2><h3 id="嗅探模式"><a href="#嗅探模式" class="headerlink" title="嗅探模式"></a>嗅探模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th></tr></thead><tbody><tr><td style="text-align:center">SetRxDutyCycle</td><td style="text-align:center">0x94</td></tr><tr><td style="text-align:center"><strong>SPI模式指令顺序</strong></td><td style="text-align:center"><strong>UART模式指令顺序</strong></td></tr><tr><td style="text-align:center">操作码+periodBase+periodBaseCount[15:8]+periodBaseCount[7:0]+<br>sleepPeriodBaseCount[15:8]+sleepPeriodBaseCount[7:0]</td><td style="text-align:center">操作码后面+0x05（后续长度）</td></tr></tbody></table></div><p>在嗅探模式（sniff mode）下，模块会周期性地寻找新的包。<strong>在此模式下，用于preamble必须被设置为long preamble mode。因此使用这个指令之前必须使用SetLongPreamble设置preamble模式。</strong></p><p>该模式下periodBase同Tx模式中的表。</p><p><strong>periodBaseCount</strong>：该位用于指明模块唤醒，查询新包的时间</p><p><strong>sleepPeriodBaseCount</strong>：用于指明模块休眠的时间</p><ol><li>模块会进入接收模式，寻找新的包，寻找的时间由periodBaseCount决定。</li><li>如果接收模式的窗口期内没有嗅探到preamble，模块会进入睡眠模式（设置会被保存）。睡眠时间由sleepPeriodBaseCount定义。</li><li>在睡眠时间结束后，模块会将设置重新存会RAM，并返回接收模式，重新嗅探包。</li><li>当如下事件发生时，嗅探模式会被停止：<ul><li>在Rx模式窗口期间，接受到了数据包，在接收完成后会产生”RxDone”中断，并返回STDBY_RC模式</li><li>在Rx模式窗口期间，收到了来自主机的SetStandby()命令。<em>注意：在sleep模式下无法接收命令</em></li></ul></li></ol><p><strong>如果periodBaseCount被设置为0x0000，那么又会进入单次接收模式，没有超时限制，模块会保持接收模式直到收到新的数据包，然后返回STDBY_RC模式。设置为其他数据时，periodBaseCount才能用于指定接收的窗口期长度</strong></p><h3 id="信道活动检测模式（Channel-Activity-Detection-CAD）"><a href="#信道活动检测模式（Channel-Activity-Detection-CAD）" class="headerlink" title="信道活动检测模式（Channel Activity Detection CAD）"></a>信道活动检测模式（Channel Activity Detection CAD）</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetCAD</td><td style="text-align:center">0xC5</td><td style="text-align:center">操作码</td><td style="text-align:center">操作码</td></tr></tbody></table></div><p><strong>该模式仅能在LoRa调制下使用</strong>。该模式下，模块会寻找LoRa的信号，寻找的Preamble长度由SetCadParams()操作来设置。在寻找结束后，模块会返回STDBY_RC模式。在寻找结束时，设备会产生“CadDone”中断，如果有效的信号被找到了，还会产生“CadDetected”中断</p><p><em>这个模式在需要先收后发的应用中非常实用</em></p><p>参数设置命令SetCadParams()</p><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetCadParams</td><td style="text-align:center">0x88</td><td style="text-align:center">操作码+cadSymbolNum</td><td style="text-align:center">操作码+0x01+cadSymbolNum</td></tr></tbody></table></div><p>其中，cadSymbolNum用于指明触发CAD的符号数（变相决定了寻找时长），定义如下</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215160705990.png" alt="image-20240215160705990"></p><p><strong><em>注意：用于CAD的符号数设置为1和2时，错误检测风险较高</em></strong></p><h2 id="基本设置相关"><a href="#基本设置相关" class="headerlink" title="基本设置相关"></a>基本设置相关</h2><h3 id="长Preamble模式"><a href="#长Preamble模式" class="headerlink" title="长Preamble模式"></a>长Preamble模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetLongPreamble</td><td style="text-align:center">0x98</td><td style="text-align:center">操作码+enable（0x01）</td><td style="text-align:center">-</td></tr></tbody></table></div><p><strong>该指令只能在LoRa模式或GFSK模式使用</strong>。这个指令对LoRa的影响是：会修改嗅探模式SetRxDutyCycle的行为，如果有preamble被侦测到，那么RX模式的时间会被拓展为 $sleepPeriod+2*RxPeriod$</p><h3 id="自动应答"><a href="#自动应答" class="headerlink" title="自动应答"></a>自动应答</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetAutoTx</td><td style="text-align:center">0x98</td><td style="text-align:center">操作码+time[15:8]+time[7:0]</td><td style="text-align:center">操作码+0x02+time[15:8]+time[7:0]</td></tr></tbody></table></div><p>部分通信协议要求在收到数据包后发送一个应答包，例如BLE要求在收到数据包后150us发送回应。这个命令就是用来设置自动回应用的。回应延时由time参数控制，由于从RX模式切换到TX模式需要时间，因此需要一个Offset来修正，通常$offset\approx 33us$。延时计算公式如下</p><script type="math/tex; mode=display">Tx_{Delay}=time+offset</script><p>time就是输入的time参数，该参数以毫秒为单位。time参数传递0x0001就是1us。</p><p>只要这个命令被发送了，那么每当设备进入Rx模式并收到了数据包后，就会自动切入Tx模式，在延时$Tx_{Delay}$后发送一个应答包，然后回到普通模式（例如STDBY_RC模式）。</p><p><em>note:user must issue the command SetAutoTx with 0x00 as the time argument</em></p><h3 id="传输完成后返回FS模式"><a href="#传输完成后返回FS模式" class="headerlink" title="传输完成后返回FS模式"></a>传输完成后返回FS模式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetAutoFS</td><td style="text-align:center">0x9E</td><td style="text-align:center">操作码+enable（0x01）</td><td style="text-align:center">操作码+0x01+enable（0x01）</td></tr></tbody></table></div><p>默认情况下，Rx和Tx模式结束后都会返回STDBY_RC模式，如果使用了此命令，那么则是返回至FS模式。这样可以减少切换至Rx或Tx模式的时间。</p><p>enbale用于控制该功能是否启用，0x01表示使能，0x00表示失能。</p><h3 id="包格式选择"><a href="#包格式选择" class="headerlink" title="包格式选择"></a>包格式选择</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetPacketType</td><td style="text-align:center">0x8A</td><td style="text-align:center">操作码+PacketType</td><td style="text-align:center">操作码+0x01+PacketType</td></tr></tbody></table></div><p>PacketType参数用于指定调制包格式，定义如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240211172403669.png" alt="image-20240211172403669"></p><p><em>例如：选择LoRa包格式，发送指令为0x8A+0x01</em></p><h3 id="设置包参数"><a href="#设置包参数" class="headerlink" title="设置包参数"></a>设置包参数</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetPacketParams</td><td style="text-align:center">0x8C</td><td style="text-align:center">操作码+param1…param7</td><td style="text-align:center">操作码+0x07+param1…param7</td></tr></tbody></table></div><p> 对于7个parameter，其作用如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215162800145.png" alt="image-20240215162800145"></p><p>在LoRa模式下，几个参数详细定义如下</p><p><strong>PreambleLength</strong>（参数1）</p><p>改Byte由两部分组成，LORA_PBLE_LEN_MANT[3:0] 和 LORA_PBLE_LEN_EXP[7:4]。mant表示尾数，exp表示指数，MANT占低四位，EXP占高四位，它们各自的范围都在[1,15]之间（注意不可为0）。preamble的长度和这两个参数的关系如下：</p><script type="math/tex; mode=display">preamble\ length=LORA\_PBLE\_LEN\_MANT*2^{LORA\_PBLE\_LEN\_EXP}</script><p>推荐的preamble长度是12 symbols，也就是将MANT设置为6，EXP设置为1，即可得到该值。</p><p><strong>HeaderType</strong>（参数2）</p><p>Header用于指明LoRa包中是否包含Header，详见LoRa包格式章节。</p><div class="table-container"><table><thead><tr><th style="text-align:center">宏定义关键词</th><th style="text-align:center">值</th><th style="text-align:center">Header模式</th></tr></thead><tbody><tr><td style="text-align:center">EXPLICIT_HEADER</td><td style="text-align:center">0x00</td><td style="text-align:center">EXPLICIT HEADER</td></tr><tr><td style="text-align:center">IMPLICIT_HEADER</td><td style="text-align:center">0x80</td><td style="text-align:center">IMPLICIT HEADER</td></tr></tbody></table></div><p><strong>PayloadLength</strong>（参数3）</p><p>该参数值的范围在 [1,255] 之间。用于指明载荷数据的长度。</p><p><strong>CRC</strong>（参数4）</p><p>该参数用于控制CRC使能与否</p><div class="table-container"><table><thead><tr><th style="text-align:center">宏定义关键词</th><th style="text-align:center">值</th><th style="text-align:center">CRC使能情况</th></tr></thead><tbody><tr><td style="text-align:center">LORA_CRC_ENABLE</td><td style="text-align:center">0x20</td><td style="text-align:center">CRC ENABLE</td></tr><tr><td style="text-align:center">LORA_CRC_DISABLE</td><td style="text-align:center">0x00</td><td style="text-align:center">CRC DISABLE</td></tr></tbody></table></div><h3 id="设置调制参数"><a href="#设置调制参数" class="headerlink" title="设置调制参数"></a>设置调制参数</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetModulationParams</td><td style="text-align:center">0x8B</td><td style="text-align:center">操作码+param[0]+param[1]+param[2]</td><td style="text-align:center">操作码+0x03+param[0]+param[1]+param[2]</td></tr></tbody></table></div><p>该指令的param参数在不同包格式下有不同意义，此处只介绍LoRa包格式下</p><ul><li>param[0]：扩展因子SF，值，宏定义和SF间关系如下表</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">宏定义</th><th style="text-align:center">值</th><th style="text-align:center">SF</th></tr></thead><tbody><tr><td style="text-align:center">LORA_SF_5</td><td style="text-align:center">0x50</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">LORA_SF_6</td><td style="text-align:center">0x60</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">LORA_SF_7</td><td style="text-align:center">0x70</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">LORA_SF_8</td><td style="text-align:center">0x80</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">LORA_SF_9</td><td style="text-align:center">0x90</td><td style="text-align:center">9</td></tr><tr><td style="text-align:center">LORA_SF_10</td><td style="text-align:center">0xA0</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">LORA_SF_11</td><td style="text-align:center">0xB0</td><td style="text-align:center">11</td></tr><tr><td style="text-align:center">LORA_SF_12</td><td style="text-align:center">0xC0</td><td style="text-align:center">12</td></tr></tbody></table></div><ul><li>param[1]：带宽BW，值，宏定义和SF间关系如下表</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">宏定义</th><th style="text-align:center">值</th><th style="text-align:center">BW (KHz)</th></tr></thead><tbody><tr><td style="text-align:center">LORA_BW_1600</td><td style="text-align:center">0x0A</td><td style="text-align:center">1625.0</td></tr><tr><td style="text-align:center">LORA_BW_800</td><td style="text-align:center">0x18</td><td style="text-align:center">812.5</td></tr><tr><td style="text-align:center">LORA_BW_400</td><td style="text-align:center">0x26</td><td style="text-align:center">406.25</td></tr><tr><td style="text-align:center">LORA_BW_200</td><td style="text-align:center">0x34</td><td style="text-align:center">203.125</td></tr></tbody></table></div><ul><li>param[2]：前向纠错编码率CR，CR，值，宏定义和SF间关系如下表<br>|     宏定义     |  值  | 编码率 |<br>| :——————: | :—: | :——: |<br>|  LORA_CR_4_5   | 0x01 |  4/5   |<br>|  LORA_CR_4_6   | 0x02 |  4/6   |<br>|  LORA_CR_4_7   | 0x03 |  4/7   |<br>|  LORA_CR_4_8   | 0x04 |  4/8   |<br>| LORA_CR_Li_4_5 | 0x05 |  4/5<em>  |<br>| LORA_CR_Li_4_6 | 0x06 |  4/6</em>  |<br>| LORA_CR_Li_4_7 | 0x07 |  4/8*  |</li></ul><p>上表中 * 代表长交织。</p><ul><li>以上参数详见 <em>LoRa基础</em> 篇</li></ul><h3 id="设置RF频率模式频率"><a href="#设置RF频率模式频率" class="headerlink" title="设置RF频率模式频率"></a>设置RF频率模式频率</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetRfFrequency</td><td style="text-align:center">0x86</td><td style="text-align:center">操作码+频率[23:16]+频率[15:8]+频率[7:0]</td><td style="text-align:center">操作码+0x03+频率[23:16]+频率[15:8]+频率[7:0]</td></tr></tbody></table></div><p>其中，频率(rfFrequency)参数与发射频率间公式如下：</p><script type="math/tex; mode=display">F_{RF}=\frac{F_{XOSC}}{2^{18}}*rfFrequency</script><p><em>例如：通过SPI发送0x86+0xB8+0x9D+0x89，即可设置rfFrequency=12098953（D），在外部晶振52MHz的情况下，$F_{RF}=2399999832Hz$，即，2.4GHz</em></p><h3 id="设置发送功率"><a href="#设置发送功率" class="headerlink" title="设置发送功率"></a>设置发送功率</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetTxParams</td><td style="text-align:center">0x8E</td><td style="text-align:center">操作码+power+rampTime</td><td style="text-align:center">操作码+0x02+power+rampTime</td></tr></tbody></table></div><p>power参数用于控制发射功率，SX1280支持的<strong>功率范围在-18~13dBm</strong>，其与power参数的关系公式如下</p><script type="math/tex; mode=display">P_{RF}=-18+power</script><p>也就是说，<strong>power参数的范围在[0,31]区间内。</strong></p><p>rampTime参数用于控制运放（PA）的上升时间，官方驱动中的宏定义、参数和时间对应表如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215142108205.png" alt="image-20240215142108205"></p><h3 id="设置数据缓冲区-buffer-基地址"><a href="#设置数据缓冲区-buffer-基地址" class="headerlink" title="设置数据缓冲区(buffer)基地址"></a>设置数据缓冲区(buffer)基地址</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetBufferBaseAddress</td><td style="text-align:center">0x8F</td><td style="text-align:center">操作码+txBaseAdress+rxBaseAdress</td><td style="text-align:center">操作码+0x02+txBaseAdress+rxBaseAdress</td></tr></tbody></table></div><p>数据缓冲区rx和tx共享256字节空间，地址从0x00到0xFF之间。详见硬件-Data buffer</p><h2 id="获取设备工作状态"><a href="#获取设备工作状态" class="headerlink" title="获取设备工作状态"></a>获取设备工作状态</h2><h3 id="获取设备状态"><a href="#获取设备状态" class="headerlink" title="获取设备状态"></a>获取设备状态</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">GetStatus</td><td style="text-align:center">0xC0</td><td style="text-align:center">操作码</td><td style="text-align:center">操作码</td></tr></tbody></table></div><p>该命令用于检索收发器的状态，任意模式（STDBY，RX，TX）都可以执行该命令。模块会在收到该操作码后返回1byte的设备状态码，状态码定义如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240216151615876.png" alt="image-20240216151615876"></p><h3 id="获取当前包格式"><a href="#获取当前包格式" class="headerlink" title="获取当前包格式"></a>获取当前包格式</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">GetPacketType</td><td style="text-align:center">0x03</td><td style="text-align:center">操作码+NOP+NOP</td><td style="text-align:center">操作码+0x01</td></tr></tbody></table></div><p>模块会在SPI命令的第二个NOP时，向主机发送当前包格式数据。UART通信下，在0x01发送完之后的空隙位返回包格式。</p><p>包格式如下</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240211172403669.png" alt="image-20240211172403669"></p><h3 id="获取Rx缓冲区状态"><a href="#获取Rx缓冲区状态" class="headerlink" title="获取Rx缓冲区状态"></a>获取Rx缓冲区状态</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">GetRxBufferStatus</td><td style="text-align:center">0x17</td><td style="text-align:center">操作码+NOP+NOP+NOP</td><td style="text-align:center">操作码+0x02</td></tr></tbody></table></div><p>该命令会先后返回最后收到的数据包的长度（rxPayloadLength）和Rx缓冲区的基地址（rxStartBufferPointer）。在发送操作码后，SPI命令间隔一个NOP后开始接收，先接收rxPayloadLength，再接收rxStartBufferPointer。UART命令在发送0x02后开始接收。</p><p><em>注意：当采用LoRa包格式，且设置为Implicit Header（Fixed-length）模式的时候，rxPayloadLength参数会始终返回0x00。因为在这个模式中不存在Header，因此无法提取Payload长度。在这种模式下，要得知Payload长度，直接通过寄存器操作命令，读取预先设置的寄存器即可。</em></p><h3 id="获取当前包状态"><a href="#获取当前包状态" class="headerlink" title="获取当前包状态"></a>获取当前包状态</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">GetPacketStatus</td><td style="text-align:center">0x1D</td><td style="text-align:center">操作码+NOP+NOP+NOP+NOP+NOP+NOP(6个 NOP)</td><td style="text-align:center">操作码+0x05</td></tr></tbody></table></div><p>使用此命令可以检索有关上次接收的数据包的信息，命令会在SPI模式的第一个NOP后，UART模式的长度码后，开始返回信息。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215164517698.png" alt="image-20240215164517698"></p><p>信息总共有5位。不同包格式返回的信息意义不同，如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215164255603.png" alt="image-20240215164255603"></p><p>对于LoRa包模式下，参数意义如下</p><ul><li>rssiSync：:Received Signal Strength Indicator，信号强度。一旦检测到同步地址，就会锁存rssiSync值，根据rssiSync可算出真实信号功率：$P=-(rssiSync)/2(dBm)$</li><li>snrPkt：信噪比，该值由最后一个数据包估计得出。实际SNR和该值换算关系是$SNR=snrPkt/4 (dB)$。如果SNR&lt;=0，那么RSSI值需要修正为：$RSSI_\{packet, real\} = RSSI_\{packet,measured\} – SNR_\{measured\}$</li></ul><h3 id="获取当前瞬时-RSSI-值"><a href="#获取当前瞬时-RSSI-值" class="headerlink" title="获取当前瞬时 RSSI 值"></a>获取当前瞬时 RSSI 值</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">Getressiinst</td><td style="text-align:center">0x1F</td><td style="text-align:center">操作码+NOP+NOP</td><td style="text-align:center">操作码+0x01</td></tr></tbody></table></div><p>该指令会在SPI模式第二个NOP，UART指令发送完0x01后，返回参数rssiInst参数，用于指明当前包的RSSI强度，参数值与强度对应关系如下：</p><script type="math/tex; mode=display">Signal Power=(-rssiInst)/2(dBm)</script><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><p>SX1280有16个中断源，每一个都可以单独启用或是屏蔽，每一个也都可以被映射至DIO1,DIO2,DIO3。中断寄存器和中断源如下表：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215170132747.png" alt="image-20240215170132747"></p><h3 id="设置DIO和中断映射、中断使能"><a href="#设置DIO和中断映射、中断使能" class="headerlink" title="设置DIO和中断映射、中断使能"></a>设置DIO和中断映射、中断使能</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th></tr></thead><tbody><tr><td style="text-align:center">SetDioIrqParams</td><td style="text-align:center">0x8D</td></tr></tbody></table></div><p>SPI指令顺序：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215170643786.png" alt="image-20240215170643786"></p><p>UART指令顺序</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240215170703777.png" alt="image-20240215170703777"></p><p><strong>irqMask参数</strong></p><p>​    该参数用于使能中断，1表示使能，0表示失能。参考上方中断寄存器和中断源表，其左边的bit对应的就是该参数。例如，要使能TxDone中断，就需要把irqMask的bit0设置为1，此时，产生中断时，IRQ Register中对应的 TxDone 才会被置1。</p><p><strong>dioMask参数</strong></p><p>​    该参数用于标明链接哪些中断到DIO引脚上。例如，如果想要TxDone中断产生时，DIO1引脚也被置1，就需要置位irqMask bit0 来使能中断，然后置位dio1Mask bit0 来链接该中断至DIO1。任意中断都可被映射至所有DIO，对于某一个DIO，当映射至该脚位的所有中断标志都为0的时候，IO输出0，否则输出1（或运算的逻辑）。</p><h3 id="获取中断状态"><a href="#获取中断状态" class="headerlink" title="获取中断状态"></a>获取中断状态</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">GetIrqStatus</td><td style="text-align:center">0x15</td><td style="text-align:center">操作码+NOP+NOP+NOP</td><td style="text-align:center">操作码+0x02</td></tr></tbody></table></div><p>该指令会在SPI模式第二个NOP，UART指令发送完0x02后，先后返回irqStatus[15:8]和irqStatus[7:0]。这是16位IRQ寄存器中的值的状态，对应本小节中最开始的寄存器表。</p><h3 id="清除中断标志"><a href="#清除中断标志" class="headerlink" title="清除中断标志"></a>清除中断标志</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">ClearIrqStatus</td><td style="text-align:center">0x97</td><td style="text-align:center">操作码+IRQMASK[15:8]+IRQMASK[7:0]</td><td style="text-align:center">操作码+0x02+IRQMASK[15:8]+IRQMASK[7:0]</td></tr></tbody></table></div><p>将需要清除的中断在对应的IRQMASK位中置1，即可清除中断。例如，如果IRQMASK的位0置1，则IRQ寄存器中的位0处的IRQ标志清0。</p><h2 id="测试命令"><a href="#测试命令" class="headerlink" title="测试命令"></a>测试命令</h2><h3 id="发送连续波"><a href="#发送连续波" class="headerlink" title="发送连续波"></a>发送连续波</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetTxContinuousWave</td><td style="text-align:center">0xD1</td><td style="text-align:center">操作码</td><td style="text-align:center">操作码</td></tr></tbody></table></div><p>该命令会使模块以设置的频率和功率发送连续的波。直到主机发送切换模式的命令之前，设备都会保持在发送连续波的模式中。这个命令对除了FLRC之外的所有包格式都适用。</p><h3 id="发送连续Preamble"><a href="#发送连续Preamble" class="headerlink" title="发送连续Preamble"></a>发送连续Preamble</h3><div class="table-container"><table><thead><tr><th style="text-align:center">操作</th><th style="text-align:center">操作码</th><th style="text-align:center">SPI模式指令顺序</th><th style="text-align:center">UART模式指令顺序</th></tr></thead><tbody><tr><td style="text-align:center">SetTxContinuousPreamble</td><td style="text-align:center">0xD2</td><td style="text-align:center">操作码</td><td style="text-align:center">操作码</td></tr></tbody></table></div><p>在GFSK包格式下，这个命令会使得天线发送交变的”0”和“1”。在LoRa模式下，这个命令会发送“0” （也就是LoRa的Preamble）。在主机发送更改模式的命令之前都会保持发送。</p><h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><h2 id="Data-Buffer"><a href="#Data-Buffer" class="headerlink" title="Data Buffer"></a>Data Buffer</h2><p>片上Data Buffer有256Byte，用于存放待发送数据或接收数据，其如何分配是可编程的。可使用官方提供的接口来指定TX和RX所用buffer的基地址。除睡眠模式外，任何工作模式均可访问该buffer。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240208020605152.png" alt="image-20240208020605152"></p><h3 id="接收数据对Data-Buffer的写入"><a href="#接收数据对Data-Buffer的写入" class="headerlink" title="接收数据对Data Buffer的写入"></a>接收数据对Data Buffer的写入</h3><p>接收数据时，数据由 rxBaseAddress （也就是图中蓝色区域，SetBufferBaseAddress()指向的地方）开始写入，向上生长。然后由 RxDataPointer 指向数据顶部地址。在一开始时，RxDataPointer = rxBaseAddress 。</p><h3 id="发送数据读取Data-Buffer的方式"><a href="#发送数据读取Data-Buffer的方式" class="headerlink" title="发送数据读取Data Buffer的方式"></a>发送数据读取Data Buffer的方式</h3><p>在切换到传输模式时，会先由setPacketParam() 中的 payLoadLength 参数指明待发送的数据长度，然后由数据指针 TxDataPointer 初始化为 TxBaseAddress 的地址，发送一个字节自增1，直到发送的字节等于payLoadLength为止。</p><h2 id="模拟信号收发前端"><a href="#模拟信号收发前端" class="headerlink" title="模拟信号收发前端"></a>模拟信号收发前端</h2><h3 id="接收"><a href="#接收" class="headerlink" title="接收"></a>接收</h3><ul><li><p><strong>自动增益控制(Automatic Gain Control AGC)</strong></p><p>用于确保接收机增益被设定成最佳的值来接收信号。可以通过以下寄存器配置：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120010721928.png" alt="image-20240120010721928" style="zoom:67%;" /></p></li></ul><p>人工配置增益时，寄存器数值于增益对应关系如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120010828585.png" alt="image-20240120010828585"></p><ul><li><strong>低功耗模式和高感模式</strong></li></ul><p>收模式分为低功耗模式和高灵敏度模式，通过配置寄存器0x891的bit6:7来控制。设置为3(11)的时候，为灵敏度模式，设置为0(00)的时候为低功耗模式</p><h3 id="片上RC震荡器"><a href="#片上RC震荡器" class="headerlink" title="片上RC震荡器"></a>片上RC震荡器</h3><p>片上RC振荡器有64KHz和13MHz两个频率，64KHz的用于休眠模式时钟，13MHz用于SPI或UART通信</p><p>RC振荡器需要在上电或环境温度发生变化时进行校准。校准使用：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先配置需要校准的，选项如下:</span></span><br><span class="line"> calibParam.ADCBulkPEnable = <span class="number">1</span>;</span><br><span class="line"> calibParam.ADCBulkNEnable = <span class="number">1</span>;</span><br><span class="line"> calibParam.ADCPulseEnable = <span class="number">1</span>;</span><br><span class="line"> calibParam.PLLEnable = <span class="number">1</span>;</span><br><span class="line"> calibParam.RC13MEnable = <span class="number">1</span>;</span><br><span class="line"> calibParam.RC64KEnable = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//然后调用函数校准</span></span><br><span class="line">Radio.Calibrate(calibParam); <span class="comment">//opcode 0x89</span></span><br></pre></td></tr></table></figure><h1 id="驱动LoRa的步骤"><a href="#驱动LoRa的步骤" class="headerlink" title="驱动LoRa的步骤"></a>驱动LoRa的步骤</h1><h2 id="初始化设备"><a href="#初始化设备" class="headerlink" title="初始化设备"></a>初始化设备</h2><ol><li>SX1280在上电复位时，会默认进入STDBY_RC模式，如果不处于该模式，必须使用 SetStandby 附加 0x00 参数，使其切换至STDBY_RC模式；UART指令为0x80+0x01+0x00；</li><li>使用 SetPacketType 附加LoRa包格式的参数（0x01），选择为LoRa数据包格式；UART指令顺序为0x8A+0x01+0x01；</li><li>设置RF的频率，通常设置为2.4G即可，其他值可参照操作码中 SetRfFrequency 章节；UART指令为：0x86+0x03+0xB8+0x9D+0x89，SPI下命令组合为：0x86+0xB8+0x9D+0x89</li><li>通过 SetBufferBaseAddress 指定数据buffer内rx和tx的基地址通过 SetModulationParams 设置LoRa的SF，BW 和 CR</li><li>通过 SetPacketParams 选择LoRa需要使用的Preamble长度（推荐12个符号），Header类型，数据长度，CRC类型，是否反转IQ</li><li>通过 SetTxParam 设置发信输出功率和ramp time</li><li>通过 SetDioIrqParams 使能和映射相应中断</li></ol><h2 id="发送信息"><a href="#发送信息" class="headerlink" title="发送信息"></a>发送信息</h2><ol><li>通过 WriteBuffer(offset, <em>数据) </em>(官方驱动API)* 将数据写入 Data Buffer，offset 的值通常设为 txBaseAddress 即可</li><li>通过 SetTx 发送数据，直到 TxDone 或是 RxTxTimeout 中断产生，代表发送结束</li><li>清除中断</li></ol><h2 id="接收消息"><a href="#接收消息" class="headerlink" title="接收消息"></a>接收消息</h2><ol><li>通过 SetRx 将设备置于接收模式，等待 RxDone 或 RxTxTimeout</li><li>通过 ClrIrqStatus 清除中断</li><li>通过 GetRxBufferStatus 取得 PayloadLengthRx 和 rxStartBufferPointer</li><li>使用 ReadBuffer(offset, PayloadLengthRx) 来读取接受的buffer数据，其中offset = rxStartBufferPointer</li></ol><h1 id="测距的步骤"><a href="#测距的步骤" class="headerlink" title="测距的步骤"></a>测距的步骤</h1><h1 id="官方驱动函数接口"><a href="#官方驱动函数接口" class="headerlink" title="官方驱动函数接口"></a>官方驱动函数接口</h1><h2 id="进入待机模式"><a href="#进入待机模式" class="headerlink" title="进入待机模式"></a>进入待机模式</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- **朝寄存器写入**</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line"><span class="title function_">WriteRegister</span><span class="params">(address,data)</span> <span class="comment">//opcode 0x18</span></span><br></pre></td></tr></table></figure><ul><li><strong>读取寄存器</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ReadRegister(address) <span class="comment">//opcode 0x19</span></span><br></pre></td></tr></table></figure><ul><li><strong>朝数据buffer写入</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WriteBuffer(offset,data) <span class="comment">//opcode 0x1A</span></span><br></pre></td></tr></table></figure><ul><li><strong>读取数据buffer</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ReadBuffer(offset) <span class="comment">//opcode 0x1B</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h1 id="供电的选择"><a href="#供电的选择" class="headerlink" title="供电的选择"></a>供电的选择</h1><p>在DCDC线路被并入供电线路时，可以使用如下指令进行配置供电：</p><p>配置参数对应的模式如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120040942451.png" alt="image-20240120040942451"></p><p>VBAT(RF天线供电)和VBAT_IO(数字IO供电)可以独立供电，如果都使用一个电压两个直接并一起即可。如果主控单片机IO口接受的电压很低，可以把VBAT_IO接到单片机的低压供电。举个例子，VBAT给3.3V供电，但是VBAT_IO只给1.8V，这样就可以和一个1.8V电压的单片机通讯。</p><h1 id="LoRa通信包和LoRa-Packet-Engine"><a href="#LoRa通信包和LoRa-Packet-Engine" class="headerlink" title="LoRa通信包和LoRa Packet Engine"></a>LoRa通信包和LoRa Packet Engine</h1><p><strong>在使用LoRa通信时，扩频因子（SF）和带宽（BW）必须在链路的发送侧和接收侧预已知，因为不同的扩频因子彼此正交</strong></p><p>使用LoRa调制解调时，灵敏度和速率如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120042818216.png" alt="image-20240120042818216"></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240120042827446.png" alt="image-20240120042827446"></p><h2 id="LoRa-通信包格式"><a href="#LoRa-通信包格式" class="headerlink" title="LoRa 通信包格式"></a>LoRa 通信包格式</h2><p>LoRa调制有两种包格式，无论是哪种格式，preamble都是必须的。preamble用于接受信号的时钟同步，其基础长度为4.25个symbol （LoRa自动添加），冗余长度可在[8, 61444.25] 个符号编程。因此preamble的符号长度为[12.25, 61444.25]范围内。在<em>LoRa基础</em>一章中，已经介绍LoRa的包长度为$2^{SF}$，也就是下面两图的总symbol数是$2^{SF}$个。</p><p>两种格式如下：</p><ul><li><p>Explicit Header Mode（default）</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240123175952581.png" alt="image-20240123175952581"></p><p>Explicit格式如图所示，相比于Implicit Header Mode，它多一个8个symbol长的header，其包含三部分：</p><ul><li>有效码字(payload) 长度</li><li>前向纠错码编码率</li><li>16bit-CRC是否使能</li></ul></li><li><p>Implicit Header Mode</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240123175412975.png" alt="image-20240123175412975"></p></li></ul><p>如果有效码字(payload)长度、前向纠错编码率、CRC使能状态已知，则可以省去header。此时有效码字(payload)长度、前向纠错编码率、CRC使能状态必须在通信链路双方进行手动预配置。</p><h2 id="LoRa测距包格式"><a href="#LoRa测距包格式" class="headerlink" title="LoRa测距包格式"></a>LoRa测距包格式</h2><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124010130578.png" alt="image-20240124010130578"></p><p>测距的包格式如上，其包含一个指定的测距Header，包含了测距指令+测距ID+2bit的CRC。Rangging symbols内包含测距同步信息和时钟同步信息。<strong>LoRa规定测距时SF的范围是[5, 10]，带宽BW范围是[400KHz, 1.6MHz].</strong></p><p>主机视角测距过程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124010545561.png" alt="image-20240124010545561"></p><p>从机视角测距过程如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124010621166.png" alt="image-20240124010621166"></p><h2 id="测距引擎"><a href="#测距引擎" class="headerlink" title="测距引擎"></a>测距引擎</h2><h3 id="测距误差的来源"><a href="#测距误差的来源" class="headerlink" title="测距误差的来源"></a>测距误差的来源</h3><ul><li><p>主、从设备的时钟频率不一致</p></li><li><p>数字和模拟调制模块对信号产生了延迟，这种延迟需要手动补偿</p></li><li><p>多径效应</p></li></ul><p>针对以上误差，官方建议以交换主从设备，测好几遍来进行补偿。一个测两遍的补偿例子如下：</p><script type="math/tex; mode=display">  T_{Master-Slave}=2T_{ToF}-T_{ERROR}</script><script type="math/tex; mode=display">  T_{Slave-Master}=2T_{ToF}-T_{ERROR}</script><script type="math/tex; mode=display">  T_{RTToF}=\frac{T_{Master-Slave}+T_{Slave-Master}}{2}</script><p>官方给出了交换测距次数和测距误差的关系图( SF9 1600 kHz 条件下)</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124020804572.png" alt="image-20240124020804572"></p><h3 id="距离分辨率"><a href="#距离分辨率" class="headerlink" title="距离分辨率"></a>距离分辨率</h3><p>LoRa的最小距离分辨率由如下公式计算得到：</p><script type="math/tex; mode=display">D_{LSB}=\frac{c}{2^{12}BW}</script><p>其中c是光速，BW是设置的带宽(与SF有关)</p><p>2倍测量距离（也就是飞行时间换算出的距离）和$D_{LSB}$可以由如下公式转换：</p><script type="math/tex; mode=display">D_{RTToF}=RangingRsult*D_{LSB}</script><h3 id="RxTx造成DELAY的补偿"><a href="#RxTx造成DELAY的补偿" class="headerlink" title="RxTx造成DELAY的补偿"></a>RxTx造成DELAY的补偿</h3><p>在初始测试时，需要在一段已知距离为D的空间内进行测距，来确定<strong>距离补偿误差</strong>。补偿误差可由如下公式计算：</p><script type="math/tex; mode=display">D_{uncalibrated}=((RangingResult * DLSB)/2)</script><script type="math/tex; mode=display">D_{calibration} = (D_{uncalibrated} - D) / 2</script><p>补偿时间可由如下公式进一步算得：</p><script type="math/tex; mode=display">Calibration = D_{calibration} / D_{LSB}</script><p>SEMTECH公司给出了一部分已知的Delay补偿值：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124014924763.png" alt="image-20240124014924763"></p><p><strong>在LoRa中，TxRx延迟的补偿是自动的，补偿值（Calibration）必须被写入RxTxDelay寄存器</strong></p><h3 id="时钟误差产生的测距误差的补偿"><a href="#时钟误差产生的测距误差的补偿" class="headerlink" title="时钟误差产生的测距误差的补偿"></a>时钟误差产生的测距误差的补偿</h3><p>LoRa在收发信号时，有一个频率误差指示器，由于射频信号的频率是参考各自的晶振频率产生的，因此可以使用LoRa频率误差指示器（FEI）对主设备和从设备之间的频率误差进行简单的频率误差测量，以准确评估定时误差和等效距离误差。其中官方给出的距离误差如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124015930104.png" alt="image-20240124015930104"></p><p>官方给出的BW和SF对测距精度的影响如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124020345728.png" alt="image-20240124020345728"></p><p>官方宣称在视线内，它具有和激光测距同等的精度。下图红色表示激光测距仪的误差范围。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124020611211.png" alt="image-20240124020611211"></p><h3 id="测距参数设计准则"><a href="#测距参数设计准则" class="headerlink" title="测距参数设计准则"></a>测距参数设计准则</h3><p>LoRa测距，SF和BW会影响广播时间(直接影响功耗)和测距距离，其关系图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124021355928.png" alt="image-20240124021355928"></p><p>可以看到SF影响测距距离，BW影响广播时间。当这俩个参数都最大时，测距可有最高精度。</p><h3 id="超短距离-lt-18-5m-的补偿"><a href="#超短距离-lt-18-5m-的补偿" class="headerlink" title="超短距离(&lt;18.5m)的补偿"></a>超短距离(&lt;18.5m)的补偿</h3><p>在小于18.5m时，LoRa测距会非常不精确，STMTECH给出了以下补偿公式：</p><script type="math/tex; mode=display">displayDistance = EXP( ( measuredDistance +2.4917 ) / 7.2262 ))</script><p>补偿效果图如下:</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124021812831.png" alt="image-20240124021812831"></p><h3 id="测距的计算："><a href="#测距的计算：" class="headerlink" title="测距的计算："></a>测距的计算：</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124022454968.png" alt="image-20240124022454968"></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124022730601.png" alt="image-20240124022730601"></p><p><strong>一个例子</strong>：配置测距参数如下，得到如下测距结果：</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124022121668.png"></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240124022331367.png"></center></td>    </tr></table>]]></content>
      
      
      <categories>
          
          <category> LoRa定位开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LoRa基础</title>
      <link href="/posts/4f0d2e64.html"/>
      <url>/posts/4f0d2e64.html</url>
      
        <content type="html"><![CDATA[<h1 id="LoRa的调制与扩频"><a href="#LoRa的调制与扩频" class="headerlink" title="LoRa的调制与扩频"></a>LoRa的调制与扩频</h1><p>由通信原理的知识知，在一个载波中，基带信息可以被承载在幅度、相位、和频率上。以2FSK调制为例，它使用两个不同频率的载波来分别表示不同的”0” 和 “1”。但是Chirp调制本身就进行了”扫频”, 那么如何来通过频率进行载波呢？由<em>扩频通信简介</em>一节中Chirp扩频知，Chirp频率是有个范围的，始于$f_0$，上下被$f_H,f_L$限制。<strong>LoRa将基带信息承载在这个$f_0$上面</strong>，也就是说，LoRa调制后Symbol的频率-时间图如下<strong>（LoRa采用线性Chirp）</strong>：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240117191531057.png" alt="image-20240117191531057"></p><p>信号在时域上振幅-时间图如下(这张图里面是down-chirp, 和上面那张up-chirp的图不是对应的关系)：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240117202641043.png" alt="image-20240117202641043"></p><p>论文[1]中作者把它称为：频移啁啾调制 Frequency Shift Chirp Modulation (FSCM) 大部分文章都是这么叫的，也有另外一些地方直接把这个称为PSK调制</p><h2 id="起始频率-f-0-的确定"><a href="#起始频率-f-0-的确定" class="headerlink" title="起始频率$f_0$的确定"></a>起始频率$f_0$的确定</h2><p><strong>LoRa的扩频因子SF不光决定了频率的展扩倍数，还决定了信道进制M</strong>(例如，8FSK的M=8，一个symbol包含$log_28=3$个bit)。M和SF的关系是：</p><script type="math/tex; mode=display">log_2M=SF</script><p>MFSK里，M为几就有几个不同的频率；对应地，LoRa里M为几就有几个不同的$f_0$。$M=2^{SF}$,也就是说，一个Chirp symbol 可以调进去SF个二进制位,共有$2^{SF}$种不同的$f_0$，我们把这一簇二级制数据记为一个向量<strong>w</strong>。举个例子，如果SF=4，那么一个Chirp symbol就有4个Bit，<strong>w</strong>就为</p><script type="math/tex; mode=display">w=[x,x,x,x]</script><p>其中x代表这一位可以是0也可以是1。那么第n个chirp symbol 承载的信息 $s(nT_s)$ 就可以用如下公式算得：</p><script type="math/tex; mode=display">s(nT_s)=\sum_{h=0}^{SF-1}w(nT_s)_h\cdot2^h</script><p><em>注意这个$w(nT_s)$是一个整体，下标h才代表取这个向量里面的第几个，这个$T_s$是符号持续时间，$nT_s$只是指这是第几个符号之后</em>。</p><p><strong>论文就是喜欢用弯弯绕绕的表达，这玩意其实就是把二进制序列换算成十进制了！</strong>，更详细地说，LoRa在调制的时候把二进制序列换算成了范围在$[0,2^{SF}-1]$的十进制，然后作为频率的偏移量调进载波里面。$s(nT_s)=\{0,1,2,3,4….,2^{SF}-1\}$</p><h2 id="调入载波"><a href="#调入载波" class="headerlink" title="调入载波"></a>调入载波</h2><p>现在，我们要把这个十进制数用成一个起始频率来表示。LoRa的码元持续时间$T_s$被规定成$T_s=\frac{2^{SF}}{Bandwidth}$，把这个$T_s$ 以B为采样频率离散化一下:</p><script type="math/tex; mode=display">T=\frac{1}{B}, T_s=2^{SF}\cdot T</script><p>同时再来个离散化的时间轴$k=0,1,2…2^{SF}-1$</p><p>那么频率相较于$f_L$的偏移量就可以通过$(s(nT_s)+k)\ mod\ 2^{SF}$算出来，这里巧妙的利用取余计算实现了频率顶到$f_H$又返回$f_L$的操作。整体的调后信号就可以被表示为：</p><script type="math/tex; mode=display">c(nT_s+kT)=\frac{1}{\sqrt{2^{SF}}}e^{j2\pi[(s(nT_s)+k)mod2^{SF}]\frac{k}{2^{SF}}}</script><h2 id="LoRa的规定："><a href="#LoRa的规定：" class="headerlink" title="LoRa的规定："></a>LoRa的规定：</h2><ul><li><p>扩频因子： LoRa规定SF必须在[7,12]之内</p></li><li><p>码元持续时间：规定$T_s=\frac{2^{SF}}{Bandwidth}$</p><p>通过码元持续时间可以计算符号速率$R_s=\frac{BW}{2^{SF}}$</p></li><li><p>LoRa支持冗余纠错，SEMTECH定义了一个$Rate Code=\frac{4}{4+CR}$,其中CR={1,2,3,4}</p><p>在rate code已知时，bit传输速率使用这个公式计算：</p><script type="math/tex; mode=display">R_b=SF*\frac{Rate Code}{\frac{2^{SF}}{BW}}</script></li></ul><h1 id="LoRa的解调"><a href="#LoRa的解调" class="headerlink" title="LoRa的解调"></a>LoRa的解调</h1><p>我们已知，LoRa调后的信号长这样：</p><script type="math/tex; mode=display">c(nT_s+kT)=\frac{1}{\sqrt{2^{SF}}}e^{j2\pi[(s(nT_s)+k)mod2^{SF}]\frac{k}{2^{SF}}}</script><p>这个信号可以看做是一个chirp信号被移动了一下初始相位，我们可以把它补偿回来以此来分离出chirp信号</p><script type="math/tex; mode=display">c(nT_s+kT)=\frac{1}{\sqrt{2^{SF}}}e^{j2\pi[(s(nT_s)+k)mod2^{SF}+k-k]\frac{k}{2^{SF}}}</script><p>这里$+k-k$并不影响函数结果，但是我们却可以分离出一个$+k$出来</p><script type="math/tex; mode=display">c(nT_s+kT)=\frac{1}{\sqrt{2^{SF}}}(e^{j2\pi \frac{k^2}{2^{SF}}})e^{j2\pi[(s(nT_s)+k)mod2^{SF}-k]\frac{k}{2^{SF}}}</script><p>在$(s(nT_s)+k)mod2^{SF}-k$中，这个取模运算是为了处理$(s(nT_s)+k)$超过了$f_H$的情况而使用的。但是这里整个时间尺度被-k之后，控制频率的分量将永远在$s(nT_s)$的范围内，不会超过$2^{SF}$,因此无需再取模计算。去掉mod画简后式子如下：</p><script type="math/tex; mode=display">c(nT_s+kT)=\frac{1}{\sqrt{2^{SF}}}(e^{j2\pi \frac{k^2}{2^{SF}}})e^{j2\pi[(s(nT_s)]\frac{k}{2^{SF}}}</script><p>此时，基础chirp信号被分离出来了。在这个例子中这里这是一个up chirp信号。只需要将现在的接收信号乘上它自己的基础chirp信号的共轭$e^{-j2\pi \frac{k^2}{2^{SF}}}$，就可以把这个chirp信号消除掉。up chirp的共轭恰好为down chirp, down chirp的共轭为up chirp。消除后信号为：</p><script type="math/tex; mode=display">c(nT_s+kT)=\frac{1}{\sqrt{2^{SF}}}e^{j2\pi[(s(nT_s)]\frac{k}{2^{SF}}}</script><p>此时接收信号的频率只与我们调入的信息$s(nT_s)$相关了，对这个函数进行FFT，然后寻找FFT结果的峰值位置，即可解调出$s(nT_s)$内包含的信息。</p><p>因此，LoRa的解调只需要将收到的信号与其基础chirp信号的共轭相干，就可以分离出调入了信息的信号。</p><div class="note warning simple"><p>LoRa的调制和解调详细过程是SEMTECH闭源的，<strong>但是可以确定的是SF确实直接对应一个symbol能调几个bit，以及LoRa采用初始频率的shift去调制</strong>。其他的细节仅摘自论文，里面有很多只能看个大概的地方，就比如那个论文[1]里提及讲Ts离散化的时候，间隔时间T=1/B，这是不符合奈奎斯特采样定律的。看个大概就好……</p></div><h1 id="LoRa的时钟同步"><a href="#LoRa的时钟同步" class="headerlink" title="LoRa的时钟同步"></a>LoRa的时钟同步</h1><p>LoRa的时钟同步原理官方并未披露，现有的各种文章各执一词，但是大体都是前面有一段Preamble发送标准的up-chirp信号来进行同步。下图是对LoRa的信号进行捕获得到的。</p><p>个人猜测LoRa配置的同步字(sync word)是作用于header的位置的(吧……)</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240118000915052.png" alt="image-20240118000915052"></p><h1 id="emmmm"><a href="#emmmm" class="headerlink" title="emmmm"></a>emmmm</h1><p>研究了几十个小时，啃了十来篇文章，LoRa有太多东西是SEMTECH闭源的了，每个文章都是点逆向工程又讲得不明不白的。下面[3]这个youtube视频算是所有不明不白的文章的一个核心思想吧，但是每篇文章细节是有差异的。</p><p>搞了这么多，只想说好奇心害死猫，这玩意只能别人告诉你怎么用你就怎么用就行了╮(╯﹏╰）╭</p><p>所以说，有些东西没人搞，那必然是有没人搞的理由吧哎……活该干不过NB-IOT</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ul><li>[1] L. Vangelista, “Frequency Shift Chirp Modulation: The LoRa Modulation,” in IEEE Signal Processing Letters, vol. 24, no. 12, pp. 1818-1821, Dec. 2017, doi: 10.1109/LSP.2017.2762960.</li><li>[2]  <a href="http://wiki.lahoud.fr/lib/exe/fetch.php?media=an1200.22.pdf">AN1200_22_Semtech_LoRa_Basics_v2_STD (lahoud.fr)</a></li><li>[3] <a href="https://www.youtube.com/watch?v=jHWepP1ZWTk">How LoRa Modulation really works - long range communication using chirps - YouTube</a></li><li>[4] H. Mroue, A. Nasser, B. Parrein, S. Hamrioui, E. Mona-Cruz and G. Rouyer, “Analytical and Simulation study for LoRa Modulation,” 2018 25th International Conference on Telecommunications (ICT), Saint-Malo, France, 2018, pp. 655-659, doi: 10.1109/ICT.2018.8464879.</li><li>[5] <a href="https://cea.hal.science/cea-02280910v2/document">Low Complexity LoRa Frame Synchronization for Ultra-Low Power Software-Defined Radios (hal.science)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> LoRa定位开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -频带通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩频通信简介</title>
      <link href="/posts/76361032.html"/>
      <url>/posts/76361032.html</url>
      
        <content type="html"><![CDATA[<div class="note warning simple"><p>本篇文章涉及通信原理知识，需要掌握一定通信原理基础，了解基带调制，频带调制，相干解调，码元(符号)传输速率，Power Spectrum Density 等</p></div><p><strong>有三种基本的扩频方式：</strong></p><ul><li>跳频扩频(Frequency-hopping speread spectrum)</li><li>直接序列扩频(Direct-sequence spread spectrum)</li><li>啁啾扩频/线性调频扩频(Chirp Spread Spectrum)</li></ul><h1 id="跳频技术-FHSS"><a href="#跳频技术-FHSS" class="headerlink" title="跳频技术(FHSS)"></a>跳频技术(FHSS)</h1><p>传统的无线通信系统，发射机和接收机工作在单次通信过程中，载频一般是保持不变；例如通信频率是900MHz, 那么通信将一直使用这个频率进行。</p><p>跳频（Frequency Hopping)系统则在单次通信中，载频在多个频率上跳变。如901MHz, 902MHz etc.</p><h2 id="跳频系统的调制与解调"><a href="#跳频系统的调制与解调" class="headerlink" title="跳频系统的调制与解调"></a>跳频系统的调制与解调</h2><p>跳频的调制发生在频带调制之前。如下图所示，原始数据D(t)经过信息调制器后变成基带信号；同时产生一个伪随机序列来控制载波信号按照一定的规律跳变。接收端需要使用产生本振信号(local oscillator)进行相干，产生一个中频信号，中频信号再进行检波/解调。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114232032360.png" alt="image-20240114232032360"></p><p>伪随机序列控制下的载波频率如下图所示，在不同频段间跳跃，这个图被称为跳频图案，通信双方可根据实时参数及密钥推算得到当前跳频图案</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114233026923.png" alt="image-20240114233026923" style="zoom:50%;" /></p><p>对于产生跳频，有如下要求：</p><ul><li>(同一跳频图案具有良好的自相关性(类似冲激函数)</li><li>不同跳频图案具有良好的互相关性(相关值趋近于0</li><li>跳频图案具有良好的随机性，足够大的线性复杂度(抗截获和抗破译)</li><li>周期长和图案多(减小系统中各用户间的频点碰撞概率</li></ul><p>跳频可以分为快跳频和慢跳频：</p><ul><li><p><strong>快跳频</strong>：跳频周期小于符号周期(是Ts的约数)，一个符号传输需要多个频率</p></li><li><p><strong>慢跳频</strong>：跳频周期大于符号周期(是Ts的倍数)，一个频率传输多个符号</p></li></ul><p><strong>跳频通信可以带来很强的抗干扰能力的原因：</strong></p><ul><li>在同一时刻，干扰信号频率只有与跳频信号所在<strong>频率相同</strong>，且干扰信号能量足够大时，才能造成严重的影响</li><li>由于跳频图案具有<strong>伪随机性，其周期可长达数十年甚至更长</strong>，跳变的频率可达成千上万个，因此可以有效地躲避干扰。因此除非破译跳频图案，否则仅在某一频率或<strong>某几个频率上长时间施放干扰是无济于事的</strong>。而在整个频段长时间施放干扰难度很大</li></ul><h2 id="多址通信"><a href="#多址通信" class="headerlink" title="多址通信"></a>多址通信</h2><p> 多址技术是指把处于不同地点的多个用户接入一个公共传输媒质，实现各用户之间通信的技术。</p><p>例如，常见的多址技术有频分多址（<a href="https://baike.baidu.com/item/FDMA?fromModule=lemma_inlink">FDMA</a>）、时分多址（<a href="https://baike.baidu.com/item/TDMA?fromModule=lemma_inlink">TDMA</a>）、码分多址（<a href="https://baike.baidu.com/item/CDMA?fromModule=lemma_inlink">CDMA</a>）。</p><ul><li>FDMA：不同用户使用不同的频率</li><li>TDMA：不同用户发送时刻不同，以不同时隙实现通信</li><li>CDMA：以不同的代码序列来实现通信，码分多址的基本思想是靠不同的地址码来区分的地址。每个配有不同的地址码，用户所发射的载波既受基带数字信号调制，又受地址码调制。</li></ul><p><strong>跳频技术可以实现跳频多址：</strong>不同的用户使用不同的跳频图案，这样可以实现共享频段资源进行通信。下图就是不同用户以不同图案通信时的跳频图案。跳频有一定几率碰撞(两个发射器使用了同一个频率)，就是下图绿色的点点。通过对伪随机码进行设计，可以把跳频碰撞的概率控制得很小。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114234609263.png" alt="image-20240114234609263" style="zoom:80%;" /></p><hr><h1 id="直接序列扩频-（DSSS）"><a href="#直接序列扩频-（DSSS）" class="headerlink" title="直接序列扩频 （DSSS）"></a>直接序列扩频 （DSSS）</h1><h2 id="DSSS信号的调制与解调"><a href="#DSSS信号的调制与解调" class="headerlink" title="DSSS信号的调制与解调"></a>DSSS信号的调制与解调</h2><p>直接序列扩频使用扩频码(又称扩频序列、PN序列)，直接对基带信号进行频域扩宽。如下图就是一个对Bipolar NRZ信号扩频调制的例子。绿色的是频率更高的扩频码，由扩频序列产生器产生。将基带信号与扩频码相异或，即可得到扩频信号。解调时，在本振信号相干得到中频信号后，再使用同样的扩频信号相干（这个过程称为解扩），即可恢复基带信号。</p><p><table>    <tr>        <td><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114235653121.png"></td>        <td><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114235840911.png"></td>    </tr></table><br>扩频的时域、频域对应图像如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240117192815452.png" alt="image-20240117192815452"></p><p>一个完整的扩频、解扩过程如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240115000300778.png" alt="image-20240115000300778"></p><h2 id="扩频增益-扩频因子-Spreading-Factor"><a href="#扩频增益-扩频因子-Spreading-Factor" class="headerlink" title="扩频增益/扩频因子  Spreading Factor"></a>扩频增益/扩频因子  Spreading Factor</h2><p>下列定义式中，Rc为直扩码速率；Rb为信息码速率。T是其对应单的持续时间（$T=1/f$）。</p><script type="math/tex; mode=display">G=10lg(\frac{扩频后的信号频率}{原始信号频率})=10lg(\frac{R_C}{R_b})=10lg(\frac{T_b}{T_C})</script><p><strong>G就是扩频增益。Rc/Rb即为扩频因子也称扩频码长度、带宽扩展因子</strong></p><p>例如，原始信号频率为1MHz，扩频后为128MHz，则扩频因子$SF=128$ <em>(<strong>部分地方直接认为扩频因子就是增益G</strong>，其实就是是否取对数的区别)</em></p><p>一般来说，扩频序列越长，扩频倍数越大，扩频增益越大</p><h2 id="直扩信号优点和及其原理"><a href="#直扩信号优点和及其原理" class="headerlink" title="直扩信号优点和及其原理"></a>直扩信号优点和及其原理</h2><h3 id="直扩通信抗窄带干扰的原理"><a href="#直扩通信抗窄带干扰的原理" class="headerlink" title="直扩通信抗窄带干扰的原理"></a>直扩通信抗窄带干扰的原理</h3><ul><li><p>一个原始的窄带信号，在经历扩频序列扩频之后，其能量不变(频域面积不变)，而频域展宽。</p></li><li><p>在传输时叠加了窄带噪声信号（例如来自其他通信系统的通信信号）</p></li><li>解调时再次用扩频码相干，延展频域扩频信号的恢复成窄带信号，而对叠加的窄带噪声信号，则是进行了一个扩频的过程。</li><li>在经历Bandpass filter的时候，噪声信号大部分功率可被滤除掉</li></ul><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/1705249284302.jpg" alt="1705249284302" style="zoom:50%;" /></p><h3 id="直扩通信抗多径效应的原理"><a href="#直扩通信抗多径效应的原理" class="headerlink" title="直扩通信抗多径效应的原理"></a>直扩通信抗多径效应的原理</h3><p>受多径效应影响，接受到的信号由多个不同时延和相位的原始信号构成（来自不同传输路径）</p><ul><li>在单一解扩支路的情况下，通过调整解扩码的同步，可以只解扩振幅最强的一路信号，其他路径的信号在通过滤波器时就会被滤除</li><li>在多个解扩支路的情况下，接收端解扩码分别和来自不同路径的信号对齐，将其解扩分离。最后再将解扩出的多路信号相位时延对齐后叠加，恢复原始信号。</li></ul><h3 id="直扩信号抗劫获的原理"><a href="#直扩信号抗劫获的原理" class="headerlink" title="直扩信号抗劫获的原理"></a>直扩信号抗劫获的原理</h3><p>直扩信号频带很宽，功率谱密度很低。如果在接收机输入端，直扩信号的功率谱密度低于或与接收机热噪声功率谱密度相当，则接收机一般发现不了直扩信号(隐藏在噪声中)。</p><h3 id="直扩信号的保密性"><a href="#直扩信号的保密性" class="headerlink" title="直扩信号的保密性"></a>直扩信号的保密性</h3><p>接收端只有采用与发射端相同且同步的扩频序列，才能实现对直扩信号的解扩，恢复出发送信号而扩频序列具有随机特性，破译难度大直接序列扩频技术首先应用于军事通信</p><h2 id="直接序列扩频下的码分多址"><a href="#直接序列扩频下的码分多址" class="headerlink" title="直接序列扩频下的码分多址"></a>直接序列扩频下的码分多址</h2><p>不同用户采用不同的扩频序列，<strong>而这个扩频序列恰好就充当了码分多址里面地址码的作用。对某一个用户来说，他的接收机只能解扩对应扩频序列的信号，而其他用户的信号因为扩频序列不同，无法解扩，类似噪声。</strong>所以虽然看起来直扩通信每个用户看似占用频率很宽，但由于是共享不是独享，所以频谱利用率也很高的</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240115004032089.png" alt="image-20240115004032089"></p><h2 id="扩频序列（扩频码）"><a href="#扩频序列（扩频码）" class="headerlink" title="扩频序列（扩频码）"></a>扩频序列（扩频码）</h2><p>由前面介绍的直扩信号可以看出，我们希望扩频序列：</p><ul><li>近似于随机信号有良好的自相关特性（可有效提取自身信号），很小的互相关特性（不同扩频序列间干扰小）</li><li>有尽可能多的码(序列个数，就是不重复的码长度)<br>下面是常见的扩频序列</li></ul><h3 id="m序列"><a href="#m序列" class="headerlink" title="m序列"></a>m序列</h3><p>m序列又称<strong>最长线性反馈移位寄存器序列</strong>，它是由<strong>多级移位寄存器</strong>通过线性反馈(就是下图这些摩尔加的抽头)产生的最长的码序列</p><p><strong>对于n级的移位寄存器发生器所能产生的最大长度的码序列为$2^n -1$位</strong>（没有全0状态，因为一旦去了全0状态就无法游动到其他状态）</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240115005914227.png" alt="image-20240115005914227"></p><p><strong>不同初始状态的移位寄存器，只会产生不同相位的扩频序列，无法产生不同的扩频序列；不同的扩频序列需要通过改变抽头结构来产生。</strong>而且并不是所有抽头组合都能产生m序列，只有特殊的组合才可以。</p><p><strong>m序列有良好的自相关性，较小的互相关性的优点</strong></p><p>对于n位的m序列，它能产生的序列个数可由如下公式计算：(其中$\Phi$是欧拉数)</p><script type="math/tex; mode=display">\frac{\Phi(2^n-1)}{n}</script><p>计算可以发现，5级移位寄存器产生的$2^5 -1=31$位长度的m序列，只有6个。</p><p>因此，<strong>m序列具有数量较少的缺点</strong></p><center><strong>总结：m序列，优点：有良好的自相关性，较小的互相关性；缺点：m序列具有数量较少的缺点</strong></center><h3 id="M序列"><a href="#M序列" class="headerlink" title="M序列"></a>M序列</h3><p>m序列又称<strong>最长非线性反馈移位寄存器序列</strong>。M序列在m序列的基础上，加入了全0状态检测器，使其离开全0状态。</p><p>对于n个移位寄存器，可以产生$2^n$位的M序列</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240115011351277.png" alt="image-20240115011351277"></p><p>n级M序列的个数可以用如下公式来计算</p><script type="math/tex; mode=display">2^{2^{n-1}-n}</script><p>在同为5级的时候，M序列可以产生2048个。<strong>因此M序列序列数量远大于m序列，但M序列的自相关性和互相关性又不如m序列</strong></p><h3 id="Gold序列"><a href="#Gold序列" class="headerlink" title="Gold序列"></a>Gold序列</h3><p>Gold序列将两个m序列作为优选对，把两个m序列的输出结果进行摩尔加。</p><p><strong>它具有良好的自相关性，不明显的互相关性，构造简单</strong>因此获得广泛应用</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240115011757069.png" alt="image-20240115011757069"></p><hr><h1 id="啁啾扩频-线性调频扩频-CSS"><a href="#啁啾扩频-线性调频扩频-CSS" class="headerlink" title="啁啾扩频/线性调频扩频(CSS)"></a>啁啾扩频/线性调频扩频(CSS)</h1><h2 id="啁啾-zh-overline-ou-ji-overline-u"><a href="#啁啾-zh-overline-ou-ji-overline-u" class="headerlink" title="啁啾($zh\overline ou ji\overline u$)"></a>啁啾($zh\overline ou ji\overline u$)</h2><p>啁啾是频率随时间增加（up-chirp）或减少（down-chirp）的信号，其基本定义式如下：</p><script type="math/tex; mode=display">x(t)=sin(\phi(t))</script><p>可以看到啁啾使用相位的移动来控制震荡频率，其相位是一个与 $t$ 有关的函数。在这个表达式下，瞬时角频率 $\omega$ 也就成了$\phi$ 的变化速率，即对$\phi(t)$求导。</p><script type="math/tex; mode=display">\omega(t)=\frac{d\phi(t)}{dt}</script><p>再根据 $\omega$ 和 $f$ 的关系，可以写出频率表达式：</p><script type="math/tex; mode=display">f(t)=\frac{\omega(t)}{2\pi}</script><p>类似于“角加速度”的概念，定义一个瞬时角啁啾系数(instantaneous angular chirpyness) $\gamma(t)$，单位：$rad/s^2$</p><script type="math/tex; mode=display">\gamma(t)=\frac{d^2\phi(t)}{dt}=\frac{d\omega(t)}{dt}</script><p>instantaneous angular chirpyness 定义的是瞬时角频率的变化率，将角频率转化为频率，就得到的 instantaneous ordinary chirpyness $c(t)$ (定义为瞬时频率的变化率)</p><script type="math/tex; mode=display">c(t)=\frac{\gamma(t)}{2\pi}=\frac{df(t)}{2\pi}</script><h3 id="线性啁啾"><a href="#线性啁啾" class="headerlink" title="线性啁啾"></a>线性啁啾</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240116114246398.png" alt="image-20240116114246398"></p><p>线性啁啾是指的瞬时频率$f(t)$随时间呈线性变化，下式中c是啁啾率(chirp rate)，是一个常数，表达式为$c=\frac{f_1-f_0}{T}=\frac{\Delta f}{\Delta t}$</p><script type="math/tex; mode=display">f(t)=ct+f_0</script><p>转化成基本定义式中的相位的表达形式:</p><script type="math/tex; mode=display">\phi(t)=\phi_0+2\pi\int_0^tf(\tau)d\tau=\phi_0+2\pi(\frac{c}{2}t^2+f_0t)</script><p>其中$\phi_0$表示初始相位</p><h3 id="指数啁啾"><a href="#指数啁啾" class="headerlink" title="指数啁啾"></a>指数啁啾</h3><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240116120520930.png" alt="image-20240116120520930"></p><p>指数啁啾的定义为：</p><script type="math/tex; mode=display">f(t)=f_0k^{\frac{t}{T}}</script><p>它具有如果$t_1$和$t_2$间时间间隔$T=t_2-t_1$是常数，$f_2(t)/f_1(t)$也是常数的性质。</p><p>相位表达式如下：</p><script type="math/tex; mode=display">\phi(t)=\phi_0+2\pi\int_0^tf(\tau)d\tau=\phi_0+2\pi f_0(\frac{k^{\frac{t}{T}}-1}{ln(k)})</script><h3 id="双曲啁啾"><a href="#双曲啁啾" class="headerlink" title="双曲啁啾"></a>双曲啁啾</h3><p>双曲啁啾定义为：</p><script type="math/tex; mode=display">f(t)=\frac{f_0f_1T}{(f_0-f_1)t+f_1T}</script><p>其相位表达式为：</p><script type="math/tex; mode=display">\phi(t)=\phi_0+2\pi\int_0^tf(\tau)d\tau=\phi_0+2\pi \frac{-f_0f_1T}{f_1-f_0}ln(1-\frac{f_1-f_0}{f_1T}t)</script><p>除此之外，还有对数啁啾，二次(^2)啁啾等，都是指的其频率的变化呈现对数、二次的关系。</p><h2 id="啁啾扩频"><a href="#啁啾扩频" class="headerlink" title="啁啾扩频"></a>啁啾扩频</h2><p>由上方啁啾信号得知，啁啾信号频率随时间变化，也就是说，在频域来看，这个信号自带“扫频/扩频” 的特性。</p><p><strong>如果说使用这个信号来作为载波，调制信号，那么这么信号的带宽也就被扩宽了。这就是啁啾扩频的原理。</strong>啁啾扩频利用了其频率在整个带宽上线性变化的正弦脉冲信号来传输信息，因此不需要任何伪随机序列。</p><p>举个例子，下图这个调制模块（802.15.4a中定义的超带宽UWB调制，Chirp-UWB）：二进制信号先转化为差分信号后进行QPSK调制，再对QPSK信号进行进行啁啾调制来扩频得到QCSK信号。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240116124709497.png" alt="image-20240116124709497"></p><p>在这个例子中，调后的一个啁啾符号（Chirp Symbol）由4个啁啾脉冲（subchirp）构成，每个啁啾脉冲又可以携带一个QPSK信号。从而一个啁啾符号可以携带4个QPSK码字。</p><p>由于不能让这个啁啾信号占用无限的带宽，所以会对这个啁啾载频规定一个频率上限$f_H$和一个频率下限$f_L$，以up-chirp为例，它由起始频率$f_0$开始，随时间攀升，如果在自身持续周期内超过了$f_H$，那它将回到$f_L$,再继续爬升如下图所示(下图横坐标为时间$t$,纵坐标为频率$f$)。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240117184131604.png" alt="image-20240117184131604"></p><hr><center> ---CHAPTER END--- </center>]]></content>
      
      
      <categories>
          
          <category> LoRa定位开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 频带通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Part1-CH3-数字电路的化简</title>
      <link href="/posts/37477dca.html"/>
      <url>/posts/37477dca.html</url>
      
        <content type="html"><![CDATA[<h1 id="最小化策略"><a href="#最小化策略" class="headerlink" title="最小化策略"></a>最小化策略</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><strong>包含名词：</strong></p><ul><li><p><strong>Literal:</strong> 字符，也就是有几个输入变量</p></li><li><p><strong>Implicant:</strong> 蕴含项，输入变量的不同组合,也就是卡诺图里面的圈，一个圈就是一种蕴含项。</p></li><li><p><strong>Prime implicant:</strong> 质蕴含项就是不能与其它蕴含项合并的蕴含项, 也就是，这个卡诺图的圈无法被更大的圈包裹.</p></li><li><p><strong>Cover:</strong> cover是不同implicant的组合，就是不同卡诺图的圈组合成的完整的表达式。</p></li><li><p><strong>Cost:</strong> 电路中所有 门的数量 + 门的输入信号的数量</p></li><li><p><strong>Essential prime implicant:</strong>  若函数的一个质蕴涵项包含有不被函数的其他任何质蕴涵项所包含的最小项，则此质蕴涵项被称为必要质蕴涵项。</p></li></ul><p><em>举个例子：</em></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114192019432.png" alt="image-20240114192019432"  /></p><p>$\overline x_2  x_3$就是一个essential prime implicant, 因为$m_{11}$没有被其他任何质蕴涵项包含。同理还有$x_3 \overline x_4$ 和$x_2 \overline x_3 x_4$.<br>在最少的cost的布尔方程里面，必要质蕴涵项是必须被包含的。写出必要质蕴涵项之后，发现$m_7$还没有被包含到。$m_7$可以被$\overline x_1  x_3$或者$\overline x_1  x_2 x_4$包含，取其最小成本$\overline x_1 x_3$,所以这个布尔函数最小cost是：</p><script type="math/tex; mode=display">f=\overline x_2  x_3 + x_3 \overline x_4+x_2 \overline x_3 x_4+\overline x_1 x_3</script><p><strong><em>因此，寻找最小cost电路的步骤是：</em></strong></p><ol><li><strong>写出$f$的所有质蕴含项*</strong></li><li><strong><em>找到所有必要质蕴涵项</em></strong></li><li><strong><em>如果必要质蕴含项就包含了函数的所有1状态，那这就是最小cost，如果没有，则需要添加cost最小的非必要质蕴涵项来覆盖所有1状态</em></strong></li></ol><hr><h1 id="多输出电路（Multiple-Output-circuits）"><a href="#多输出电路（Multiple-Output-circuits）" class="headerlink" title="多输出电路（Multiple-Output circuits）"></a><em>多输出电路（Multiple-Output circuits）</em></h1><p>在具有多个输出的电路中，让电路共享一些逻辑门可以有效减少cost</p><p>这要求在卡诺图化简中<strong>并不一定按照质蕴涵项去画圈，而是查看更多蕴含项，寻找相同的蕴含项</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114193447675.png" alt="image-20240114193447675"></p><p>如上图就有两个蕴含项可以被共享。CAD工具将会自动执行这个共享的过程。在人工设计（考试）的时候，多输出电路也可以通过尽量圈出可以共享的圈圈来减少cost</p><hr><h1 id="多级综合（Multilevel-Synthesis）—不考"><a href="#多级综合（Multilevel-Synthesis）—不考" class="headerlink" title="多级综合（Multilevel Synthesis）—不考"></a><em>多级综合（Multilevel Synthesis）—不考</em></h1><ul><li><p><strong>Fan-in (扇入):</strong> 一个逻辑门输入的数量</p></li><li><p><strong>Fan-out(扇出):</strong> 是指该模块直接调用的下级模块的个数。也就是一个逻辑门的输出连了几个下一级门。</p></li></ul><p>通常来说，使用CMOS制造的芯片存在扇入限制。通常希望AND门扇入小于5。可以使用分配率，把一层极的计算化成多个层级。下图就是两个例子</p><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114193819266.png"/></center></td>        <td><center><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114193752663.png"/></center></td>    </tr></table><hr><h1 id="立体表示法（Cubical-Representation）"><a href="#立体表示法（Cubical-Representation）" class="headerlink" title="立体表示法（Cubical Representation）"></a><em>立体表示法（Cubical Representation）</em></h1><p>卡诺图能表示的函数大小受到限制，为了处理更大的函数，需要使用立方体表示。</p><h2 id="构造立方体"><a href="#构造立方体" class="headerlink" title="构造立方体"></a>构造立方体</h2><p>有几个变量，就需要构造一个几维的立方体。立方体的顶点代表不同变量组合，立方体的边必须是含有一个x的组合，x代表0或者1。而面是含有两个x的组合。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114194225368.png" alt="image-20240114194225368"></p><p><em>以这个三维的cube为例，</em>首先标注顶点，000为顶点开始的三条边（三个变量所以三条边，x在三条边上换3个位置）需要分别为00x,0x0,x00,这三条边连接的另一个顶点将会是001,010,100（也就是x取和000相反的情况）。然后将新的顶点以同样的规则向外延伸，直至构成立方体。</p><h2 id="化简"><a href="#化简" class="headerlink" title="化简"></a>化简</h2><p>$f={000,010,100,101,110}$,将函数表达出来，并在顶点处标注出来。上图中的顶点围成了一个面和一条线，这个面是xx0，这条线是10x,所以这个函数可以被化简成</p><script type="math/tex; mode=display">f=\overline x_3 +x_1x_2</script><h2 id="四维立方体："><a href="#四维立方体：" class="headerlink" title="四维立方体："></a>四维立方体：</h2><p>四维立方体可以画成在一个大立方体内囊括了一个小立方体。这样每个顶点都有4条支路，可以安装上面的方法标注顶点了。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114194642317.png" alt="image-20240114194642317"></p><hr><h1 id="表格法化简（Quine-McCluskey-法）"><a href="#表格法化简（Quine-McCluskey-法）" class="headerlink" title="表格法化简（Quine-McCluskey 法）"></a><strong>表格法化简（Quine-McCluskey 法）</strong></h1><h3 id="Step1-–-计算质蕴涵项"><a href="#Step1-–-计算质蕴涵项" class="headerlink" title="Step1 – 计算质蕴涵项"></a>Step1 – 计算质蕴涵项</h3><ol><li>首先，把minterm表达式的项按只含0个“1”，只含1个“1”，只含2个“1”，…，只含n个“1”（n为变量个数）划分为不同的Group，并按“1”的数量排列（升序或降序均可）成表</li><li>准备一张新表。从含有最少数量的“1”的Group开始依次向下，将当前Group中的每一项与下一个Group的每一项比较。若两者只有一个变量不同，则将两项提取出来，并将不同的变量处用x标记，生成一个新的项。如果新的项在新表中已存在，则不执行动作；若不存在，则将这个新的项放到新表中的相应Group中。最后，在原表的两个Group中将提取的两项对应的“Subcube Covered”打上标记（打√）</li><li>在新生成的表中，重复2，直到新表中不存在只有一个变量不同的项为止</li><li><strong>所有未被打√的项，就是质蕴涵项。</strong></li></ol><p>例如：$f_{(x_1,…x_4)}=\sum m(0,4,8,10,11,12,13,15)$</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114195340907.png" alt="image-20240114195340907"></p><p>所以这个表达式的质蕴涵项就是</p><script type="math/tex; mode=display">P={10x0,101x,110x,1x11,11x1,xx00}</script><h3 id="Step2-–-找到必要质蕴含项"><a href="#Step2-–-找到必要质蕴含项" class="headerlink" title="Step2 – 找到必要质蕴含项"></a>Step2 – 找到必要质蕴含项</h3><p>把step1中找到的质蕴涵项列成表,如下图。发现0和4只有xx00表达了，所以xx00是必要质蕴涵项。把$P_6$挑出来</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114195622722.png" alt="image-20240114195622722"></p><h3 id="Step3-–-找到最小成本非必要质蕴涵项"><a href="#Step3-–-找到最小成本非必要质蕴涵项" class="headerlink" title="Step3 – 找到最小成本非必要质蕴涵项"></a>Step3 – 找到最小成本非必要质蕴涵项</h3><p>移除p6和被p6表达的0,4,8,12(被挑走了)，得到下表</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114195726090.png" alt="image-20240114195726090"></p><p>可以看到p1和p2的cost是相同的（他们都只有一个x），但是p1只能表述10, p2可以表述10，11，因此称p2支配 (dominates) p1。因此在这里选择p2。同理，可以选择p5。可以看到p4已经被p2和p5表达，因此这是不必要的。</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240114195754979.png" alt="image-20240114195754979"></p><h3 id="Step4-–-完成化简"><a href="#Step4-–-完成化简" class="headerlink" title="Step4 – 完成化简"></a>Step4 – 完成化简</h3><p>取step2的必要质蕴含项，step3选取的之蕴含项，<br>所以，化简后：$C={p_2,p_5,p_6 },f=x_1\overline x_2 x_3+x_1 x_2 x_4+\overline x_1 \overline x_3$</p><hr><center> ---CHAPTER END--- </center>]]></content>
      
      
      <categories>
          
          <category> 大三上 </category>
          
          <category> 数字电路设计与可靠性工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思写作</title>
      <link href="/posts/7ea537cf.html"/>
      <url>/posts/7ea537cf.html</url>
      
        <content type="html"><![CDATA[<h1 id="通用句子"><a href="#通用句子" class="headerlink" title="通用句子"></a>通用句子</h1><h2 id="太多啦"><a href="#太多啦" class="headerlink" title="太多啦"></a>太多啦</h2><ul><li>be flooded with 被淹没</li><li>be drowning in 被淹没</li><li>with the development of the technology =  we cannot deny the development of the technology</li></ul><h2 id="重要的"><a href="#重要的" class="headerlink" title="重要的"></a>重要的</h2><ul><li>compousory(adj. 义务的) 替换 important</li></ul><h2 id="形容人"><a href="#形容人" class="headerlink" title="形容人"></a>形容人</h2><ul><li>humble adj. 谦逊的</li><li>down to earth 接地气</li><li>entrepreneur n. 企业家  /ˌɒn.trə.prəˈnɜːr/； entrepreneurial adj. 具有企业家特质的;  </li></ul><h1 id="聊生活"><a href="#聊生活" class="headerlink" title="聊生活"></a>聊生活</h1><ul><li>cater to me 合我的口味</li><li>fishbone 鱼刺</li><li>promotional flyer 传单</li><li>cold calling 广告电话</li><li>rise the interesting 提高兴趣</li><li>slow pace life 慢节奏生活</li><li>be addicted to sth   对sth. 成瘾; addiction</li></ul><h1 id="聊工作，聊未来"><a href="#聊工作，聊未来" class="headerlink" title="聊工作，聊未来"></a>聊工作，聊未来</h1><ul><li>technics n.技术</li></ul><h2 id="工作职位"><a href="#工作职位" class="headerlink" title="工作职位"></a>工作职位</h2><ul><li>a man work for government 公务员</li><li>salesman 销售人员</li><li></li></ul><h1 id="自然环境"><a href="#自然环境" class="headerlink" title="自然环境"></a>自然环境</h1><h3 id="旅游景点"><a href="#旅游景点" class="headerlink" title="旅游景点"></a>旅游景点</h3><ul><li>scenic spot </li><li>tourist traction </li></ul><h1 id="答题技法"><a href="#答题技法" class="headerlink" title="答题技法"></a>答题技法</h1><h2 id="精细对比"><a href="#精细对比" class="headerlink" title="精细对比"></a>精细对比</h2><p>如果题目中有过去-现在；男-女；年轻-老；这类一定要分人群分两段作答。</p>]]></content>
      
      
      <categories>
          
          <category> 雅思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>雅思写作</title>
      <link href="/posts/7ea537cf.html"/>
      <url>/posts/7ea537cf.html</url>
      
        <content type="html"><![CDATA[<p>[施工中..]</p><h1 id="写作评分标准"><a href="#写作评分标准" class="headerlink" title="写作评分标准"></a>写作评分标准</h1><h1 id="Task1-小作文"><a href="#Task1-小作文" class="headerlink" title="Task1 小作文"></a>Task1 小作文</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="总纲"><a href="#总纲" class="headerlink" title="总纲"></a>总纲</h2><p>所有类型的小作文都遵循：</p><ul><li>第一段：一句话重述题目 + overall 开启图表概括。</li><li>body段：一般2-3段，根据图表聚类分段</li></ul><p>也就是总分结构</p><p>第一段的例文：</p><p><em>The diagram shows the different stages in the life cycle of a salmon. Overall, the cycle takes almost ten years and comprises three main stages, each of which takes place in a different aquatic environment.</em></p><h2 id="适用于所有类型小作文的注意事项"><a href="#适用于所有类型小作文的注意事项" class="headerlink" title="适用于所有类型小作文的注意事项"></a>适用于所有类型小作文的注意事项</h2><h3 id="数字的写法"><a href="#数字的写法" class="headerlink" title="数字的写法"></a>数字的写法</h3><p>数字1-9最好使用英文形式，10及以上的可以用数字（有两个数字组成的）</p><h2 id="流程图小作文-（flow-chart-process-tasks）"><a href="#流程图小作文-（flow-chart-process-tasks）" class="headerlink" title="流程图小作文 （flow chart / process tasks）"></a>流程图小作文 （flow chart / process tasks）</h2><p>顾名思义，流程图小作文会给一个工业加工流程、生物生长流程、机械运作流程等等流程，要求总结流程图中的信息（summarise the information），然后写出主要的流程（selecting and reporting the main features），并在相似的的地方呈现出比较。下图是一个例子</p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240303103536846.png" alt="image-20240303103536846" style="zoom:50%;" /></p><h3 id="段落构建"><a href="#段落构建" class="headerlink" title="段落构建"></a>段落构建</h3><ul><li>首先需要根据流程图将步骤（steps）分为几个阶段（stages），然后根据处理的流程中的变化，将阶段聚类分类成几个主要的阶段（main stages）。</li></ul><p><em>举个例子，这个流程图:</em></p><p><img src="https://cdn.jsdelivr.net/gh/kaysonz/BlogPicHost/imgs/image-20240303104910497.png" alt="image-20240303104910497" style="zoom:50%;" /></p><p><em>其整体可以分为在农田里面的，和进入工厂榨汁的两个main stages, 因此聚类步骤1-2在一起，3-7在一起。这些 main stages 使用能概括这个流程的上义词（umbrella terms）来概括</em></p><ul><li><p>使用首段结构：重述题目+overview概括流程。在此处概括时，需要包含：</p><ol><li><p><strong>有多少个步骤(这个可以用总的步骤时长代替，例如三文鱼的life cycle 总时长, 如果这里的步骤太多，则使说包含多少个main stages)</strong> </p></li><li><p><strong>流程对作用物的主要改变（如果前面说的时有几个步骤，这一步可以用一句话概括，如果上面说的main stages，则这里分别陈述main stages）；</strong></p></li></ol></li></ul><p>  <em>例如，main stages写法的例子：上例的两个main stage可以写为：the growing and harvesting of sugar cane &amp; the processing of the juice to produce sugar。因此，Overview可以写为：</em></p><p>  <em>另一个例子，使用有几个步骤+一句话概括：Overall, a geothermal power plant operates by using water as a medium to convert geothermal energy into electricity（流程对作用物的主要改变 ）, and the whole process consists of five steps.（有多少个步骤）</em></p><ul><li><p>根据 main stages 分出body段 （一般为2段）：</p><p>body段需要注意句首多样性：表明每个流程的连接词尽量变换位置，不能总是在句首。常用的变换方法在下方详细介绍。</p></li></ul><h2 id="饼图-Pie-chart"><a href="#饼图-Pie-chart" class="headerlink" title="饼图 (Pie chart)"></a>饼图 (Pie chart)</h2><h3 id="段落构建-1"><a href="#段落构建-1" class="headerlink" title="段落构建"></a>段落构建</h3><ul><li>横向对比，寻找时间维度数据差异；纵向对比，寻找对象尺度数据差异；</li><li>Body段，两个对象的饼分开讲。分为两段，一个对象占一段。在描述第一段时，</li></ul><h2 id="常用积累"><a href="#常用积累" class="headerlink" title="常用积累"></a>常用积累</h2><h3 id="数据相关"><a href="#数据相关" class="headerlink" title="数据相关"></a>数据相关</h3><ul><li>be expected to do - 预计如何（发展）<em>e.g. is expected to change considerably 预期有巨大的变化</em></li><li>remainder - (n. 剩余物) 数据余下的部分 <em>e.g. Australia used coal as the electricity source (50 units) and the remiander was produced from natural gas</em></li><li>have developed into main xxx - 在xxx中爬升到主导地位 <em>e.g. Oil have developed into main sources 石油能源中占比爬升到了主导地位</em></li><li>led the sector 在同类别中处于领先地位</li><li>prediction = projection；（projection有特指数据的拟合，预测之意）</li><li>gradually adv. 渐渐的，用于修饰小幅度数据变化</li></ul><p><strong>数据波动</strong></p><ul><li>increased from xx to xx, despite several falls 波动上升</li><li>fluctuation n. 波动；</li></ul><p><strong>数据上升</strong></p><p><strong>数据下降</strong></p><ul><li>downward adj. 下降；<em>e.g. The country’s economy is on a downward spiral.</em></li></ul><h3 id="生命周期相关"><a href="#生命周期相关" class="headerlink" title="生命周期相关"></a>生命周期相关</h3><ul><li>begin life as xxx (e.g. begin life as an egg) - 以xxx开启一段生命</li><li>Once it has xxx - 一旦达到xxx(条件)</li><li>feeds on sth. - 以sth.为食物</li></ul><h3 id="衔接相关"><a href="#衔接相关" class="headerlink" title="衔接相关"></a>衔接相关</h3><ul><li>notably, +引出峰值/关键点（垃圾食品可用）</li><li>in both sectors, +xxx 用于代指两个并行陈述的数据</li></ul><h3 id="age-group"><a href="#age-group" class="headerlink" title="age group"></a>age group</h3><ul><li>aged xx to xx</li><li></li></ul><h1 id="Task2-大作文"><a href="#Task2-大作文" class="headerlink" title="Task2 大作文"></a>Task2 大作文</h1><p>不同于小作文，大作文需要陈述自己的观点，自己的观点可以完全站A, 完全站B，也可以认为双边都要。观点表述要清晰。</p><h2 id="常用积累-1"><a href="#常用积累-1" class="headerlink" title="常用积累"></a>常用积累</h2><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><ul><li>combination of factors - 多因素的结合</li><li>alternative - n. 替代品；</li><li>renewable(s) n.可再生物（环境保护）</li><li>recyclable(s) n. 可回收物（环境保护）</li><li>additive n. 添加剂（垃圾食品可用）</li><li>staple diet n. 主要的饮食（垃圾食品/健康可用）</li><li>it is not surprising that xxx; xxx也不足为奇</li><li>the last resort 最后的措施</li><li>surely + 你觉得怎么去做的陈述句+？ 想必+……</li><li>this is not  the case 并非如此</li><li>approach the issue 解决问题</li><li>addressing these need 关注（解决）这些需求</li><li>earning a(n) + (adj.) + living 过上xxx的生活</li><li>many aspects of modern-day life 当代生活的方方面面</li><li>excessive (adj.) / go too far 过度了</li><li></li></ul><h3 id="发展，教育类"><a href="#发展，教育类" class="headerlink" title="发展，教育类"></a>发展，教育类</h3><ul><li>be taken too far - 操之过急</li><li>well-rounded - 全面发展的</li></ul><h2 id="问题解决讨论类"><a href="#问题解决讨论类" class="headerlink" title="问题解决讨论类"></a>问题解决讨论类</h2><p>作文题目提出一个问题，讨论/评价其解决的方法。</p><p>通常来说，这个解决方法一般是部分否认的，在可以在一开始去肯定这个观点正确（有效果）的地方。后续分析问题本质，来否认这个观点</p><h3 id="要聚焦于题目抛出的问题。"><a href="#要聚焦于题目抛出的问题。" class="headerlink" title="要聚焦于题目抛出的问题。"></a>要聚焦于题目抛出的问题。</h3><p><em>举个例子：</em></p><p><em>Some people say that the best way to improve public health is by increasing the number of sports facilities. Others, however, say that this would have little effect on public health and that other measures arerequired.<br>Discuss both these views and give your own opinion.</em></p><p><em>在这个题目中，<strong>不要被 sports 局限，需要聚焦于 public health</strong>，首先应当阐释 public health 差的<strong>原因</strong>才是重点，然后从产生这个问题的<strong>原因出发</strong>，<strong>去评价</strong> increasing the number of sports facilities 这个解决方案。最后导出自己的观点</em></p><h2 id="问多大程度同意-不同意"><a href="#问多大程度同意-不同意" class="headerlink" title="问多大程度同意/不同意"></a>问多大程度同意/不同意</h2><h3 id="表明同意程度的词"><a href="#表明同意程度的词" class="headerlink" title="表明同意程度的词"></a>表明同意程度的词</h3><p><strong>部分同意</strong></p><ul><li>partly agree</li></ul><p><strong>完全同意</strong></p><p><strong>完全不同意</strong></p>]]></content>
      
      
      <categories>
          
          <category> 雅思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
